{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "parser",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dynamicLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "standardOpsLength",
          "type": "uint256"
        }
      ],
      "name": "BadDynamicLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedInputs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bytecodeInputs",
          "type": "uint256"
        }
      ],
      "name": "BadOpInputsLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sourceOutputs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outputs",
          "type": "uint256"
        }
      ],
      "name": "CallOutputsExceedSource",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "constantsLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "constantRead",
          "type": "uint256"
        }
      ],
      "name": "OutOfBoundsConstantRead",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackTopIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackRead",
          "type": "uint256"
        }
      ],
      "name": "OutOfBoundsStackRead",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "sourceIndex",
          "type": "uint256"
        }
      ],
      "name": "SourceIndexOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stackMaxIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bytecodeAllocation",
          "type": "uint256"
        }
      ],
      "name": "StackAllocationMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stackIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bytecodeOutputs",
          "type": "uint256"
        }
      ],
      "name": "StackOutputsMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "relativeOffset",
          "type": "uint256"
        }
      ],
      "name": "StackSizingsNotMonotonic",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedInputs",
          "type": "uint256"
        }
      ],
      "name": "StackUnderflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stackHighwater",
          "type": "uint256"
        }
      ],
      "name": "StackUnderflowHighwater",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startBit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "TruncatedBitwiseEncoding",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        }
      ],
      "name": "TruncatedHeader",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        }
      ],
      "name": "TruncatedHeaderOffsets",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        }
      ],
      "name": "TruncatedSource",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedConstructionMetaHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualConstructionMetaHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedConstructionMetaHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedBytecodeHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualBytecodeHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedInterpreterBytecodeHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedBytecodeHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualBytecodeHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedParserBytecodeHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        }
      ],
      "name": "UnexpectedSources",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedBytecodeHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualBytecodeHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedStoreBytecodeHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        }
      ],
      "name": "UnexpectedTrailingOffsetBytes",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shiftAmount",
          "type": "uint256"
        }
      ],
      "name": "UnsupportedBitwiseShiftAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WriteError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroLengthBitwiseEncoding",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "interpreter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "store",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "parser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "DISPair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IInterpreterV2",
          "name": "interpreter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IInterpreterStoreV1",
          "name": "store",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "expression",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "io",
          "type": "bytes"
        }
      ],
      "name": "DeployedExpression",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "constants",
          "type": "uint256[]"
        }
      ],
      "name": "NewExpression",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256[]",
          "name": "constants",
          "type": "uint256[]"
        }
      ],
      "name": "deployExpression2",
      "outputs": [
        {
          "internalType": "contract IInterpreterV2",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectedConstructionMetaHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iInterpreter",
      "outputs": [
        {
          "internalType": "contract IInterpreterV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iParser",
      "outputs": [
        {
          "internalType": "contract IParserV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "integrityFunctionPointers",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162001cfd38038062001cfd8339810160408190526200003491620003fe565b805160208083015160408401516001600160a01b0380851660805280831660a052811660c0526060850151805193019290922090919060008051602062001cbd8339815191528114620000b7576040516358e779d360e01b815260008051602062001cbd8339815191526004820152602481018290526044015b60405180910390fd5b833f60008051602062001c9d83398151915281146200010257604051630fc2051760e11b815260008051602062001c9d833981519152600482015260248101829052604401620000ae565b833f7f2a4559222e2f3600b2d393715de8af57620439684463f745059c653bbfe3727f81146200016f576040516348616a9b60e01b81527f2a4559222e2f3600b2d393715de8af57620439684463f745059c653bbfe3727f600482015260248101829052604401620000ae565b833f60008051602062001cdd8339815191528114620001ba57604051630941d86960e21b815260008051602062001cdd833981519152600482015260248101829052604401620000ae565b7fb74b59464615509ba41ca66e536d6b2b154ee16c52dbcb77804915b9be416931338888888c60600151604051620001f795949392919062000534565b60405180910390a1731820a4b7618bde71dce8cdc73aab6c95905fad243b156200033957604080518082018252601581527f4945787072657373696f6e4465706c6f79657256330000000000000000000000602082015290516365ba36c160e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91309184916365ba36c1916200028e916004016200057d565b602060405180830381865afa158015620002ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d2919062000599565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152306044820152606401600060405180830381600087803b1580156200031f57600080fd5b505af115801562000334573d6000803e3d6000fd5b505050505b5050505050505050620005b3565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171562000382576200038262000347565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003b357620003b362000347565b604052919050565b80516001600160a01b0381168114620003d357600080fd5b919050565b60005b83811015620003f5578181015183820152602001620003db565b50506000910152565b600060208083850312156200041257600080fd5b82516001600160401b03808211156200042a57600080fd5b90840190608082870312156200043f57600080fd5b620004496200035d565b6200045483620003bb565b815262000463848401620003bb565b848201526200047560408401620003bb565b60408201526060830151828111156200048d57600080fd5b80840193505086601f840112620004a357600080fd5b825182811115620004b857620004b862000347565b620004cc601f8201601f1916860162000388565b92508083528785828601011115620004e357600080fd5b620004f481868501878701620003d8565b50606081019190915295945050505050565b6000815180845262000520816020860160208601620003d8565b601f01601f19169290920160200192915050565b6001600160a01b038681168252858116602083015284811660408301528316606082015260a060808201819052600090620005729083018462000506565b979650505050505050565b60208152600062000592602083018462000506565b9392505050565b600060208284031215620005ac57600080fd5b5051919050565b60805160a05160c05161169f620005fe600039600060dc015260008181610160015281816103b601526104140152600081816101870152818161039501526103f2015261169f6000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80638d6145911161005b5780638d61459114610123578063b7f1440314610138578063c19423bc1461015b578063f0cfdd371461018257600080fd5b80625f66131461008157806301ffc9a7146100b457806324376855146100d7575b600080fd5b6040517f7a89034fd7a33df88ca474ff2e413d8a2f425ed29f09866344ac6d6070a30d1281526020015b60405180910390f35b6100c76100c2366004611210565b6101a9565b60405190151581526020016100ab565b6100fe7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ab565b61012b610242565b6040516100ab91906112bd565b61014b6101463660046113ce565b610251565b6040516100ab94939291906114a4565b6100fe7f000000000000000000000000000000000000000000000000000000000000000081565b6100fe7f000000000000000000000000000000000000000000000000000000000000000081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb7f1440300000000000000000000000000000000000000000000000000000000148061023c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b606061024c610444565b905090565b60008060006060600061027d6040518060a00160405280606a8152602001611635606a91398888610686565b90507f7a1ee5e61e017b93877cfd8824938645c5f7d6f401b8c6d19cbe8f6cb9ec2cab3388886040516102b2939291906114ef565b60405180910390a1855187516000918291610355916020020160400160408051602c83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019091527effff0000000000000000000000000000000000000000000000000000000000600190920160e81b919091167f61000080600c6000396000f3000000000000000000000000000000000000000017815290600d820190565b91509150610364818a8a61098d565b600061036f836109d0565b90507f5c8bdfcfab3ec93dc2a3040de5d63b7dc99df02198f5def69ebf2d7eaffe2ee8337f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084886040516103e8959493929190611560565b60405180910390a17f00000000000000000000000000000000000000000000000000000000000000009a7f00000000000000000000000000000000000000000000000000000000000000009a5090985092965091945050505050565b60606112066000603590508091506000604051806106c001604052808467ffffffffffffffff1667ffffffffffffffff168152602001610a3e8152602001610ab88152602001610b1f8152602001610b1f8152602001610b298152602001610b328152602001610b4d8152602001610bf38152602001610bf38152602001610c4f8152602001610ccb8152602001610cd58152602001610b1f8152602001610b1f8152602001610b298152602001610ccb8152602001610ccb8152602001610ccb8152602001610ccb8152602001610ccb8152602001610cdf8152602001610d018152602001610d2b8152602001610b1f8152602001610cdf8152602001610b1f8152602001610b1f8152602001610d4d8152602001610b298152602001610b1f8152602001610b1f8152602001610d578152602001610d578152602001610b1f8152602001610b298152602001610b298152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610b298152602001610d6e8152602001610d788152602001610d788152602001610d788152509050606081905060358151146106745780516040517fc8b569010000000000000000000000000000000000000000000000000000000081526004810191909152602481018490526044015b60405180910390fd5b61067d81610d87565b94505050505090565b6060600061069384610e18565b9050602085016106a285610e36565b8160020267ffffffffffffffff8111156106be576106be6112d0565b6040519080825280601f01601f1916602001820160405280156106e8576020820181803683370190505b5092506020830160005b83811015610982576000806107078984611055565b9150915081845380600185015360028401935060006107288a848b5161107a565b9050600060186107388c876110e6565b03905060006107478c87611117565b600402820190505b808210156108cc578151601c81901a60020289015162ffffff821691601d1a9060f01c60008061077d888685565b915091508382146107d15760808801516040517fddf560710000000000000000000000000000000000000000000000000000000081526004810191909152602481018390526044810185905260640161066b565b875182111561082357608088015188516040517f2cab6bff000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044810183905260640161066b565b87518290038089526040890151111561088557608088015188516040808b015190517f1bc5ab0f00000000000000000000000000000000000000000000000000000000815260048101939093526024830191909152604482015260640161066b565b875181018089526020890151101561089f57875160208901525b60018111156108b057875160408901525b505050608085018051600101905250506004919091019061074f565b6108d68c87611130565b83602001511461092a5782602001516108ef8d88611130565b6040517f4d9c18dc0000000000000000000000000000000000000000000000000000000081526004810192909252602482015260440161066b565b825184146109715782516040517f4689f0b300000000000000000000000000000000000000000000000000000000815260048101919091526024810185905260440161066b565b5050600190930192506106f2915050565b505050509392505050565b80600182510160200281015b808210156109b4578151855260209485019490910190610999565b50506109cb6109c08390565b848451602001611149565b505050565b6000806000600d9050835160e81c61ffff168101846000f0915073ffffffffffffffffffffffffffffffffffffffff8216610a37576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5092915050565b8151600090819083908110610a9657608085015185516040517feaa16f33000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044810182905260640161066b565b8460400151811115610aaa57604085018190525b506000946001945092505050565b60008083606001518310610b1257608084015160608501516040517feb789454000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044810184905260640161066b565b5060009360019350915050565b5060029160019150565b50600191829150565b600080610b3f8484610b4d565b506001958695509350505050565b60008060ff80841690600885901c16808303610b95576040517f46f0ca6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610100610ba282846115a9565b1115610be4576040517f8abcdd3f000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161066b565b50600295600195509350505050565b60008061ffff831660ff811180610c08575080155b15610c42576040517fc1be16a10000000000000000000000000000000000000000000000000000000081526004810182905260240161066b565b5060019485945092505050565b60008060008360ff1690506000600885901c60ff169050600080610c778860a0015185611055565b9150915082811015610cbf576040517fff137108000000000000000000000000000000000000000000000000000000008152600481018290526024810184905260440161066b565b50969095509350505050565b5060009160019150565b60101c9160019150565b600080601083901c80610cf3576001610cf5565b805b95600195509350505050565b600080601083901c80610d15576002610d17565b805b90506002810615610cf35780600101610cf5565b600080601083901c80610d3f576001610d41565b805b95600095509350505050565b5060039160019150565b600080601083901c60018111610cf3576002610cf5565b5060029160009150565b60046001808316019250929050565b60606000825160020267ffffffffffffffff811115610da857610da86112d0565b6040519080825280601f01601f191660200182016040528015610dd2576020820181803683370190505b50905061ffff80196020850160208651028101600285015b81831015610e0c57805183518616908516178152602090920191600201610dea565b50939695505050505050565b60008151600003610e2b57506000919050565b506020015160001a90565b6000610e4182610e18565b905080156110135781516001600283020190811115610e8e57826040517f17f4bc5e00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b82516020828501810191850101602160027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff860102860181019086015b808210610fcf57815160f01c8481016004810185811115610f1957896040517e39ba5600000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b8151600081901a90600181901a90600281901a9060031a80821180610f3d57508281115b15610f78578d876040517feaf45f4f00000000000000000000000000000000000000000000000000000000815260040161066b9291906115e3565b505050600481028201878114610fbc578b6040517ffbb8027a00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b8397506002870396505050505050610ecb565b83831461100a57866040517fde67b29a00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b50505050505050565b60018251111561105157816040517fd013da5d00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b5050565b600080600061106485856110e6565b51600281901a9660039190911a95509350505050565b6110b36040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001606081525090565b506040805160c081018252838152602081018490529081019290925260608201526000608082015260a081019190915290565b6000806110f284610e18565b6002026001019050600061110685856111af565b949091019093016020019392505050565b60008061112484846110e6565b5160001a949350505050565b60008061113d84846110e6565b5160011a949350505050565b6020810680820384015b8085101561116e578451845260209485019490930192611153565b5080156111a9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600882021c808451168119865116178452505b50505050565b60006111ba83610e18565b82106111f65782826040517f30489add00000000000000000000000000000000000000000000000000000000815260040161066b9291906115e3565b50600202016003015161ffff1690565b61120e611605565b565b60006020828403121561122257600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461125257600080fd5b9392505050565b6000815180845260005b8181101561127f57602081850181015186830182015201611263565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006112526020830184611259565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611346576113466112d0565b604052919050565b600082601f83011261135f57600080fd5b8135602067ffffffffffffffff82111561137b5761137b6112d0565b8160051b61138a8282016112ff565b92835284810182019282810190878511156113a457600080fd5b83870192505b848310156113c3578235825291830191908301906113aa565b979650505050505050565b600080604083850312156113e157600080fd5b823567ffffffffffffffff808211156113f957600080fd5b818501915085601f83011261140d57600080fd5b8135602082821115611421576114216112d0565b611451817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116016112ff565b828152888284870101111561146557600080fd5b8282860183830137600092810182019290925290945085013591508082111561148d57600080fd5b5061149a8582860161134e565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152808516604084015250608060608301526114e56080830184611259565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff841681526000602060608184015261151f6060840186611259565b838103604085015284518082528286019183019060005b8181101561155257835183529284019291840191600101611536565b509098975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff80881683528087166020840152808616604084015280851660608401525060a060808301526113c360a0830184611259565b8082018082111561023c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040815260006115f66040830185611259565b90508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe0a3e0ab80b1f0b1f0b290b320b4d0bf30bf30c4f0ccb0cd50b1f0b1f0b290ccb0ccb0ccb0ccb0ccb0cdf0d010d2b0b1f0cdf0b1f0b1f0d4d0b290b1f0b1f0d570d570b1f0b290b290d570d570d570d570d570d570d570d570d570d570d570d570b290d6e0d780d780d78fe1a0cace04f932fe3baa0a1fc3bb7c5b1ebbc4845469c20c9fcde4725577d2d7a89034fd7a33df88ca474ff2e413d8a2f425ed29f09866344ac6d6070a30d12e1a894f5142cb769fd8648f39e34c167ddf978129dae05d551d1fea8263dede1",
    "sourceMap": "2756:6600:80:-:0;;;3263:2685;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3429:18;;3506:12;;;;;3558:13;;;;-1:-1:-1;;;;;3583:26:80;;;;;3619:14;;;;;3643:16;;;;3936:11;;;;3926:22;;;;;;;;3506:12;;3558:13;-1:-1:-1;;;;;;;;;;;3962:20:80;:54;3958:176;;4039:84;;-1:-1:-1;;;4039:84:80;;-1:-1:-1;;;;;;;;;;;4039:84:80;;;2569:25:291;2610:18;;;2603:34;;;2542:18;;4039:84:80;;;;;;;;3958:176;4298:24;;-1:-1:-1;;;;;;;;;;;4345:15:80;:52;4341:175;;4420:85;;-1:-1:-1;;;4420:85:80;;-1:-1:-1;;;;;;;;;;;4420:85:80;;;2569:25:291;2610:18;;;2603:34;;;2542:18;;4420:85:80;2395:248:291;4341:175:80;4662:18;;424:66:84;4703:9:80;:40;4699:145;;4766:67;;-1:-1:-1;;;4766:67:80;;424:66:84;4766:67:80;;;2569:25:291;2610:18;;;2603:34;;;2542:18;;4766:67:80;2395:248:291;4699:145:80;4992:19;;-1:-1:-1;;;;;;;;;;;5034:10:80;:42;5030:150;;5099:70;;-1:-1:-1;;;5099:70:80;;-1:-1:-1;;;;;;;;;;;5099:70:80;;;2569:25:291;2610:18;;;2603:34;;;2542:18;;5099:70:80;2395:248:291;5030:150:80;5337:87;5345:10;5365:11;5387:5;5403:6;5412;:11;;;5337:87;;;;;;;;;;:::i;:::-;;;;;;;;254:42:56;5700:38:80;:42;5696:246;;5864:37;;;;;;;;;;;;;;;;5832:70;;-1:-1:-1;;;5832:70:80;;254:42:56;;5758:41:80;;5825:4;;254:42:56;;5832:31:80;;:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5758:173;;-1:-1:-1;;;;;;5758:173:80;;;;;;;-1:-1:-1;;;;;4177:15:291;;;5758:173:80;;;4159:34:291;4209:18;;;4202:34;5912:4:80;4252:18:291;;;4245:43;4094:18;;5758:173:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5696:246;3344:2604;;;;;;;3263:2685;2756:6600;;14:127:291;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:252;217:2;211:9;259:4;247:17;;-1:-1:-1;;;;;279:34:291;;315:22;;;276:62;273:88;;;341:18;;:::i;:::-;377:2;370:22;146:252;:::o;403:275::-;474:2;468:9;539:2;520:13;;-1:-1:-1;;516:27:291;504:40;;-1:-1:-1;;;;;559:34:291;;595:22;;;556:62;553:88;;;621:18;;:::i;:::-;657:2;650:22;403:275;;-1:-1:-1;403:275:291:o;683:177::-;762:13;;-1:-1:-1;;;;;804:31:291;;794:42;;784:70;;850:1;847;840:12;784:70;683:177;;;:::o;865:250::-;950:1;960:113;974:6;971:1;968:13;960:113;;;1050:11;;;1044:18;1031:11;;;1024:39;996:2;989:10;960:113;;;-1:-1:-1;;1107:1:291;1089:16;;1082:27;865:250::o;1120:1270::-;1262:6;1293:2;1336;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;1379:16;;-1:-1:-1;;;;;1444:14:291;;;1441:34;;;1471:1;1468;1461:12;1441:34;1494:22;;;;1550:4;1532:16;;;1528:27;1525:47;;;1568:1;1565;1558:12;1525:47;1594:21;;:::i;:::-;1638:33;1668:2;1638:33;:::i;:::-;1631:5;1624:48;1704:42;1742:2;1738;1734:11;1704:42;:::i;:::-;1699:2;1692:5;1688:14;1681:66;1779:42;1817:2;1813;1809:11;1779:42;:::i;:::-;1774:2;1767:5;1763:14;1756:66;1861:2;1857;1853:11;1847:18;1890:2;1880:8;1877:16;1874:36;;;1906:1;1903;1896:12;1874:36;1937:8;1933:2;1929:17;1919:27;;;1984:7;1977:4;1973:2;1969:13;1965:27;1955:55;;2006:1;2003;1996:12;1955:55;2035:2;2029:9;2057:2;2053;2050:10;2047:36;;;2063:18;;:::i;:::-;2105:53;2148:2;2129:13;;-1:-1:-1;;2125:27:291;2121:36;;2105:53;:::i;:::-;2092:66;;2181:2;2174:5;2167:17;2221:7;2216:2;2211;2207;2203:11;2199:20;2196:33;2193:53;;;2242:1;2239;2232:12;2193:53;2255:67;2319:2;2314;2307:5;2303:14;2298:2;2294;2290:11;2255:67;:::i;:::-;-1:-1:-1;2349:2:291;2338:14;;2331:29;;;;2342:5;1120:1270;-1:-1:-1;;;;;1120:1270:291:o;2648:270::-;2689:3;2727:5;2721:12;2754:6;2749:3;2742:19;2770:76;2839:6;2832:4;2827:3;2823:14;2816:4;2809:5;2805:16;2770:76;:::i;:::-;2900:2;2879:15;-1:-1:-1;;2875:29:291;2866:39;;;;2907:4;2862:50;;2648:270;-1:-1:-1;;2648:270:291:o;2923:578::-;-1:-1:-1;;;;;3220:15:291;;;3202:34;;3272:15;;;3267:2;3252:18;;3245:43;3324:15;;;3319:2;3304:18;;3297:43;3376:15;;3371:2;3356:18;;3349:43;3182:3;3423;3408:19;;3401:32;;;3145:4;;3450:45;;3475:19;;3467:6;3450:45;:::i;:::-;3442:53;2923:578;-1:-1:-1;;;;;;;2923:578:291:o;3506:219::-;3655:2;3644:9;3637:21;3618:4;3675:44;3715:2;3704:9;3700:18;3692:6;3675:44;:::i;:::-;3667:52;3506:219;-1:-1:-1;;;3506:219:291:o;3730:184::-;3800:6;3853:2;3841:9;3832:7;3828:23;3824:32;3821:52;;;3869:1;3866;3859:12;3821:52;-1:-1:-1;3892:16:291;;3730:184;-1:-1:-1;3730:184:291:o;3919:375::-;2756:6600:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007c5760003560e01c80638d6145911161005b5780638d61459114610123578063b7f1440314610138578063c19423bc1461015b578063f0cfdd371461018257600080fd5b80625f66131461008157806301ffc9a7146100b457806324376855146100d7575b600080fd5b6040517f7a89034fd7a33df88ca474ff2e413d8a2f425ed29f09866344ac6d6070a30d1281526020015b60405180910390f35b6100c76100c2366004611210565b6101a9565b60405190151581526020016100ab565b6100fe7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ab565b61012b610242565b6040516100ab91906112bd565b61014b6101463660046113ce565b610251565b6040516100ab94939291906114a4565b6100fe7f000000000000000000000000000000000000000000000000000000000000000081565b6100fe7f000000000000000000000000000000000000000000000000000000000000000081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb7f1440300000000000000000000000000000000000000000000000000000000148061023c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b606061024c610444565b905090565b60008060006060600061027d6040518060a00160405280606a8152602001611635606a91398888610686565b90507f7a1ee5e61e017b93877cfd8824938645c5f7d6f401b8c6d19cbe8f6cb9ec2cab3388886040516102b2939291906114ef565b60405180910390a1855187516000918291610355916020020160400160408051602c83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019091527effff0000000000000000000000000000000000000000000000000000000000600190920160e81b919091167f61000080600c6000396000f3000000000000000000000000000000000000000017815290600d820190565b91509150610364818a8a61098d565b600061036f836109d0565b90507f5c8bdfcfab3ec93dc2a3040de5d63b7dc99df02198f5def69ebf2d7eaffe2ee8337f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084886040516103e8959493929190611560565b60405180910390a17f00000000000000000000000000000000000000000000000000000000000000009a7f00000000000000000000000000000000000000000000000000000000000000009a5090985092965091945050505050565b60606112066000603590508091506000604051806106c001604052808467ffffffffffffffff1667ffffffffffffffff168152602001610a3e8152602001610ab88152602001610b1f8152602001610b1f8152602001610b298152602001610b328152602001610b4d8152602001610bf38152602001610bf38152602001610c4f8152602001610ccb8152602001610cd58152602001610b1f8152602001610b1f8152602001610b298152602001610ccb8152602001610ccb8152602001610ccb8152602001610ccb8152602001610ccb8152602001610cdf8152602001610d018152602001610d2b8152602001610b1f8152602001610cdf8152602001610b1f8152602001610b1f8152602001610d4d8152602001610b298152602001610b1f8152602001610b1f8152602001610d578152602001610d578152602001610b1f8152602001610b298152602001610b298152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610d578152602001610b298152602001610d6e8152602001610d788152602001610d788152602001610d788152509050606081905060358151146106745780516040517fc8b569010000000000000000000000000000000000000000000000000000000081526004810191909152602481018490526044015b60405180910390fd5b61067d81610d87565b94505050505090565b6060600061069384610e18565b9050602085016106a285610e36565b8160020267ffffffffffffffff8111156106be576106be6112d0565b6040519080825280601f01601f1916602001820160405280156106e8576020820181803683370190505b5092506020830160005b83811015610982576000806107078984611055565b9150915081845380600185015360028401935060006107288a848b5161107a565b9050600060186107388c876110e6565b03905060006107478c87611117565b600402820190505b808210156108cc578151601c81901a60020289015162ffffff821691601d1a9060f01c60008061077d888685565b915091508382146107d15760808801516040517fddf560710000000000000000000000000000000000000000000000000000000081526004810191909152602481018390526044810185905260640161066b565b875182111561082357608088015188516040517f2cab6bff000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044810183905260640161066b565b87518290038089526040890151111561088557608088015188516040808b015190517f1bc5ab0f00000000000000000000000000000000000000000000000000000000815260048101939093526024830191909152604482015260640161066b565b875181018089526020890151101561089f57875160208901525b60018111156108b057875160408901525b505050608085018051600101905250506004919091019061074f565b6108d68c87611130565b83602001511461092a5782602001516108ef8d88611130565b6040517f4d9c18dc0000000000000000000000000000000000000000000000000000000081526004810192909252602482015260440161066b565b825184146109715782516040517f4689f0b300000000000000000000000000000000000000000000000000000000815260048101919091526024810185905260440161066b565b5050600190930192506106f2915050565b505050509392505050565b80600182510160200281015b808210156109b4578151855260209485019490910190610999565b50506109cb6109c08390565b848451602001611149565b505050565b6000806000600d9050835160e81c61ffff168101846000f0915073ffffffffffffffffffffffffffffffffffffffff8216610a37576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5092915050565b8151600090819083908110610a9657608085015185516040517feaa16f33000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044810182905260640161066b565b8460400151811115610aaa57604085018190525b506000946001945092505050565b60008083606001518310610b1257608084015160608501516040517feb789454000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044810184905260640161066b565b5060009360019350915050565b5060029160019150565b50600191829150565b600080610b3f8484610b4d565b506001958695509350505050565b60008060ff80841690600885901c16808303610b95576040517f46f0ca6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610100610ba282846115a9565b1115610be4576040517f8abcdd3f000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260440161066b565b50600295600195509350505050565b60008061ffff831660ff811180610c08575080155b15610c42576040517fc1be16a10000000000000000000000000000000000000000000000000000000081526004810182905260240161066b565b5060019485945092505050565b60008060008360ff1690506000600885901c60ff169050600080610c778860a0015185611055565b9150915082811015610cbf576040517fff137108000000000000000000000000000000000000000000000000000000008152600481018290526024810184905260440161066b565b50969095509350505050565b5060009160019150565b60101c9160019150565b600080601083901c80610cf3576001610cf5565b805b95600195509350505050565b600080601083901c80610d15576002610d17565b805b90506002810615610cf35780600101610cf5565b600080601083901c80610d3f576001610d41565b805b95600095509350505050565b5060039160019150565b600080601083901c60018111610cf3576002610cf5565b5060029160009150565b60046001808316019250929050565b60606000825160020267ffffffffffffffff811115610da857610da86112d0565b6040519080825280601f01601f191660200182016040528015610dd2576020820181803683370190505b50905061ffff80196020850160208651028101600285015b81831015610e0c57805183518616908516178152602090920191600201610dea565b50939695505050505050565b60008151600003610e2b57506000919050565b506020015160001a90565b6000610e4182610e18565b905080156110135781516001600283020190811115610e8e57826040517f17f4bc5e00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b82516020828501810191850101602160027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff860102860181019086015b808210610fcf57815160f01c8481016004810185811115610f1957896040517e39ba5600000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b8151600081901a90600181901a90600281901a9060031a80821180610f3d57508281115b15610f78578d876040517feaf45f4f00000000000000000000000000000000000000000000000000000000815260040161066b9291906115e3565b505050600481028201878114610fbc578b6040517ffbb8027a00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b8397506002870396505050505050610ecb565b83831461100a57866040517fde67b29a00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b50505050505050565b60018251111561105157816040517fd013da5d00000000000000000000000000000000000000000000000000000000815260040161066b91906112bd565b5050565b600080600061106485856110e6565b51600281901a9660039190911a95509350505050565b6110b36040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001606081525090565b506040805160c081018252838152602081018490529081019290925260608201526000608082015260a081019190915290565b6000806110f284610e18565b6002026001019050600061110685856111af565b949091019093016020019392505050565b60008061112484846110e6565b5160001a949350505050565b60008061113d84846110e6565b5160011a949350505050565b6020810680820384015b8085101561116e578451845260209485019490930192611153565b5080156111a9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600882021c808451168119865116178452505b50505050565b60006111ba83610e18565b82106111f65782826040517f30489add00000000000000000000000000000000000000000000000000000000815260040161066b9291906115e3565b50600202016003015161ffff1690565b61120e611605565b565b60006020828403121561122257600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461125257600080fd5b9392505050565b6000815180845260005b8181101561127f57602081850181015186830182015201611263565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006112526020830184611259565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611346576113466112d0565b604052919050565b600082601f83011261135f57600080fd5b8135602067ffffffffffffffff82111561137b5761137b6112d0565b8160051b61138a8282016112ff565b92835284810182019282810190878511156113a457600080fd5b83870192505b848310156113c3578235825291830191908301906113aa565b979650505050505050565b600080604083850312156113e157600080fd5b823567ffffffffffffffff808211156113f957600080fd5b818501915085601f83011261140d57600080fd5b8135602082821115611421576114216112d0565b611451817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116016112ff565b828152888284870101111561146557600080fd5b8282860183830137600092810182019290925290945085013591508082111561148d57600080fd5b5061149a8582860161134e565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152808516604084015250608060608301526114e56080830184611259565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff841681526000602060608184015261151f6060840186611259565b838103604085015284518082528286019183019060005b8181101561155257835183529284019291840191600101611536565b509098975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff80881683528087166020840152808616604084015280851660608401525060a060808301526113c360a0830184611259565b8082018082111561023c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040815260006115f66040830185611259565b90508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe0a3e0ab80b1f0b1f0b290b320b4d0bf30bf30c4f0ccb0cd50b1f0b1f0b290ccb0ccb0ccb0ccb0ccb0cdf0d010d2b0b1f0cdf0b1f0b1f0d4d0b290b1f0b1f0d570d570b1f0b290b290d570d570d570d570d570d570d570d570d570d570d570d570b290d6e0d780d780d78",
    "sourceMap": "2756:6600:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8624:124;;;2042:66;160:25:291;;148:2;133:18;8624:124:80;;;;;;;;5982:213;;;;;;:::i;:::-;;:::i;:::-;;;698:14:291;;691:22;673:41;;661:2;646:18;5982:213:80;533:187:291;3222:34:80;;;;;;;;920:42:291;908:55;;;890:74;;878:2;863:18;3222:34:80;725:245:291;8092:153:80;;;:::i;:::-;;;;;;;:::i;6243:1083::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3173:43::-;;;;;3046:44;;;;;5982:213;6067:4;6090:54;;;6105:39;6090:54;;:98;;-1:-1:-1;6148:40:80;;;6163:25;6148:40;6090:98;6083:105;5982:213;-1:-1:-1;;5982:213:80:o;8092:153::-;8160:12;8191:47;:45;:47::i;:::-;8184:54;;8092:153;:::o;6243:1083::-;6371:14;6387:19;6408:7;6417:12;6445:15;6463:85;6499:27;;;;;;;;;;;;;;;;;6528:8;6538:9;6463:35;:85::i;:::-;6445:103;;6564:46;6578:10;6590:8;6600:9;6564:46;;;;;;;;:::i;:::-;;;;;;;;766:16:170;;748:15;;6622:37:80;;;;6692:100;;785:4:170;766:23;748:41;792:4;748:48;4202:4:54;4196:11;;4311:43;;;4356:9;4307:59;4291:76;;4278:90;;;4687:343;4972:1;4959:15;;;4787:3;4687:343;;;;;1522:75;4622:430;5069:27;;4196:11;1728:2;4463:35;;;3702:1424;6692:100:80;6621:171;;;;6914:81;6966:7;6975:8;6985:9;6914:51;:81::i;:::-;7059:18;7080:32;7102:9;7080:21;:32::i;:::-;7059:53;;7195:68;7214:10;7226:12;7240:6;7248:10;7260:2;7195:68;;;;;;;;;;:::i;:::-;;;;;;;;7282:12;;7296:6;;-1:-1:-1;7304:10:80;;-1:-1:-1;7316:2:80;;-1:-1:-1;6243:1083:80;;-1:-1:-1;;;;;6243:1083:80:o;19508:4931:117:-;19568:12;19616:125;19755:14;4304:2;19755:40;;19869:6;19852:23;;19902:161;:4038;;;;;;;;20088:13;19902:4038;;;;;;;;20332:22;19902:4038;;;;20376:25;19902:4038;;;;20498:27;19902:4038;;;;20547:26;19902:4038;;;;20595:22;19902:4038;;;;20639:27;19902:4038;;;;20688:27;19902:4038;;;;20737:30;19902:4038;;;;20789:31;19902:4038;;;;20842:21;19902:4038;;;;20885:24;19902:4038;;;;20931:21;19902:4038;;;;20974:32;19902:4038;;;;21028:30;19902:4038;;;;21080:29;19902:4038;;;;21131:28;19902:4038;;;;21181:24;19902:4038;;;;21387:27;19902:4038;;;;21474:27;19902:4038;;;;21523:26;19902:4038;;;;21571:20;19902:4038;;;;21613:27;19902:4038;;;;21662:23;19902:4038;;;;21707:24;19902:4038;;;;21753:22;19902:4038;;;;21797:28;19902:4038;;;;21847:37;19902:4038;;;;21906:19;19902:4038;;;;21947:23;19902:4038;;;;21992:25;19902:4038;;;;22039:34;19902:4038;;;;22095:29;19902:4038;;;;22146:29;19902:4038;;;;22197:40;19902:4038;;;;22259:33;19902:4038;;;;22314:32;19902:4038;;;;22528:23;19902:4038;;;;22611:23;19902:4038;;;;22656:23;19902:4038;;;;22701:23;19902:4038;;;;22906:23;19902:4038;;;;22989:23;19902:4038;;;;23194:23;19902:4038;;;;23277:23;19902:4038;;;;23322:23;19902:4038;;;;23367:23;19902:4038;;;;23572:23;19902:4038;;;;23655:23;19902:4038;;;;23700:20;19902:4038;;;;23742:20;19902:4038;;;;23784:32;19902:4038;;;;23838:33;19902:4038;;;;23893:29;19902:4038;;;;;23954:32;24062:13;24043:32;;4304:2;24217:15;:22;:49;24213:143;;24310:22;;24293:48;;;;;;;;6794:25:291;;;;6835:18;;;6828:34;;;6767:18;;24293:48:117;;;;;;;;24213:143;24376:46;24406:15;24376:29;:46::i;:::-;24369:53;;;;;;19508:4931;:::o;2674:5030:113:-;2821:15;2876:19;2898:33;2922:8;2898:23;:33::i;:::-;2876:55;-1:-1:-1;3058:4:113;3043:20;;3525:40;3556:8;3525:30;:40::i;:::-;3595:11;3609:1;3595:15;3585:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3585:26:113;-1:-1:-1;3580:31:113;-1:-1:-1;3718:4:113;3710:13;;3625:16;4058:3630;4082:11;4078:1;:15;4058:3630;;;4119:20;4141:21;4166:50;4204:8;4214:1;4166:37;:50::i;:::-;4118:98;;;;4431:12;4421:8;4413:31;4491:13;4487:1;4477:8;4473:16;4465:40;4552:1;4542:8;4538:16;4526:28;;4590:34;4647:70;4676:8;4686:12;4700:9;:16;4647:28;:70::i;:::-;4590:127;;4844:14;4918:4;4876:38;4902:8;4912:1;4876:25;:38::i;:::-;4861:61;4844:78;;4940:11;4963:39;4990:8;5000:1;4963:26;:39::i;:::-;5005:1;4963:43;4954:6;:52;4940:66;;5025:2096;5041:3;5032:6;:12;5025:2096;;;5357:13;;5445:2;5440:14;;;5456:1;5436:22;5416:43;;5410:50;5548:8;5538:19;;;5607:2;5602:14;;5404:4;5400:61;5068:15;;5707:17;5709:5;5538:19;5400:61;5707:17::i;:::-;5659:65;;;;5766:16;5750:12;:32;5746:158;;5835:13;;;;5817:64;;;;;;;;7075:25:291;;;;7116:18;;;7109:34;;;7159:18;;;7152:34;;;7048:18;;5817:64:113;6873:319:291;5746:158:113;5945:16;;5930:31;;5926:154;;;6011:13;;;;6026:16;;5996:61;;;;;;;;7075:25:291;;;;7116:18;;;7109:34;7159:18;;;7152:34;;;7048:18;;5996:61:113;6873:319:291;5926:154:113;6101:32;;;;;;;;6250:19;;;;-1:-1:-1;6227:177:113;;;6328:13;;;;6343:16;;6361:19;;;;;6304:77;;;;;;;;7075:25:291;;;;7116:18;;;7109:34;;;;7159:18;;;7152:34;7048:18;;6304:77:113;6873:319:291;6227:177:113;6563:33;;;;;;;6714:19;;;;-1:-1:-1;6691:131:113;;;6783:16;;6761:19;;;:38;6691:131;6942:1;6926:13;:17;6922:110;;;6993:16;;6971:19;;;:38;6922:110;-1:-1:-1;;;7054:13:113;;;:15;;;;;;-1:-1:-1;;7101:1:113;7091:11;;;;;5025:2096;;;7247:46;7281:8;7291:1;7247:33;:46::i;:::-;7224:5;:19;;;:69;7220:215;;7348:5;:19;;;7369:46;7403:8;7413:1;7369:33;:46::i;:::-;7324:92;;;;;;;;6794:25:291;;;;6835:18;;;6828:34;6767:18;;7324:92:113;6620:248:291;7220:215:113;7538:16;;:33;;7534:140;;7623:16;;7602:53;;;;;;;;6794:25:291;;;;6835:18;;;6828:34;;;6767:18;;7602:53:113;6620:248:291;7534:140:113;-1:-1:-1;;4095:3:113;;;;;-1:-1:-1;4058:3630:113;;-1:-1:-1;;4058:3630:113;;;2852:4846;;;2674:5030;;;;;:::o;819:809:170:-;1107:9;1210:1;1198:9;1192:16;1188:24;1182:4;1178:35;1161:15;1157:57;1058:385;1253:12;1236:15;1233:33;1058:385;;;1418:22;;1403:38;;1329:4;1365:17;;;;1308:26;;;;1058:385;;;1062:170;;1527:84;1555:23;:8;1472:4:66;1331:161;1555:23:170;1580:6;1588:8;:15;1606:4;1588:22;1527:27;:84::i;:::-;819:809;;;:::o;5489:666:54:-;5562:7;5581:16;5607:21;1728:2;5607:43;;5959:10;5953:17;5948:3;5944:27;5936:6;5932:40;5839:13;5810:184;5778:10;5755:1;5727:285;5699:313;-1:-1:-1;6080:22:54;;;6076:47;;6111:12;;;;;;;;;;;;;;6076:47;-1:-1:-1;6140:8:54;5489:666;-1:-1:-1;;5489:666:54:o;740:563:116:-;1010:16;;835:7;;;;898;;997:29;;993:131;;1070:13;;;;1085:16;;1049:64;;;;;;;;7075:25:291;;;;7116:18;;;7109:34;7159:18;;;7152:34;;;7048:18;;1049:64:116;6873:319:291;993:131:116;1196:5;:19;;;1184:9;:31;1180:93;;;1231:19;;;:31;;;1180:93;-1:-1:-1;1291:1:116;;1294;;-1:-1:-1;740:563:116;-1:-1:-1;;;740:563:116:o;763:555:115:-;858:7;867;999:5;:21;;;987:7;972:48;968:172;;1067:13;;;;1082:21;;;;1043:86;;;;;;;;7075:25:291;;;;7116:18;;;7109:34;7159:18;;;7152:34;;;7048:18;;1043:86:115;6873:319:291;968:172:115;-1:-1:-1;1306:1:115;;1309;;-1:-1:-1;763:555:115;-1:-1:-1;;763:555:115:o;547:170:118:-;-1:-1:-1;705:1:118;;708;;-1:-1:-1;547:170:118:o;925:129:120:-;-1:-1:-1;1042:1:120;;;;-1:-1:-1;925:129:120:o;637:400:121:-;732:7;741;963:43;991:5;998:7;963:27;:43::i;:::-;-1:-1:-1;1025:1:121;;;;-1:-1:-1;637:400:121;-1:-1:-1;;;;637:400:121:o;692:458:122:-;781:7;;854:4;828:30;;;;913:1;886:28;;;885:37;937:11;;;933:76;;971:27;;;;;;;;;;;;;;933:76;1042:3;1022:17;1033:6;1022:8;:17;:::i;:::-;:23;1018:103;;;1068:42;;;;;;;;6794:25:291;;;6835:18;;;6828:34;;;6767:18;;1068:42:122;6620:248:291;1018:103:122;-1:-1:-1;1138:1:122;;1141;;-1:-1:-1;692:458:122;-1:-1:-1;;;;692:458:122:o;670:553:123:-;759:7;;835:6;809:32;;965:15;943:38;;;:125;;-1:-1:-1;1052:16:123;;943:125;852:301;;;1100:42;;;;;;;;160:25:291;;;133:18;;1100:42:123;14:177:291;852:301:123;-1:-1:-1;1211:1:123;;;;-1:-1:-1;670:553:123;-1:-1:-1;;;670:553:123:o;4000:543:125:-;4095:7;4104;4123:19;4160:7;4171:4;4145:30;4123:52;;4185:15;4231:1;4219:7;4204:28;;4236:4;4203:37;4185:55;;4252:20;4274:21;4311:66;4349:5;:14;;;4365:11;4311:37;:66::i;:::-;4251:126;;;;4408:7;4392:13;:23;4388:108;;;4438:47;;;;;;;;6794:25:291;;;6835:18;;;6828:34;;;6767:18;;4438:47:125;6620:248:291;4388:108:125;-1:-1:-1;4514:12:125;4528:7;;-1:-1:-1;4000:543:125;-1:-1:-1;;;;4000:543:125:o;369:359:126:-;-1:-1:-1;450:7:126;;719:1;;-1:-1:-1;369:359:126:o;460:307:127:-;728:4;701:31;;758:1;;-1:-1:-1;460:307:127:o;480:287:135:-;569:7;;686:4;659:31;;;709:10;:23;;731:1;709:23;;;722:6;709:23;700:32;758:1;;-1:-1:-1;480:287:135;-1:-1:-1;;;;480:287:135:o;804:417:136:-;893:7;;1011:4;984:31;;;1034:10;:23;;1056:1;1034:23;;;1047:6;1034:23;1025:32;-1:-1:-1;1148:1:136;1025:32;1139:10;:15;:37;;1166:6;1175:1;1166:10;1139:37;;834:287:137;923:7;;1040:4;1013:31;;;1063:10;:23;;1085:1;1063:23;;;1076:6;1063:23;1054:32;1112:1;;-1:-1:-1;834:287:137;-1:-1:-1;;;;834:287:137:o;539:129:142:-;-1:-1:-1;656:1:142;;659;;-1:-1:-1;539:129:142:o;811:288:146:-;900:7;;1018:4;991:31;;;1050:1;1041:10;;:23;;1063:1;1041:23;;597:239:160;-1:-1:-1;824:1:160;;678:7;;-1:-1:-1;597:239:160:o;550:355:161:-;877:1;853;827:27;;;822:33;550:355;;;;;:::o;1837:972:60:-;1910:12;2023:19;2055:3;:10;2068:1;2055:14;2045:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2045:25:60;;2023:47;;2147:6;2195:12;2191:17;2275:4;2270:3;2266:14;2342:4;2336:3;2330:10;2326:21;2317:7;2313:35;2401:4;2393:6;2389:17;2225:527;2437:4;2428:7;2425:17;2225:527;;;2608:19;;2717:14;;2699:33;;2672:25;;;2669:64;2648:86;;2489:4;2476:18;;;;2549:4;2531:23;2225:527;;;-1:-1:-1;2786:6:60;;1837:972;-1:-1:-1;;;;;;1837:972:60:o;3332:365:105:-;3399:13;3428:8;:15;3447:1;3428:20;3424:59;;-1:-1:-1;3471:1:105;;3332:365;-1:-1:-1;3332:365:105:o;3424:59::-;-1:-1:-1;3674:4:105;3660:19;3654:26;3651:1;3646:35;;3332:365::o;4567:5323::-;4666:13;4682:21;4694:8;4682:11;:21::i;:::-;4666:37;-1:-1:-1;4791:9:105;;4787:5087;;4909:15;;4851:1;4863;4855:9;;4851:13;;4886:38;;4882:124;;;4978:8;4955:32;;;;;;;;;;;:::i;4882:124::-;5865:15;;5142:4;5124:46;;;;;;5841:41;;;6198:4;6223:1;6208:13;;;6204:21;6180:47;;;;;6255:19;;6310:2826;6342:3;6317:21;:28;6310:2826;;6559:28;;6553:4;6549:39;6656:29;;;6934:1;6917:18;;6961:21;;;6957:108;;;7033:8;7017:25;;;;;;;;;;;:::i;6957:108::-;8008:21;;7157:16;8070:13;;;;8136:1;8131:13;;;;8188:1;8183:13;;;;8241:1;8236:13;8305:16;;;;:45;;;8335:15;8325:7;:25;8305:45;8301:165;;;8414:8;8424:14;8389:50;;;;;;;;;;;;:::i;8301:165::-;-1:-1:-1;;;8738:1:105;8727:12;;8715:24;;8765:22;;;8761:109;;8838:8;8822:25;;;;;;;;;;;:::i;8761:109::-;8975:14;8963:26;;9116:1;9091:26;;;;6347:2789;;;;;6310:2826;;;9382:12;9369:9;:25;9365:118;;9455:8;9425:39;;;;;;;;;;;:::i;9365:118::-;4802:4695;;;;;4642:5242;4567:5323;:::o;4787:5087::-;9782:1;9764:8;:15;:19;9760:100;;;9832:8;9814:27;;;;;;;;;;;:::i;9760:100::-;4642:5242;4567:5323;:::o;14891:445::-;15017:14;15033:15;15088;15106:36;15120:8;15130:11;15106:13;:36::i;:::-;15211:14;15257:1;15252:13;;;;15298:1;15293:13;;;;;-1:-1:-1;14891:445:105;-1:-1:-1;;;;14891:445:105:o;2113:555:113:-;2246:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2246:28:113;-1:-1:-1;2297:364:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2297:364:113;;;;;;;;;;;;2113:555::o;11749:428:105:-;11839:15;11890:26;11923:21;11935:8;11923:11;:21::i;:::-;11947:1;11923:25;11919:1;:29;11890:58;;11962:14;11979:43;12000:8;12010:11;11979:20;:43::i;:::-;12094:44;;;;12090:57;;;12112:4;12090:57;;11749:428;-1:-1:-1;;;11749:428:105:o;12679:319::-;12770:16;12822:15;12840:36;12854:8;12864:11;12840:13;:36::i;:::-;12953:14;12950:1;12945:23;;12679:319;-1:-1:-1;;;;12679:319:105:o;13700:358::-;13822:18;13880:15;13898:36;13912:8;13922:11;13898:13;:36::i;:::-;14013:14;14010:1;14005:23;;13700:358;-1:-1:-1;;;;13700:358:105:o;1085:1363:67:-;1617:4;1609:6;1605:17;1676:1;1668:6;1664:14;1650:12;1646:33;1692:202;1716:3;1702:12;1699:21;1692:202;;;1872:19;;1851:41;;1773:4;1755:23;;;;1811;;;;1692:202;;;1696:2;1925:1;1918:9;1908:524;;2035:66;2031:1;2028;2024:9;2020:82;2372:5;2357:12;2351:19;2347:31;2314:5;2310:10;2295:12;2289:19;2285:36;2224:176;2190:12;2162:256;;1908:524;;1085:1363;;;:::o;10570:572:105:-;10667:14;10779:21;10791:8;10779:11;:21::i;:::-;10764:11;:36;10760:119;;10846:8;10856:11;10823:45;;;;;;;;;;;;:::i;10760:119::-;-1:-1:-1;11113:1:105;11096:19;11074:42;11092:1;11074:42;11068:49;11119:6;11064:62;;10570:572::o;-1:-1:-1:-;;;:::i;:::-;:::o;196:332:291:-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;412:66;405:5;401:78;394:5;391:89;381:117;;494:1;491;484:12;381:117;517:5;196:332;-1:-1:-1;;;196:332:291:o;975:481::-;1016:3;1054:5;1048:12;1081:6;1076:3;1069:19;1106:1;1116:162;1130:6;1127:1;1124:13;1116:162;;;1192:4;1248:13;;;1244:22;;1238:29;1220:11;;;1216:20;;1209:59;1145:12;1116:162;;;1120:3;1323:1;1316:4;1307:6;1302:3;1298:16;1294:27;1287:38;1445:4;1375:66;1370:2;1362:6;1358:15;1354:88;1349:3;1345:98;1341:109;1334:116;;;975:481;;;;:::o;1461:217::-;1608:2;1597:9;1590:21;1571:4;1628:44;1668:2;1657:9;1653:18;1645:6;1628:44;:::i;1683:184::-;1735:77;1732:1;1725:88;1832:4;1829:1;1822:15;1856:4;1853:1;1846:15;1872:334;1943:2;1937:9;1999:2;1989:13;;2004:66;1985:86;1973:99;;2102:18;2087:34;;2123:22;;;2084:62;2081:88;;;2149:18;;:::i;:::-;2185:2;2178:22;1872:334;;-1:-1:-1;1872:334:291:o;2211:712::-;2265:5;2318:3;2311:4;2303:6;2299:17;2295:27;2285:55;;2336:1;2333;2326:12;2285:55;2372:6;2359:20;2398:4;2421:18;2417:2;2414:26;2411:52;;;2443:18;;:::i;:::-;2489:2;2486:1;2482:10;2512:28;2536:2;2532;2528:11;2512:28;:::i;:::-;2574:15;;;2644;;;2640:24;;;2605:12;;;;2676:15;;;2673:35;;;2704:1;2701;2694:12;2673:35;2740:2;2732:6;2728:15;2717:26;;2752:142;2768:6;2763:3;2760:15;2752:142;;;2834:17;;2822:30;;2785:12;;;;2872;;;;2752:142;;;2912:5;2211:712;-1:-1:-1;;;;;;;2211:712:291:o;2928:1050::-;3030:6;3038;3091:2;3079:9;3070:7;3066:23;3062:32;3059:52;;;3107:1;3104;3097:12;3059:52;3147:9;3134:23;3176:18;3217:2;3209:6;3206:14;3203:34;;;3233:1;3230;3223:12;3203:34;3271:6;3260:9;3256:22;3246:32;;3316:7;3309:4;3305:2;3301:13;3297:27;3287:55;;3338:1;3335;3328:12;3287:55;3374:2;3361:16;3396:4;3419:2;3415;3412:10;3409:36;;;3425:18;;:::i;:::-;3467:112;3575:2;3506:66;3499:4;3495:2;3491:13;3487:86;3483:95;3467:112;:::i;:::-;3602:2;3595:5;3588:17;3642:7;3637:2;3632;3628;3624:11;3620:20;3617:33;3614:53;;;3663:1;3660;3653:12;3614:53;3718:2;3713;3709;3705:11;3700:2;3693:5;3689:14;3676:45;3762:1;3741:14;;;3737:23;;3730:34;;;;3745:5;;-1:-1:-1;3826:18:291;;3813:32;;-1:-1:-1;3857:16:291;;;3854:36;;;3886:1;3883;3876:12;3854:36;;3909:63;3964:7;3953:8;3942:9;3938:24;3909:63;:::i;:::-;3899:73;;;2928:1050;;;;;:::o;3983:573::-;4230:4;4259:42;4340:2;4332:6;4328:15;4317:9;4310:34;4392:2;4384:6;4380:15;4375:2;4364:9;4360:18;4353:43;4444:2;4436:6;4432:15;4427:2;4416:9;4412:18;4405:43;;4484:3;4479:2;4468:9;4464:18;4457:31;4505:45;4545:3;4534:9;4530:19;4522:6;4505:45;:::i;:::-;4497:53;3983:573;-1:-1:-1;;;;;;3983:573:291:o;5076:880::-;5341:42;5333:6;5329:55;5318:9;5311:74;5292:4;5404:2;5442;5437;5426:9;5422:18;5415:30;5468:44;5508:2;5497:9;5493:18;5485:6;5468:44;:::i;:::-;5548:22;;;5543:2;5528:18;;5521:50;5620:13;;5642:22;;;5718:15;;;;5680;;;5751:1;5761:169;5775:6;5772:1;5769:13;5761:169;;;5836:13;;5824:26;;5905:15;;;;5870:12;;;;5797:1;5790:9;5761:169;;;-1:-1:-1;5947:3:291;;5076:880;-1:-1:-1;;;;;;;;5076:880:291:o;5961:654::-;6236:4;6265:42;6346:2;6338:6;6334:15;6323:9;6316:34;6398:2;6390:6;6386:15;6381:2;6370:9;6366:18;6359:43;6450:2;6442:6;6438:15;6433:2;6422:9;6418:18;6411:43;6502:2;6494:6;6490:15;6485:2;6474:9;6470:18;6463:43;;6543:3;6537;6526:9;6522:19;6515:32;6564:45;6604:3;6593:9;6589:19;6581:6;6564:45;:::i;7197:279::-;7262:9;;;7283:10;;;7280:190;;;7326:77;7323:1;7316:88;7427:4;7424:1;7417:15;7455:4;7452:1;7445:15;7852:288;8027:2;8016:9;8009:21;7990:4;8047:44;8087:2;8076:9;8072:18;8064:6;8047:44;:::i;:::-;8039:52;;8127:6;8122:2;8111:9;8107:18;8100:34;7852:288;;;;;:::o;8145:184::-;8197:77;8194:1;8187:88;8294:4;8291:1;8284:15;8318:4;8315:1;8308:15",
    "linkReferences": {},
    "immutableReferences": {
      "55121": [
        {
          "start": 391,
          "length": 32
        },
        {
          "start": 917,
          "length": 32
        },
        {
          "start": 1010,
          "length": 32
        }
      ],
      "55125": [
        {
          "start": 352,
          "length": 32
        },
        {
          "start": 950,
          "length": 32
        },
        {
          "start": 1044,
          "length": 32
        }
      ],
      "55128": [
        {
          "start": 220,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deployExpression2(bytes,uint256[])": "b7f14403",
    "expectedConstructionMetaHash()": "005f6613",
    "iInterpreter()": "f0cfdd37",
    "iParser()": "24376855",
    "iStore()": "c19423bc",
    "integrityFunctionPointers()": "8d614591",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"parser\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct RainterpreterExpressionDeployerNPE2ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dynamicLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"standardOpsLength\",\"type\":\"uint256\"}],\"name\":\"BadDynamicLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calculatedInputs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bytecodeInputs\",\"type\":\"uint256\"}],\"name\":\"BadOpInputsLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sourceOutputs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputs\",\"type\":\"uint256\"}],\"name\":\"CallOutputsExceedSource\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"constantsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"constantRead\",\"type\":\"uint256\"}],\"name\":\"OutOfBoundsConstantRead\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackTopIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackRead\",\"type\":\"uint256\"}],\"name\":\"OutOfBoundsStackRead\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"sourceIndex\",\"type\":\"uint256\"}],\"name\":\"SourceIndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stackMaxIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bytecodeAllocation\",\"type\":\"uint256\"}],\"name\":\"StackAllocationMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stackIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bytecodeOutputs\",\"type\":\"uint256\"}],\"name\":\"StackOutputsMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"relativeOffset\",\"type\":\"uint256\"}],\"name\":\"StackSizingsNotMonotonic\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calculatedInputs\",\"type\":\"uint256\"}],\"name\":\"StackUnderflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackHighwater\",\"type\":\"uint256\"}],\"name\":\"StackUnderflowHighwater\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startBit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"TruncatedBitwiseEncoding\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"TruncatedHeader\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"TruncatedHeaderOffsets\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"TruncatedSource\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedConstructionMetaHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualConstructionMetaHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedConstructionMetaHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedBytecodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualBytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedInterpreterBytecodeHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedBytecodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualBytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedParserBytecodeHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"UnexpectedSources\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedBytecodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualBytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedStoreBytecodeHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"UnexpectedTrailingOffsetBytes\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shiftAmount\",\"type\":\"uint256\"}],\"name\":\"UnsupportedBitwiseShiftAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WriteError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLengthBitwiseEncoding\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"interpreter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"store\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"DISPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IInterpreterV2\",\"name\":\"interpreter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"io\",\"type\":\"bytes\"}],\"name\":\"DeployedExpression\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"name\":\"NewExpression\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"name\":\"deployExpression2\",\"outputs\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectedConstructionMetaHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iInterpreter\",\"outputs\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iParser\",\"outputs\":[{\"internalType\":\"contract IParserV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"integrityFunctionPointers\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CallOutputsExceedSource(uint256,uint256)\":[{\"params\":{\"outputs\":\"The number of outputs requested by the operand.\",\"sourceOutputs\":\"The number of outputs available from the source.\"}}],\"SourceIndexOutOfBounds(bytes,uint256)\":[{\"params\":{\"bytecode\":\"The bytecode that was inspected.\",\"sourceIndex\":\"The source index that was out of bounds.\"}}],\"StackSizingsNotMonotonic(bytes,uint256)\":[{\"params\":{\"bytecode\":\"The bytecode that was inspected.\",\"relativeOffset\":\"The relative offset of the source that was inspected.\"}}],\"TruncatedBitwiseEncoding(uint256,uint256)\":[{\"params\":{\"length\":\"The length of the OOB encoding.\",\"startBit\":\"The start of the OOB encoding.\"}}],\"TruncatedHeader(bytes)\":[{\"params\":{\"bytecode\":\"The bytecode that was inspected.\"}}],\"TruncatedHeaderOffsets(bytes)\":[{\"params\":{\"bytecode\":\"The bytecode that was inspected.\"}}],\"TruncatedSource(bytes)\":[{\"params\":{\"bytecode\":\"The bytecode that was inspected.\"}}],\"UnexpectedConstructionMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualConstructionMetaHash\":\"The meta hash that was found upon construction.\",\"expectedConstructionMetaHash\":\"The meta hash that was expected upon construction.\"}}],\"UnexpectedInterpreterBytecodeHash(bytes32,bytes32)\":[{\"params\":{\"actualBytecodeHash\":\"The bytecode hash that was found at the interpreter address upon construction.\",\"expectedBytecodeHash\":\"The bytecode hash that was expected at the interpreter address upon construction.\"}}],\"UnexpectedParserBytecodeHash(bytes32,bytes32)\":[{\"params\":{\"actualBytecodeHash\":\"The bytecode hash that was found at the parser address upon construction.\",\"expectedBytecodeHash\":\"The bytecode hash that was expected at the parser address upon construction.\"}}],\"UnexpectedSources(bytes)\":[{\"params\":{\"bytecode\":\"The bytecode that was inspected.\"}}],\"UnexpectedStoreBytecodeHash(bytes32,bytes32)\":[{\"params\":{\"actualBytecodeHash\":\"The bytecode hash that was found at the store address upon construction.\",\"expectedBytecodeHash\":\"The bytecode hash that was expected at the store address upon construction.\"}}],\"UnexpectedTrailingOffsetBytes(bytes)\":[{\"params\":{\"bytecode\":\"The bytecode that was inspected.\"}}]},\"events\":{\"DISPair(address,address,address,address,bytes)\":{\"params\":{\"interpreter\":\"The interpreter the deployer believes it is qualified to perform integrity checks on behalf of.\",\"meta\":\"The raw binary data of the construction meta. Maybe compressed data etc. and is intended for offchain consumption.\",\"parser\":\"The parser the deployer believes is compatible with the interpreter.\",\"sender\":\"The `msg.sender` providing the op meta.\",\"store\":\"The interpreter store the deployer believes is compatible with the interpreter.\"}},\"DeployedExpression(address,address,address,address,bytes)\":{\"params\":{\"expression\":\"As per `IExpressionDeployerV3.deployExpression2` return.\",\"interpreter\":\"As per `IExpressionDeployerV3.deployExpression2` return.\",\"io\":\"As per `IExpressionDeployerV3.deployExpression2` return.\",\"sender\":\"The caller of `deployExpression2`.\",\"store\":\"As per `IExpressionDeployerV3.deployExpression2` return.\"}},\"NewExpression(address,bytes,uint256[])\":{\"params\":{\"bytecode\":\"As per `IExpressionDeployerV3.deployExpression2` inputs.\",\"constants\":\"As per `IExpressionDeployerV3.deployExpression2` inputs.\",\"sender\":\"The caller of `deployExpression2`.\"}}},\"kind\":\"dev\",\"methods\":{\"deployExpression2(bytes,uint256[])\":{\"params\":{\"bytecode\":\"Bytecode verbatim. Exactly how the bytecode is structured is up to the deployer and interpreter. The deployer MUST NOT modify the bytecode in any way. The interpreter MUST NOT assume anything about the bytecode other than that it is valid according to the interpreter's integrity checks. It is assumed that the bytecode will be produced from a human friendly string via. `IParserV1.parse` but this is not required if the caller has some other means to prooduce valid bytecode.\",\"constants\":\"Constants verbatim. Constants are provided alongside sources rather than inline as it allows us to avoid variable length opcodes and can be more memory efficient if the same constant is referenced several times from the sources.\"},\"returns\":{\"_0\":\"The interpreter the deployer believes it is qualified to perform integrity checks on behalf of.\",\"_1\":\"The interpreter store the deployer believes is compatible with the interpreter.\",\"_2\":\"The address of the deployed onchain expression. MUST be valid according to all integrity checks the deployer is aware of.\",\"_3\":\"Binary data where each 2 bytes input and output counts for each source of the bytecode. MAY simply be copied verbatim from the relevant bytes in the bytecode if they exist and integrity checks guarantee that the bytecode is valid.\"}},\"integrityFunctionPointers()\":{\"returns\":{\"_0\":\"The list of integrity function pointers.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"RainterpreterExpressionDeployerNPE2\",\"version\":1},\"userdoc\":{\"errors\":{\"BadDynamicLength(uint256,uint256)\":[{\"notice\":\"Thrown when a dynamic length array is NOT 1 more than a fixed length array. Should never happen outside a major breaking change to memory layouts.\"}],\"BadOpInputsLength(uint256,uint256,uint256)\":[{\"notice\":\"The bytecode and integrity function disagree on number of inputs.\"}],\"CallOutputsExceedSource(uint256,uint256)\":[{\"notice\":\"Thrown when the outputs requested by the operand exceed the outputs available from the source.\"}],\"OutOfBoundsConstantRead(uint256,uint256,uint256)\":[{\"notice\":\"Thrown when a constant read index is outside the constants array.\"}],\"OutOfBoundsStackRead(uint256,uint256,uint256)\":[{\"notice\":\"Thrown when a stack read index is outside the current stack top.\"}],\"SourceIndexOutOfBounds(bytes,uint256)\":[{\"notice\":\"Thrown when a bytecode source index is out of bounds.\"}],\"StackAllocationMismatch(uint256,uint256)\":[{\"notice\":\"The bytecode stack allocation does not match the allocation calculated by the integrity check.\"}],\"StackOutputsMismatch(uint256,uint256)\":[{\"notice\":\"The final stack index does not match the bytecode outputs.\"}],\"StackSizingsNotMonotonic(bytes,uint256)\":[{\"notice\":\"Thrown when the stack sizings, allocation, inputs and outputs, are not monotonically increasing.\"}],\"StackUnderflow(uint256,uint256,uint256)\":[{\"notice\":\"The stack underflowed during integrity check.\"}],\"StackUnderflowHighwater(uint256,uint256,uint256)\":[{\"notice\":\"The stack underflowed the highwater during integrity check.\"}],\"TruncatedBitwiseEncoding(uint256,uint256)\":[{\"notice\":\"Thrown during integrity check when bitwise (en|de)coding would be truncated due to the end bit position being beyond 256.\"}],\"TruncatedHeader(bytes)\":[{\"notice\":\"Thrown when the offset to a source points to a location that cannot fit a header before the start of the next source or the end of the bytecode.\"}],\"TruncatedHeaderOffsets(bytes)\":[{\"notice\":\"Thrown when the bytecode is truncated before the end of the header offsets.\"}],\"TruncatedSource(bytes)\":[{\"notice\":\"Thrown when the end of a source as self reported by its header doesnt match the start of the next source or the end of the bytecode.\"}],\"UnexpectedConstructionMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when the `RainterpreterNPE2` is constructed with unknown meta.\"}],\"UnexpectedInterpreterBytecodeHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when the `RainterpreterExpressionDeployerNPE2` is constructed with unknown interpreter bytecode.\"}],\"UnexpectedParserBytecodeHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when the `RainterpreterNPE2` is constructed with unknown parser bytecode.\"}],\"UnexpectedSources(bytes)\":[{\"notice\":\"Thrown when a bytecode reports itself as 0 sources but has more than 1 byte.\"}],\"UnexpectedStoreBytecodeHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when the `RainterpreterNPE2` is constructed with unknown store bytecode.\"}],\"UnexpectedTrailingOffsetBytes(bytes)\":[{\"notice\":\"Thrown when bytes are discovered between the offsets and the sources.\"}],\"UnsupportedBitwiseShiftAmount(uint256)\":[{\"notice\":\"Thrown during integrity check when a bitwise shift operation is attempted with a shift amount greater than 255 or 0. As the shift amount is taken from the operand, this is a compile time error so there's no need to support behaviour that would always evaluate to 0 or be a noop.\"}],\"WriteError()\":[{\"notice\":\"Thrown if writing the data by creating the contract fails somehow.\"}],\"ZeroLengthBitwiseEncoding()\":[{\"notice\":\"Thrown during integrity check when the length of a bitwise (en|de)coding would be 0.\"}]},\"events\":{\"DISPair(address,address,address,address,bytes)\":{\"notice\":\"This is the literal InterpreterOpMeta bytes to be used offchain to make sense of the opcodes in this interpreter deployment, as a human. For formats like json that make heavy use of boilerplate, repetition and whitespace, some kind of compression is recommended. The DISPair is a pairing of: - Deployer (this contract) - Interpreter - Store - Parser\"},\"DeployedExpression(address,address,address,address,bytes)\":{\"notice\":\"The address of the deployed expression. MUST be emitted once the expression can be loaded and deserialized into an evaluable interpreter state.\"},\"NewExpression(address,bytes,uint256[])\":{\"notice\":\"The config of the deployed expression including uncompiled sources. MUST be emitted after the config passes the integrity check.\"}},\"kind\":\"user\",\"methods\":{\"deployExpression2(bytes,uint256[])\":{\"notice\":\"Expressions are expected to be deployed onchain as immutable contract code with a first class address like any other contract or account. Technically this is optional in the sense that all the tools required to eval some expression and define all its opcodes are available as libraries. In practise there are enough advantages to deploying the sources directly onchain as contract data and loading them from the interpreter at eval: - Loading and storing binary data is gas efficient as immutable contract   data - Expressions need to be immutable between their deploy time integrity   check and runtime evaluation - Passing the address of an expression through calldata to an interpreter   is cheaper than passing an entire expression through calldata - Conceptually a very simple approach, even if implementations like   SSTORE2 are subtle under the hood The expression deployer MUST perform an integrity check of the source code before it puts the expression onchain at a known address. The integrity check MUST at a minimum (it is free to do additional static analysis) calculate the memory required to be allocated for the stack in total, and that no out of bounds memory reads/writes occur within this stack. A simple example of an invalid source would be one that pushes one value to the stack then attempts to pops two values, clearly we cannot remove more values than we added. The `IExpressionDeployerV3` MUST revert in the case of any integrity failure, all integrity checks MUST pass in order for the deployment to complete. Once the integrity check is complete the `IExpressionDeployerV3` MUST do any additional processing required by its paired interpreter. For example, the `IExpressionDeployerV3` MAY NEED to replace the indexed opcodes in the `ExpressionConfig` sources with real function pointers from the corresponding interpreter. The caller MUST check the `io` returned by this function to determine the number of inputs and outputs for each source are within the bounds of the caller's expectations.\"},\"expectedConstructionMetaHash()\":{\"notice\":\"Virtual function to return the expected construction meta hash. Public so that external tooling can read it, although this should be considered deprecated. The intended workflow is that tooling uses a real evm to deploy the full dispair and reads the hashes from errors using a trail/error approach until a full dispair is deployed.\"},\"iInterpreter()\":{\"notice\":\"The interpreter with known bytecode that this deployer is constructed for.\"},\"iStore()\":{\"notice\":\"The store with known bytecode that this deployer is constructed for.\"},\"integrityFunctionPointers()\":{\"notice\":\"Defines all the function pointers to integrity checks. This is the expression deployer's equivalent of the opcode function pointers and follows a near identical dispatch process. These are never compiled into source and are instead indexed into directly by the integrity check. The indexing into integrity pointers (which has an out of bounds check) is a proxy for enforcing that all opcode pointers exist at runtime, so the length of the integrity pointers MUST match the length of opcode function pointers. This function is `virtual` so that it can be overridden pairwise with overrides to `functionPointers` on `Rainterpreter`.\"}},\"notice\":\"!!!EXPERIMENTAL!!! This is the deployer for the RainterpreterNPE2 interpreter. Notably includes onchain parsing/compiling of expressions from Rainlang strings.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/RainterpreterExpressionDeployerNPE2.sol\":\"RainterpreterExpressionDeployerNPE2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.solmem/src/\",\":rain.uniswapv2/=lib/rain.uniswapv2/\",\":rain.will-overflow/=lib/rain.uniswapv2/lib/\",\":sol.lib.binmaskflag/=lib/sol.lib.binmaskflag/src/\",\":v2-core/=lib/v2-core/contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol\":{\"keccak256\":\"0xeaadc351ada39f013498fad8b9d6162206cede3331dc89525686cfadb6ee9b35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d90d18a20b8f1c85bf74bab53ad5e913412153023af30d2c1507420639ced387\",\"dweb:/ipfs/QmY58Hvx77dHUae18eaYXvLSve7dLkejQekTPkCwYyYufN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/prb-math/src/Common.sol\":{\"keccak256\":\"0x70b3a76443312b2c6c500996306a18e3d91e5d56fed0d898d98ca0bfb6225053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be75b034b8c27e96b375e862528afb52a2d11e75c4a25918e10d7db31cdec039\",\"dweb:/ipfs/QmQ4L3tvpDx2ophHRAW7Sc52QhVZzn4e5PKTgLwqt32F1B\"]},\"lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"lib/prb-math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"lib/prb-math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770\",\"dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D\"]},\"lib/prb-math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"lib/prb-math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"lib/prb-math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"lib/prb-math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8\",\"dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC\"]},\"lib/prb-math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x83ee24e41d235bc05cb641d2c5c16c67b17fa00e4593661a8d14350435d4df04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40cedd66b7ba40126b2668c2fbe8ccd6ae88bd5853c205ac54f643e49acd31c1\",\"dweb:/ipfs/QmWZz7bsQceUUzJiURQE5XtfzNW2Ammiz2WSNsZGxCYT7a\"]},\"lib/prb-math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"lib/prb-math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787\",\"dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze\"]},\"lib/prb-math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"lib/prb-math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x07ec9a8adddfe6bf37f0d9ce7702c5620a6215340889701da0525ed190ccc099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3500550c9ed259e5a876d14510d7e4a2226fac41e04535dddffaf9e3e6dc67e5\",\"dweb:/ipfs/QmbA5y7zdqsFELeNPj1WgkP28GXBcnfYajj3E6nangJo2F\"]},\"lib/prb-math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b\",\"dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP\"]},\"lib/prb-math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"lib/prb-math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"lib/prb-math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"lib/prb-math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"lib/prb-math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"lib/prb-math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"lib/prb-math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"lib/prb-math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xafe12d658b5bb495226df1841cbfbcb25e9fc443c6d41a85b5ac6aa7ec79ea29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://357d345f960581548f27fb43fb2320101033c053b949f5cb4d75390a058df205\",\"dweb:/ipfs/QmYjQwVdwCWZDNkxUD4T1nwieP38o4HWtYUYjAmfpFpg3y\"]},\"lib/prb-math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"lib/rain.datacontract/src/lib/LibDataContract.sol\":{\"keccak256\":\"0xe3700fdb21ade704e8b7b75bee127544794e3c33f8ec693e348cb1f1515e1900\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://628b35072f98948d8968302976af3d5aa80b37ba33958d6a5a4ee158834a2670\",\"dweb:/ipfs/QmPQd1bkpnuTTAv1oTuz6HUd2ZRkERL34SBv4f4Jaf2LKu\"]},\"lib/rain.erc1820/src/interface/IERC1820Registry.sol\":{\"keccak256\":\"0xbfcb68f1a27e3b04f9acfd4164ad5373afc27659033307c8f697b958ce4cd16e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d280c893633b3f28a4db8416224d626c7d3badf009e3e6da318b81f09eac7f44\",\"dweb:/ipfs/QmUWZBQoCCLdAF4ExnxnxMKA4VuEYqTNhLHwaAo3SJevDP\"]},\"lib/rain.erc1820/src/lib/LibIERC1820.sol\":{\"keccak256\":\"0xc0dabba14979d7b6f03d2cded0719735356ed00b48beba3dd8b59e366089e771\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a8046398a515f49a2095fea84bfa3418b5e0b122eaa2b150876334cb8a931ab1\",\"dweb:/ipfs/QmQUKdvALy6L412JEEZBt4TzqLHrZ1JuWkpYyk8ut83DT8\"]},\"lib/rain.lib.memkv/src/lib/LibMemoryKV.sol\":{\"keccak256\":\"0x6c9b2a50a27f2eb77f5b53348df31f4a2c427ea62f6f628278b870bf5b305a16\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9abc6e1b29c98a754d566997c924de78b885a2b0eb60e77de8d988c8b29d22f6\",\"dweb:/ipfs/QmPhhEeqSs8BDVEYxfSsqQSiZaKLHw6bFtgjuq8QsjVhdc\"]},\"lib/rain.lib.typecast/src/LibCast.sol\":{\"keccak256\":\"0xbb5ecf1af5ccc7591ce16d02d20d200bee330fd40fdf57d933aaf7e0e7e58369\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fcf92be17e5ed37416341839bd401a10b4cde2be8c737a2e56de7967f4874378\",\"dweb:/ipfs/QmcFeqUSU7zo87v6yW4Vd3nczAau9NiqM6FZLGime1Vev5\"]},\"lib/rain.lib.typecast/src/LibConvert.sol\":{\"keccak256\":\"0xa9511da2a6f737cc4fa208eea891139748e71e39d03b7d169c5a4fb4ccf24928\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://13d9ad983b7538346879e4f5ec25c417772815e46a32c8b8b738860e4f1282c3\",\"dweb:/ipfs/Qme7HhdvuNWeWzq7Aw1jciuPuJPNHDFMYxvyBcoSK889zu\"]},\"lib/rain.math.fixedpoint/src/lib/FixedPointDecimalConstants.sol\":{\"keccak256\":\"0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75\",\"dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN\"]},\"lib/rain.math.fixedpoint/src/lib/LibFixedPointDecimalScale.sol\":{\"keccak256\":\"0x4b4a1f943159fd837a9b243a226fdb9b4afd4fab0eb45b276fd6e7612950300a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4a8e53ce2a5fb2c97a0e3b9151aadd4b047cb987a6e77404806245833f3879c8\",\"dweb:/ipfs/QmcU5b4EqUacgXWEorbH2MzJmBEwf4Qos6sruq7nUGLZ79\"]},\"lib/rain.math.fixedpoint/src/lib/LibWillOverflow.sol\":{\"keccak256\":\"0x71c6bfb257f44498f583280100216b0ecc219837118b493ce2f179ecfeb71d9b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://25b4c0c75cad29d64be39639ca583bbfcced2768773a01cfe8a6810af5af8f9a\",\"dweb:/ipfs/QmbEfsL2rpVLR86kjDMJ7WY2coLmmiE15oWck4WwXjwbp7\"]},\"lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibMemory.sol\":{\"keccak256\":\"0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830\",\"dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibStackPointer.sol\":{\"keccak256\":\"0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8\",\"dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/rain.uniswapv2/src/error/ErrUniswapV2.sol\":{\"keccak256\":\"0xf72854f6a346f90e57e3e2c985ef9c2856161578a090aaf9d5bb68b4a1d950e0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d9873fd43251e8238d1ebc4e33f2d6d64efb0a0e80b03be2130ecef3fdc606a\",\"dweb:/ipfs/QmZzFQbWbg26i3QpRRKc1DuXViciXayn9Kjype9XZLnr24\"]},\"lib/rain.uniswapv2/src/interface/IUniswapV2Factory.sol\":{\"keccak256\":\"0x502cb6f790ac98fd16c7c0996a4045c3ae22fd422faa83e2218cfc1e32c3e8f8\",\"urls\":[\"bzz-raw://264f78486733295ce4e1b70357f2b36144a4007169a54f2c511acddd9642bd21\",\"dweb:/ipfs/QmNT4oNgusD8nsQPhGANZgyT5i1q4AHEkygwMhVGisSyVD\"]},\"lib/rain.uniswapv2/src/interface/IUniswapV2Pair.sol\":{\"keccak256\":\"0xad56bb89b5ac29439b5e73d6181aa5da9bd19ce8188d5e13d41ca30f0c0af985\",\"urls\":[\"bzz-raw://d7f6f472ce5e94e01d13aa0bfe99846bfaa7e8903ddc27f415b42c206d5046ce\",\"dweb:/ipfs/QmYBfzFYiBiVy7JigjUzv9qZeUBwRVu7rFebU5Q57izupw\"]},\"lib/rain.uniswapv2/src/lib/LibUniswapV2.sol\":{\"keccak256\":\"0x770d0fdf7a01fefa61a34410c51b16804fea33f423a620ba0634b60e826e0fe1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://11f504393e8a78d25f43ca7ed1575af8213fe321946ca9cf7327b1ae2503b3ab\",\"dweb:/ipfs/QmerS3vAKcnvGSuoQJiqgZ7ypZK2qDWpkikrddsnPvYuso\"]},\"lib/sol.lib.binmaskflag/src/Binary.sol\":{\"keccak256\":\"0xce65af9621e3306f7e05641138ab961d2de30ee544a50e688a8e1784be74d437\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://04746eee593e31401af18509d7be132dfd3205644473f44178e480866b37c848\",\"dweb:/ipfs/QmVpwKJyp65wzjXfJS1aR2yywKJ6SKLSdrV1jEznFrHutd\"]},\"src/concrete/RainterpreterExpressionDeployerNPE2.sol\":{\"keccak256\":\"0x67deba8d290ef2e810e9fd1969b16e70666a362ce458ca158d3891a0d1775003\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0a60606bd966d0aa178384cf21f4f68c139d443302069b3d4155c7aebef1acc7\",\"dweb:/ipfs/QmdJqxJAmX2tUhUMX62T6b6uPQXp5umbKUU6MXmVrjK77c\"]},\"src/concrete/RainterpreterNPE2.sol\":{\"keccak256\":\"0x5d1e50c231c23ad9d10488dfa0cbb99dc5dfaf3c45b4f57d05fa2d93c16ae1b6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ce3804f4d0ef8b57e2304059bd76e62132e3308ad6b11195aee68f8b0ecf3ed3\",\"dweb:/ipfs/QmZyb9rsLHGf2ku1EJuji9HVfasopHKHDY5aAYWEnzxVdK\"]},\"src/concrete/RainterpreterParserNPE2.sol\":{\"keccak256\":\"0x22b301c09e1246661ef3583ff76d360faf5423f56c0ac54aca7a0dcc99a3848d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://071521b9aca82c951c940c444d773a8ad3fb6a4536302a94ba1139784816a876\",\"dweb:/ipfs/QmcGxmw71ksiidtMUf2hDh6sfjfrqjhF3rCvFQnbkJnFx9\"]},\"src/concrete/RainterpreterStoreNPE2.sol\":{\"keccak256\":\"0x14a8bdfcabfb7f01a71fe0013cf611b1d2c90a2e7f05bb303e221b3e05440740\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://8442f69eb350e8ea0d38192f65f0722ec1ac8ae76eaf7c9484e8bbd2c5de2dd6\",\"dweb:/ipfs/QmWyxSWDVW6Pgj7hZxw82YGfrv5H19BjcQtwwHUrCCqdWM\"]},\"src/error/ErrBitwise.sol\":{\"keccak256\":\"0x57eb292b69a458714d27cc28fa6d2ce75de00d6032c7f7316031709a2180cab2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3b8daad2d4234a5f356acab36f450d9a159d1a25d82b9fdab0926eaa8b2edab2\",\"dweb:/ipfs/QmeVs5rMhytE35ELUNCEigv4aTSWfBV1Y4ccgodtZzrTWR\"]},\"src/error/ErrDeploy.sol\":{\"keccak256\":\"0xe9848e1b7bc6a702b02c81eaa0a9caf94b6cfc1217ec897c3aefe599cc10411a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c3c10ddbe593f9d3385f923fe94a77e55e9849f9c0bf992e6072c356af43f600\",\"dweb:/ipfs/QmUa5GafQZXqhm1qFzeopaF6wTG5gQZauj1sqdbGVnA6xF\"]},\"src/error/ErrParse.sol\":{\"keccak256\":\"0x9300b785aa22a78ce7116ae70efab89ac23748db9447247e3e2562560d6f6df6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://89e4df3c1ab8b6ff0baeab5e42a6bec176c02678921de0dec0666ed1ad9cd9ae\",\"dweb:/ipfs/QmSmCuaqwZULuJjTKoADUjku2LogGH6GgwMsYEYWcqxHtv\"]},\"src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3\",\"dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc\"]},\"src/interface/IParserV1.sol\":{\"keccak256\":\"0x647a88e4b5b6486e5d846eaa32cd438b406c65781bb9845eec4ef86c033286f5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c1caf890fa97f5f07b3ea5b536acb76214c5d3bc784852a46bd405bb90b90b27\",\"dweb:/ipfs/Qme7pMWjKkNv42WtjDHQE4C2u33p3oDcwf7jvYKnMMAk6J\"]},\"src/interface/deprecated/IInterpreterV1.sol\":{\"keccak256\":\"0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3\",\"dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz\"]},\"src/interface/unstable/IExpressionDeployerV3.sol\":{\"keccak256\":\"0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69\",\"dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg\"]},\"src/interface/unstable/IInterpreterStoreV2.sol\":{\"keccak256\":\"0xb4369c438f876657e2f6022c43ec068370cc274edde2df71046f781cd1772489\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ad044848e6d7fa545ead8ad8fa8eb5f823c2aeb56e0b6cd49c3c26b8fcabdeb5\",\"dweb:/ipfs/QmQCopP3JpP4542nPwPdQ8CSusxPhhsYzj46QipTgsqX9o\"]},\"src/interface/unstable/IInterpreterV2.sol\":{\"keccak256\":\"0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8\",\"dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew\"]},\"src/lib/bitwise/LibCtPop.sol\":{\"keccak256\":\"0xc2bbd4f059ee60bf95c80bf60e4d2c3d38328ce540595cefe31cff8e6d2c645b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2bafd197ebab97854bb218e5dd6d429128cff29f1417dce0c9e89a8251ccee72\",\"dweb:/ipfs/QmeDdeMZaj5TAc6XjDyK5iiSjLiTcnWq5EALBUvTCdKdZ6\"]},\"src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4\",\"dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK\"]},\"src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1\",\"dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe\"]},\"src/lib/eval/LibEvalNP.sol\":{\"keccak256\":\"0xd39623eaca6d166db414804df834999dda3e73014334247b1121d0342bdbaeb1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fa7ea518be9f264b23a21c29d1f8bb5b2f8628e9af1698577ab92aa2303046af\",\"dweb:/ipfs/QmQiUMsPfsoRaH3TEN9je5Ri84JKpXtnRPnyv8t98Qnptm\"]},\"src/lib/integrity/LibIntegrityCheckNP.sol\":{\"keccak256\":\"0x64167635098a544e99d83d667af086f6955c9275ac70525b68a9b541334ad679\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://8a6f709ff25ea0eea668271a5cc4a1fb5bb48aa902b908cf3bb7175b7ae9782b\",\"dweb:/ipfs/QmPBnGYWu4knY51rnd5YanGThxXYJvEhT7x5WQvKSqRxTr\"]},\"src/lib/ns/LibNamespace.sol\":{\"keccak256\":\"0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f\",\"dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y\"]},\"src/lib/op/00/LibOpConstantNP.sol\":{\"keccak256\":\"0x9fed1aab408170475ef3f32a8e10ebd697f05646b8d9729cd00f59f26678e54e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://f647d44c569157da60735a663937edcba6e09a4c59f01565d887302c3369c6f1\",\"dweb:/ipfs/QmcNWTwSJFe8WFTExPcP86Ufv5u8eDZwpEYiRreVqZKqKp\"]},\"src/lib/op/00/LibOpStackNP.sol\":{\"keccak256\":\"0xfb54ea32f8a3113e05aed9bc165243c72b8d0a4a2d8b3ed38a0f018a010bb9ce\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://820f9ac7ae24252ddc2e9910c5a182be8b902faf2e4304ebe5afafd5ad8e50b7\",\"dweb:/ipfs/QmNch4ZYAEgyA3nLV5Wis5rLNrbLYaNzgvDLGRJxuepHEr\"]},\"src/lib/op/LibAllStandardOpsNP.sol\":{\"keccak256\":\"0x8caf2e2b7764c5716a3907f79aa1c9e34352f1ccd047149e53ec1152cbfef8ed\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://05ff6bb9686696372665b2fd08a82b604312a0b8503060f8007e7c955da7b5bf\",\"dweb:/ipfs/QmQZCQTs1rdEnG6A4bigfSR4nNHL9NWzzGAWS6fLgpkQVD\"]},\"src/lib/op/bitwise/LibOpBitwiseAndNP.sol\":{\"keccak256\":\"0x6411206bf93e7a4a6bddf600f2764798d6bfdcb7f4d1da4179b0a33f29f2fce1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2d546a2e869092b804fd560d88c61b9541d03ec9aa648fffe94c9fd513e161e0\",\"dweb:/ipfs/QmcYSXDzh3qG22Vmsi4B4PkdqAawvN7WjnN3Pp8QZXiYBo\"]},\"src/lib/op/bitwise/LibOpBitwiseOrNP.sol\":{\"keccak256\":\"0xa64ec7595bd82938c64b7fe603e3660a63932728a658df12adfb128e34910f08\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1354fd5112ba31d54177d561b6297dd25903560c6f7f526dd30b897bf10dade6\",\"dweb:/ipfs/QmTCK6zgiV1EPkRoXif78C2ZrVNYyDKhqLCDMLgDXyDwUV\"]},\"src/lib/op/bitwise/LibOpCtPopNP.sol\":{\"keccak256\":\"0xc5699c89883617b8f64a6605caac37f5fda83f06c5aa427f06f48e3705bd4ce9\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2ddd28afe4df90e5e6396928663ca3b24f867a5aadfbad4695ee1921944af76b\",\"dweb:/ipfs/QmYj3FvVvtbSzPhpzokc5vC5Vjmz59wb2ZUP4ToV4qLvgH\"]},\"src/lib/op/bitwise/LibOpDecodeBitsNP.sol\":{\"keccak256\":\"0xffd8527c0888e1e481139d0232ed44186f001839deb6b57c925ae85eecb03f1b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d695d31116f5e8ea22e90e3fea7df50b57f53e906082f0d46810dbff512bd61f\",\"dweb:/ipfs/QmXhGVNKY8JTsyMAbeNsYgS16uPNkjrYy65fzpXKh1zoEW\"]},\"src/lib/op/bitwise/LibOpEncodeBitsNP.sol\":{\"keccak256\":\"0x8ae90b28edd961f264be64f18e3dee89e599b4017d1973308493bbacf29255c5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1f7a578b2d0e42512cd2988286eca47724f67495c321125f01892c7f49720426\",\"dweb:/ipfs/QmRJBzaq211NwRadeoSMsRRTCG7Fahdik67cBYBE5QPns4\"]},\"src/lib/op/bitwise/LibOpShiftBitsLeftNP.sol\":{\"keccak256\":\"0x7b153250710fa536b8eed011c74f1059d6a988282d71c184093c9a040fce7f0b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ed5c13045d4f29f96d21f8ff5122916430b879b4285090c955953631fc62ae0f\",\"dweb:/ipfs/QmU7n3Z87HLf4vkMq8QYWX6PkwwCSrxYAuJ522TKyceHxS\"]},\"src/lib/op/bitwise/LibOpShiftBitsRightNP.sol\":{\"keccak256\":\"0x08317c810f6fdc53b24af97f7c90de74b111da24edd72142cb06582ac1bd90cd\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://19570479abbae47f2a4903aa19a2b7f5a8dc3ecbef1ad30e5bb8e41203a697e4\",\"dweb:/ipfs/QmXhRJMFKkhVV5Qv7qz9NieoBPH1PFt3Ro3qCFeGwVgWGJ\"]},\"src/lib/op/call/LibOpCallNP.sol\":{\"keccak256\":\"0xc699fab0c99db3116c771302bdc96edb4cba22cf1fe14190dffdea567ef20b42\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a3d17ed7a2b153ae41fc59ee9fe1fb18abdbd5dbdcdb958b9cf24ce78396e9e2\",\"dweb:/ipfs/QmRoxz2bHsNVJ7gC3yTDZ7i8t5iSJtmFv8Ta9T4th1SdZf\"]},\"src/lib/op/context/LibOpContextNP.sol\":{\"keccak256\":\"0x727dee1dee823c24d9eee0a3f4f669deceac4ef6944c91ca612ea69cd9977721\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2a2f019d0dd2449716b93dbfb70e62143a80527f781bde246f4ab7554f493c4a\",\"dweb:/ipfs/QmfKBMTDqPSjtDJQsN395LpXfEM9VmNiEtjYm3ZKFkRVhb\"]},\"src/lib/op/crypto/LibOpHashNP.sol\":{\"keccak256\":\"0x5b50a7468b2cdedd6c1e716ae2ad3a34ddd40084968991a7d9895d5feed032ca\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://72773768e795d485fd35bef779d7c7ead6099fd6b2249e04e97790a3e8fcf588\",\"dweb:/ipfs/QmZvTQDEiBv8Wdg4rSbacEchXoxDmtqn64kbPcxxF3RG7A\"]},\"src/lib/op/erc5313/LibOpERC5313OwnerNP.sol\":{\"keccak256\":\"0x642cff080dc816059d6712a7ef2569f6c6b979e83279f45dc99d7d3418db1841\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://27d40c10ff2a0d11ec65d289d5feb82e25ccd609625e8dc0e15a49c4a4bdac0a\",\"dweb:/ipfs/QmQYKkj9gNo5syBTQTsLGpmHgpCA7RXUXn6tdo4CwPYWgz\"]},\"src/lib/op/erc721/LibOpERC721BalanceOfNP.sol\":{\"keccak256\":\"0xb7b7d1a31a94d290196885237fb68d4559f90e3ebc571459004604ea190ff718\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b2acc84fa1a5b082936d1d80420e64abdf72bd418d584f2e25e95c356817d8c2\",\"dweb:/ipfs/QmaTHuMD7MPhX27WYYAeZxda1E5K2kb7YSxaauGqx2Wg4A\"]},\"src/lib/op/erc721/LibOpERC721OwnerOfNP.sol\":{\"keccak256\":\"0x19b7b889ccd3444d3a4694c3517f20719f90096247138ac0465e98b2eb4ae81f\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://501193edbe09cb6b6faa6f0d16bd3744e61cfabc116592f2ee8d41f4e56b81b1\",\"dweb:/ipfs/QmUzrfCEUifJJgPCQgqrwvivMiVMirNbCk1wgJMFf9KsbF\"]},\"src/lib/op/evm/LibOpBlockNumberNP.sol\":{\"keccak256\":\"0xc981aa32adffc153985e878812fdd236816ac7cc6e10318930c2b28f36636e57\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ac6eaefe7a63854f97aab69b2d8182a738405d59b3032539f70e1ecca058ea1\",\"dweb:/ipfs/QmXEE42UjQbeTWvkMUunCLvJVN8WCx4fcjcxH3MXSCkL2u\"]},\"src/lib/op/evm/LibOpChainIdNP.sol\":{\"keccak256\":\"0x7a1431ee789409625173cdcc013c4c9b63f2b1796ed0e6d1b5e43ea263c3dff4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://72800a688394aa322f8556521294de6e8e66d76dde53ed7d42f41e537bd8bec7\",\"dweb:/ipfs/QmQji25sLut5KovdFtDC2XCHRvf6jVPgAnyWTdx52uneVW\"]},\"src/lib/op/evm/LibOpMaxUint256NP.sol\":{\"keccak256\":\"0xcd3912cb90a4ccd8c4c0c8c9323c962a36481918134410650bcb4ee1c0971dc2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5dd3fd597a3fdde14ce040b665d2fcce95dc6515037acc80a8f5459a07adb850\",\"dweb:/ipfs/QmQiodQK3ZoFCjWcruNQUUjVgfxdZLgcMGTpd3FkVBD2ny\"]},\"src/lib/op/evm/LibOpTimestampNP.sol\":{\"keccak256\":\"0x719d0f81acaa9346fa550ad92d08ab6ba5e3c75bb1140f60746efbc7838eb982\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1db9da7838c66c10e1f0f996ff02326d016193176ff65565d75af9d0d28759c5\",\"dweb:/ipfs/QmQXiAFdF3BrnVWfAVd5ubMv7enxB5kc1pN7sh7xf9oztA\"]},\"src/lib/op/logic/LibOpAnyNP.sol\":{\"keccak256\":\"0xe2fa954fc42bbe0c44723ee3d90216ec5b7cd77b5a2b14957029abb13d54cf47\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a03a827507acab08db716c7e2d380f5a77da3371dfb36cca8f3dc89ccdcf75dd\",\"dweb:/ipfs/QmUXaqi1nc6gqJp8CgRSznMY1fcuvP3q2sqZFEkL4vbH7p\"]},\"src/lib/op/logic/LibOpConditionsNP.sol\":{\"keccak256\":\"0xaeaf2e1610f805fa60c7187aec3f0c914586f17ece3fca8acc19d12bb10d8ddd\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30cb7f8bda36da1d11f64e995fd65fd3559aa30ee984457f221414349fa8350b\",\"dweb:/ipfs/QmdyHhhhCo1ZiiktsDC3JQuNQTZ26GELJcFeS4zis5Hjgr\"]},\"src/lib/op/logic/LibOpEnsureNP.sol\":{\"keccak256\":\"0xb5b6a808b7db6b2d341be5da4e5e47f4a98232807d416e3ebb6460940f8678dc\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2cc14985d89f557869ac438a9be5d5301bfed760424a2778f77ed466408b4d2\",\"dweb:/ipfs/QmUMDJ1Fnyw5GP55VZpW8KGw629ZPgjLwKWcyakW7e2JHd\"]},\"src/lib/op/logic/LibOpEqualToNP.sol\":{\"keccak256\":\"0x0c910729104f04e7085d3439cfc3661343d85ee7f2570d18a6292a164b13946d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://647eaa9e135e2a74fede8d7df0c1d6127b6f807d9dea0ce26d6fc15a6cba3bcb\",\"dweb:/ipfs/Qmcw7M4h33KFFX7GJZHsRQJkAvEMADb25dTm2VfT34FczR\"]},\"src/lib/op/logic/LibOpEveryNP.sol\":{\"keccak256\":\"0x9393b10c69e1c2437855fa491996e0035668c2971ad61bee1b1fac90cf70620f\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://97802ea94622ee5dcc44836a5c883bec7c830ec27adaa36b78f3eb0a30cf42c1\",\"dweb:/ipfs/QmZeAvcVL3U5MJY2msEHimVmCEMrdEM4EzwKnrwfbQBs2u\"]},\"src/lib/op/logic/LibOpGreaterThanNP.sol\":{\"keccak256\":\"0x8631d104313b4d06fdbba8b5f9080a70c50b72c81d1fa35027197b9b027fdd16\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://eedfeb22f6fbcfd088127c01da5742d9d75f976c36e1fa77bc174f4e01b9d3dc\",\"dweb:/ipfs/QmTnjtoNitGt99U2gKnDehHTaw63vfzczphRyjcNgsehDg\"]},\"src/lib/op/logic/LibOpGreaterThanOrEqualToNP.sol\":{\"keccak256\":\"0xe865d600e2619d8eb66126e44f7c8608aaef1b9879fa47a1c5a626b7108532e3\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://17149a826cc7d76f9fb405fd9d4c7ecd4d7a0545769e678f93b72c63b1096717\",\"dweb:/ipfs/QmVSe5inpZE2ABG4VeeCRVrTKcNrdWYG9a7tByBBoMLQJv\"]},\"src/lib/op/logic/LibOpIfNP.sol\":{\"keccak256\":\"0x2db4cf41ee053f62c798f50442e0a46f831a581c18fc34090e874a11bdfc9c7c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3eb2bbf48552bb869e9e47cfeba1bcf2b50dea72cc7a78021c3dc4f2e083182d\",\"dweb:/ipfs/QmeisvEZ94oxro1oG2LaAJWJf31TKDXSsNUgNRWfKXpnpf\"]},\"src/lib/op/logic/LibOpIsZeroNP.sol\":{\"keccak256\":\"0x29464f68cd06c704ae5a3b47419240cd4883adebf8c150aea9c387f0f25260e0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d5bf6fdee8e9a78e8ed23cd2eaa193d900de7cc7bfd576a0816515c1a5dce70a\",\"dweb:/ipfs/QmNqqcdoyJG8vSmBYeTgtahWYyaQxK3YBY2pxbDkbT5aHM\"]},\"src/lib/op/logic/LibOpLessThanNP.sol\":{\"keccak256\":\"0xb2036f896db97762ed3de5cebc4319b9b2679d159b33cdad154394f57e530372\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0f3c426ccb39d90ee8e50633f193ee591eb45506877a9d1a6fd50075ade476c4\",\"dweb:/ipfs/QmXZi9QPhbko8Nt6vkPjRyJdaHzaXis9KADoerW8wwtfM2\"]},\"src/lib/op/logic/LibOpLessThanOrEqualToNP.sol\":{\"keccak256\":\"0xe89dcec789aa4aeac00e2b1ca9fe773d95f252beea1aa945778a3750316d152e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://314068a92429ed9b49e558c95a78223a9e4a1849737970203b6aec8f3af0b7f6\",\"dweb:/ipfs/QmZ2MDdH1LuqMhzgqJt6n1GowT9nYVoY2RNDrdpRgG6c3j\"]},\"src/lib/op/math/decimal18/LibOpDecimal18DivNP.sol\":{\"keccak256\":\"0x691db6e70d1e691cb9ac5ba4a7bb4e13fbf6772916fac5f6d5895340306a28e4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4ecaa66ae5ac86d96d6771e20ff80acfca389af9c3b71e20f632d8854ae4d9ef\",\"dweb:/ipfs/QmWyzcKaki9orRNoRjikdmQrWWjGtd1JYZ9GRwaASYKuMH\"]},\"src/lib/op/math/decimal18/LibOpDecimal18MulNP.sol\":{\"keccak256\":\"0xc7f0f1b35f0508e7d1818bc3442d103ee3bc0a53cc39198379c1065a3474749d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6bc7e1fde53c5c322c3f181630d45f28ba44b0a9bef7caf72bf4aed11de9071a\",\"dweb:/ipfs/QmPeVSLVKHzYzupoofLjsyyRhqScJZ5rEMbJs1EbafaevT\"]},\"src/lib/op/math/decimal18/LibOpDecimal18Scale18DynamicNP.sol\":{\"keccak256\":\"0x1395725f712c9d696910723145255f31996464de65f4254d58e2ff5f057b81ad\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b6ff0901efdfdbee20297807804466770dfafcd6c43c487fa4a954ec292fec71\",\"dweb:/ipfs/QmNWXwCYjRYNpTAZBpnaVqgqPbxxo7qirDzuVKSgKQDdPT\"]},\"src/lib/op/math/decimal18/LibOpDecimal18Scale18NP.sol\":{\"keccak256\":\"0x537d39862901a1b4af2f83cb7b8aa6b32b592e5eac4fede3a8be7458e32424b5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d556b48bcc23ee694c517793c809200ed0be3d12e2115fa900c292de3561eeb6\",\"dweb:/ipfs/QmUp7avbLk1qiVpUr72bHKFXQFQsk6VJQHRTfbbMKmEyMG\"]},\"src/lib/op/math/decimal18/LibOpDecimal18ScaleNNP.sol\":{\"keccak256\":\"0x1220c9a143c788cbb2c2fb4e0508357c5a3b66427a3dbe36c2c583642dd921cb\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://8f44d208f81afe71a6baa27a9fe1c7a8cfe55aaa269e06fdcf602064bd2ae5d3\",\"dweb:/ipfs/QmTdEcguiYHkgXEXFHGbN29iFAYc6cSjewUjvHjgyVqKpT\"]},\"src/lib/op/math/int/LibOpIntAddNP.sol\":{\"keccak256\":\"0x7ecc63ae8c72a2c6f67e780ba267bf06008392226175b966d6eda1bde6371f01\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://afc0a8e44326471490d908ad994f8e9922fb56ff0228fd89c3c82d8e526a8bbe\",\"dweb:/ipfs/Qmf4ukz5mRMuCV61jBbuorJCzTyD6PW3C9jEifYLJnyLeE\"]},\"src/lib/op/math/int/LibOpIntDivNP.sol\":{\"keccak256\":\"0x6416015d8c4a676b30a9c242a897db825ed7dba7719f7f7406b7197fd01d1854\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e1bacbb2c2113b3619e929a16215f312820e0566935aa05634996e45a7a017cc\",\"dweb:/ipfs/QmUkmYx39knqUftfuuaKJ7Hti2wHJUQcxV9hZ7fbUr5edf\"]},\"src/lib/op/math/int/LibOpIntExpNP.sol\":{\"keccak256\":\"0xdbdf576c0aa2b36cb1a2f9b70c32a905528fab2e8a74e31bd9b6a1f8a210c21b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4b7f8a9eb04156783728b16bd99ab9a53276fd45c5248c5e90b3347b16b04ad5\",\"dweb:/ipfs/QmZWmci7SNhJWKkYbbBT5iKkMdTWuYU2RN7SaWmrCVEjHS\"]},\"src/lib/op/math/int/LibOpIntMaxNP.sol\":{\"keccak256\":\"0x052f392930e3b631c863004e4be3a95cf6e78cf75baee38921271d0db33d90aa\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://aa69fc771ae45235dd1a3ce39ef03c586523f0c2984af1bc9b12139e88aa3320\",\"dweb:/ipfs/QmXS47aaKEhyLB7dJrBLwK8vNLy2V3mznGsNw4ZtGB88tN\"]},\"src/lib/op/math/int/LibOpIntMinNP.sol\":{\"keccak256\":\"0xc62d6969711f32071c6daa29176a8de1d9e58707b683a1ae4ce52a9277e64e32\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5fdaf9bda5ee5fd01f50d2dce57dffa0aded1e2d2496ce438cef416686050386\",\"dweb:/ipfs/QmPYmqHjDxZqGQSy4k7Q8rA9PNEEcHoUSqU9BZKmeuxdAr\"]},\"src/lib/op/math/int/LibOpIntModNP.sol\":{\"keccak256\":\"0x1b55f250e601873d552db746d48af97da654467400c9a9047a6a8b99ca44bc36\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://89ecb113fd3dc0f2118b60d7cb363892d4b633e2777ee1ef411d845f19e8a27d\",\"dweb:/ipfs/QmXxA9E6gtLnCs2wdyHRiVj97Z8nTNoQhsNh311HV2pKjm\"]},\"src/lib/op/math/int/LibOpIntMulNP.sol\":{\"keccak256\":\"0xf54e63af097828f754cba12d16377139f108f976ac060a112f2b7a356495cccd\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://60c97d9970126dc933075433d03d0df1d0530a72ff9e16f4cc3865b2b07b9364\",\"dweb:/ipfs/QmUi9oYyCxgDwXat8F8BFKCtdZeWfjCBCbzqrTHf3yNQKn\"]},\"src/lib/op/math/int/LibOpIntSubNP.sol\":{\"keccak256\":\"0x90fdb1f88c538ae68227974134fed1d07581f73d19908e14f4378a2f3fb255c2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://37ccc2d62e9639a3cb64170799fefc739d116c2d3acc9b1b329b801a40e3bd8c\",\"dweb:/ipfs/QmQ655sq42jiy9sdzWFs1cXKjJMgWrWCj6e65bxwmAvxjZ\"]},\"src/lib/op/store/LibOpGetNP.sol\":{\"keccak256\":\"0x0a969e9446204e34fceece225be31a6c5199b16ff36037430b3b95494b07bb22\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c5c14b0ad2595c4e5f0260b3091471799ba34e88446e073feab01be75bb4369a\",\"dweb:/ipfs/QmT8wNGeey9TzrUUweixKgjfHtjPzckqEatJCKqkQ7Vaz3\"]},\"src/lib/op/store/LibOpSetNP.sol\":{\"keccak256\":\"0x672547e0f7c4448d04f4959e6efd6e3fc81b93ae5fe4e070f19c812b619ab8e6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d402053f654fa64981044d0ed0d27b35f6977f62401e8e445bbf27cee6fa56bf\",\"dweb:/ipfs/QmP4b8E8dKkw3rJbLCCLV1UPxyNZDuyB2esDHCaP2yaDUy\"]},\"src/lib/op/uniswap/LibOpUniswapV2AmountIn.sol\":{\"keccak256\":\"0xb62e7e13945b80d49b898b3c50c3094b7f627fad47a35cb1acb9a18a5d9dd0fe\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7a4f72f300010c03fd43af444c903dc9d96251a80a8deb6f618a444030bc1956\",\"dweb:/ipfs/QmYzWGomMoeQ6Xo17qfFkfUcEJPebTVPgTtSrZwsnENnDC\"]},\"src/lib/op/uniswap/LibOpUniswapV2AmountOut.sol\":{\"keccak256\":\"0xc0d34fb18112ddd63c8f3b516f665ae03ea9771942dc095b5b29f98eae588916\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6aa99580f907f8aaeac3e4367cb7fbf2e4bacda1d133224033cc84df91e567f9\",\"dweb:/ipfs/QmQSzCpUQGBi2TUXLks1JpBvKyzjmaQb3EZQ7Y8hyEYFPe\"]},\"src/lib/op/uniswap/LibOpUniswapV2Quote.sol\":{\"keccak256\":\"0x96f3896470a7676d34029d6c090a1d0a45f9c7697a92328925412ffa349e17cf\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://881e27cfd15bd48011d0ed0851856a39d6c991ef54d3472551b8ff0d3adc9067\",\"dweb:/ipfs/QmUnJDNX9wCY1mdN38TN1V72N3mWfvM58ySxwhtu5dMcUM\"]},\"src/lib/parse/LibParse.sol\":{\"keccak256\":\"0xf0de57f292629cd2e09964897be77f7bf7ba786a06b232be47ab0fa244004287\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://f085a7937788be20e56fdd97e8a66919282c4e25312dc0e8bcf28802b5c175fa\",\"dweb:/ipfs/QmcMycQRt95sFNWoKpg8EUaonTJmFHvr3d11KWM71sHf43\"]},\"src/lib/parse/LibParseCMask.sol\":{\"keccak256\":\"0x5ec6b865df66bec72ea0976082ce9b7d0250818ee8180cf463861f20eec3b0ff\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3e6660d651d4d57eadd18b440235f5a63c4bac7dce52a9f065329b47e2ca4fec\",\"dweb:/ipfs/QmNUJs5iPbuZRYmkZc3XzsekRdzdrABoQUPbg5eEGhr2kV\"]},\"src/lib/parse/LibParseLiteral.sol\":{\"keccak256\":\"0xd36696cc8b1f4f332f82f037e63aaf89b730e10056d93cd59849dc421a33fa93\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://136302dafb7c9626f6bf790a974bcf20db312a753f8cc5a2ff220b699dc276f1\",\"dweb:/ipfs/QmPSQoXqQ1AvvNyseXiEQv35dQyKJ3SzgvmnjmWzecy3aQ\"]},\"src/lib/parse/LibParseMeta.sol\":{\"keccak256\":\"0x910e6af2fe4281ccc66376d407933fee8601451161e52d80cf7146eb774a3246\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://972dd1416a724a5068717202198617c13754f144ef72ac54b05e991ece148937\",\"dweb:/ipfs/QmdJLRXxPiaPH8vyty3EgEM4zM2dwXbGeiB3mPKqEeBL6J\"]},\"src/lib/parse/LibParseOperand.sol\":{\"keccak256\":\"0xba1030d096646784f61acf4f742a45a96527f29079b8fb1950c9d537a9717bf6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://814f78faa0adc4d556028eba971106924511abff3983e754c7275d6a0c3253c3\",\"dweb:/ipfs/QmducXPnyu7Nve3gTjtKxpMTt6ddoEd4JMXduJC3f5hMD3\"]},\"src/lib/parse/LibParseStackName.sol\":{\"keccak256\":\"0x5c24e0f7b58f751dfe8ea7f900d7d70dea0cf983922d11f02b8c659cadb7aaec\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://aed9fad94c01122517bcc68fea0f89e2dc1c0cf4191dd9f7be0219c1072dbcce\",\"dweb:/ipfs/QmYFvDhR4GvoXNJm8WYjEqmeij33N2trAPr1YnFnLSR2XK\"]},\"src/lib/state/LibInterpreterStateDataContractNP.sol\":{\"keccak256\":\"0x3015f22cfab5bb672bc08440a1b7fd6a24c64536bbcc6cfa63a744700fed1ac0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bee842de1b3e529f02c5c6041678479c9403176fb25a41f9872b86c81b1c0723\",\"dweb:/ipfs/Qmat5yhCsbWxEXUQRMJkdCY8oHZS87kJQg6zJSG12fcQKo\"]},\"src/lib/state/LibInterpreterStateNP.sol\":{\"keccak256\":\"0x51f187ecc7101939f7d69e7ae775ab9cd96169191c3068e4a68cffc1bb817280\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d49c7295d8b2a250cea699266df6d14016870052e51b4b9c387dc2be1c8d89da\",\"dweb:/ipfs/QmaHHUK6DgAVixpgUEV4ukuKXmrr4P2m9isTfky9YfeT7z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "parser",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "dynamicLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "standardOpsLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadDynamicLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "calculatedInputs",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bytecodeInputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadOpInputsLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "sourceOutputs",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "outputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CallOutputsExceedSource"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "constantsLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "constantRead",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OutOfBoundsConstantRead"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackTopIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackRead",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OutOfBoundsStackRead"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "sourceIndex",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SourceIndexOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stackMaxIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bytecodeAllocation",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackAllocationMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stackIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bytecodeOutputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackOutputsMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "relativeOffset",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackSizingsNotMonotonic"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "calculatedInputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackUnderflow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stackHighwater",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "StackUnderflowHighwater"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startBit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TruncatedBitwiseEncoding"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "TruncatedHeader"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "TruncatedHeaderOffsets"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "TruncatedSource"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedConstructionMetaHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualConstructionMetaHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedConstructionMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedBytecodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualBytecodeHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedInterpreterBytecodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedBytecodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualBytecodeHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedParserBytecodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "UnexpectedSources"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedBytecodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualBytecodeHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedStoreBytecodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "UnexpectedTrailingOffsetBytes"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shiftAmount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsupportedBitwiseShiftAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WriteError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroLengthBitwiseEncoding"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "interpreter",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "store",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "parser",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DISPair",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IInterpreterV2",
              "name": "interpreter",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "store",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "io",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeployedExpression",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "constants",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewExpression",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256[]",
              "name": "constants",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployExpression2",
          "outputs": [
            {
              "internalType": "contract IInterpreterV2",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "expectedConstructionMetaHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "iInterpreter",
          "outputs": [
            {
              "internalType": "contract IInterpreterV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "iParser",
          "outputs": [
            {
              "internalType": "contract IParserV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "iStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "integrityFunctionPointers",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deployExpression2(bytes,uint256[])": {
            "params": {
              "bytecode": "Bytecode verbatim. Exactly how the bytecode is structured is up to the deployer and interpreter. The deployer MUST NOT modify the bytecode in any way. The interpreter MUST NOT assume anything about the bytecode other than that it is valid according to the interpreter's integrity checks. It is assumed that the bytecode will be produced from a human friendly string via. `IParserV1.parse` but this is not required if the caller has some other means to prooduce valid bytecode.",
              "constants": "Constants verbatim. Constants are provided alongside sources rather than inline as it allows us to avoid variable length opcodes and can be more memory efficient if the same constant is referenced several times from the sources."
            },
            "returns": {
              "_0": "The interpreter the deployer believes it is qualified to perform integrity checks on behalf of.",
              "_1": "The interpreter store the deployer believes is compatible with the interpreter.",
              "_2": "The address of the deployed onchain expression. MUST be valid according to all integrity checks the deployer is aware of.",
              "_3": "Binary data where each 2 bytes input and output counts for each source of the bytecode. MAY simply be copied verbatim from the relevant bytes in the bytecode if they exist and integrity checks guarantee that the bytecode is valid."
            }
          },
          "integrityFunctionPointers()": {
            "returns": {
              "_0": "The list of integrity function pointers."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deployExpression2(bytes,uint256[])": {
            "notice": "Expressions are expected to be deployed onchain as immutable contract code with a first class address like any other contract or account. Technically this is optional in the sense that all the tools required to eval some expression and define all its opcodes are available as libraries. In practise there are enough advantages to deploying the sources directly onchain as contract data and loading them from the interpreter at eval: - Loading and storing binary data is gas efficient as immutable contract   data - Expressions need to be immutable between their deploy time integrity   check and runtime evaluation - Passing the address of an expression through calldata to an interpreter   is cheaper than passing an entire expression through calldata - Conceptually a very simple approach, even if implementations like   SSTORE2 are subtle under the hood The expression deployer MUST perform an integrity check of the source code before it puts the expression onchain at a known address. The integrity check MUST at a minimum (it is free to do additional static analysis) calculate the memory required to be allocated for the stack in total, and that no out of bounds memory reads/writes occur within this stack. A simple example of an invalid source would be one that pushes one value to the stack then attempts to pops two values, clearly we cannot remove more values than we added. The `IExpressionDeployerV3` MUST revert in the case of any integrity failure, all integrity checks MUST pass in order for the deployment to complete. Once the integrity check is complete the `IExpressionDeployerV3` MUST do any additional processing required by its paired interpreter. For example, the `IExpressionDeployerV3` MAY NEED to replace the indexed opcodes in the `ExpressionConfig` sources with real function pointers from the corresponding interpreter. The caller MUST check the `io` returned by this function to determine the number of inputs and outputs for each source are within the bounds of the caller's expectations."
          },
          "expectedConstructionMetaHash()": {
            "notice": "Virtual function to return the expected construction meta hash. Public so that external tooling can read it, although this should be considered deprecated. The intended workflow is that tooling uses a real evm to deploy the full dispair and reads the hashes from errors using a trail/error approach until a full dispair is deployed."
          },
          "iInterpreter()": {
            "notice": "The interpreter with known bytecode that this deployer is constructed for."
          },
          "iStore()": {
            "notice": "The store with known bytecode that this deployer is constructed for."
          },
          "integrityFunctionPointers()": {
            "notice": "Defines all the function pointers to integrity checks. This is the expression deployer's equivalent of the opcode function pointers and follows a near identical dispatch process. These are never compiled into source and are instead indexed into directly by the integrity check. The indexing into integrity pointers (which has an out of bounds check) is a proxy for enforcing that all opcode pointers exist at runtime, so the length of the integrity pointers MUST match the length of opcode function pointers. This function is `virtual` so that it can be overridden pairwise with overrides to `functionPointers` on `Rainterpreter`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/prb-math/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.solmem/src/",
        "rain.uniswapv2/=lib/rain.uniswapv2/",
        "rain.will-overflow/=lib/rain.uniswapv2/lib/",
        "sol.lib.binmaskflag/=lib/sol.lib.binmaskflag/src/",
        "v2-core/=lib/v2-core/contracts/",
        "v2-periphery/=lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/RainterpreterExpressionDeployerNPE2.sol": "RainterpreterExpressionDeployerNPE2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol": {
        "keccak256": "0xeaadc351ada39f013498fad8b9d6162206cede3331dc89525686cfadb6ee9b35",
        "urls": [
          "bzz-raw://d90d18a20b8f1c85bf74bab53ad5e913412153023af30d2c1507420639ced387",
          "dweb:/ipfs/QmY58Hvx77dHUae18eaYXvLSve7dLkejQekTPkCwYyYufN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/Common.sol": {
        "keccak256": "0x70b3a76443312b2c6c500996306a18e3d91e5d56fed0d898d98ca0bfb6225053",
        "urls": [
          "bzz-raw://be75b034b8c27e96b375e862528afb52a2d11e75c4a25918e10d7db31cdec039",
          "dweb:/ipfs/QmQ4L3tvpDx2ophHRAW7Sc52QhVZzn4e5PKTgLwqt32F1B"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/Constants.sol": {
        "keccak256": "0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f",
        "urls": [
          "bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770",
          "dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Constants.sol": {
        "keccak256": "0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a",
        "urls": [
          "bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8",
          "dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Errors.sol": {
        "keccak256": "0x83ee24e41d235bc05cb641d2c5c16c67b17fa00e4593661a8d14350435d4df04",
        "urls": [
          "bzz-raw://40cedd66b7ba40126b2668c2fbe8ccd6ae88bd5853c205ac54f643e49acd31c1",
          "dweb:/ipfs/QmWZz7bsQceUUzJiURQE5XtfzNW2Ammiz2WSNsZGxCYT7a"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/Math.sol": {
        "keccak256": "0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868",
        "urls": [
          "bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787",
          "dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/Casting.sol": {
        "keccak256": "0x07ec9a8adddfe6bf37f0d9ce7702c5620a6215340889701da0525ed190ccc099",
        "urls": [
          "bzz-raw://3500550c9ed259e5a876d14510d7e4a2226fac41e04535dddffaf9e3e6dc67e5",
          "dweb:/ipfs/QmbA5y7zdqsFELeNPj1WgkP28GXBcnfYajj3E6nangJo2F"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/Constants.sol": {
        "keccak256": "0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5",
        "urls": [
          "bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b",
          "dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/Math.sol": {
        "keccak256": "0xafe12d658b5bb495226df1841cbfbcb25e9fc443c6d41a85b5ac6aa7ec79ea29",
        "urls": [
          "bzz-raw://357d345f960581548f27fb43fb2320101033c053b949f5cb4d75390a058df205",
          "dweb:/ipfs/QmYjQwVdwCWZDNkxUD4T1nwieP38o4HWtYUYjAmfpFpg3y"
        ],
        "license": "MIT"
      },
      "lib/prb-math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "lib/rain.datacontract/src/lib/LibDataContract.sol": {
        "keccak256": "0xe3700fdb21ade704e8b7b75bee127544794e3c33f8ec693e348cb1f1515e1900",
        "urls": [
          "bzz-raw://628b35072f98948d8968302976af3d5aa80b37ba33958d6a5a4ee158834a2670",
          "dweb:/ipfs/QmPQd1bkpnuTTAv1oTuz6HUd2ZRkERL34SBv4f4Jaf2LKu"
        ],
        "license": "CAL"
      },
      "lib/rain.erc1820/src/interface/IERC1820Registry.sol": {
        "keccak256": "0xbfcb68f1a27e3b04f9acfd4164ad5373afc27659033307c8f697b958ce4cd16e",
        "urls": [
          "bzz-raw://d280c893633b3f28a4db8416224d626c7d3badf009e3e6da318b81f09eac7f44",
          "dweb:/ipfs/QmUWZBQoCCLdAF4ExnxnxMKA4VuEYqTNhLHwaAo3SJevDP"
        ],
        "license": "MIT"
      },
      "lib/rain.erc1820/src/lib/LibIERC1820.sol": {
        "keccak256": "0xc0dabba14979d7b6f03d2cded0719735356ed00b48beba3dd8b59e366089e771",
        "urls": [
          "bzz-raw://a8046398a515f49a2095fea84bfa3418b5e0b122eaa2b150876334cb8a931ab1",
          "dweb:/ipfs/QmQUKdvALy6L412JEEZBt4TzqLHrZ1JuWkpYyk8ut83DT8"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/src/lib/LibMemoryKV.sol": {
        "keccak256": "0x6c9b2a50a27f2eb77f5b53348df31f4a2c427ea62f6f628278b870bf5b305a16",
        "urls": [
          "bzz-raw://9abc6e1b29c98a754d566997c924de78b885a2b0eb60e77de8d988c8b29d22f6",
          "dweb:/ipfs/QmPhhEeqSs8BDVEYxfSsqQSiZaKLHw6bFtgjuq8QsjVhdc"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.typecast/src/LibCast.sol": {
        "keccak256": "0xbb5ecf1af5ccc7591ce16d02d20d200bee330fd40fdf57d933aaf7e0e7e58369",
        "urls": [
          "bzz-raw://fcf92be17e5ed37416341839bd401a10b4cde2be8c737a2e56de7967f4874378",
          "dweb:/ipfs/QmcFeqUSU7zo87v6yW4Vd3nczAau9NiqM6FZLGime1Vev5"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.typecast/src/LibConvert.sol": {
        "keccak256": "0xa9511da2a6f737cc4fa208eea891139748e71e39d03b7d169c5a4fb4ccf24928",
        "urls": [
          "bzz-raw://13d9ad983b7538346879e4f5ec25c417772815e46a32c8b8b738860e4f1282c3",
          "dweb:/ipfs/Qme7HhdvuNWeWzq7Aw1jciuPuJPNHDFMYxvyBcoSK889zu"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/lib/FixedPointDecimalConstants.sol": {
        "keccak256": "0x0d49e0111affa09a4767373bc550609ca3fc4ebf644c53f68ec7b750363d665b",
        "urls": [
          "bzz-raw://eca030b8ff848c042a97ab8522d555db426afac4053697f985be714047bfcd75",
          "dweb:/ipfs/QmRNwqGPXmyCszjcMBj6GM6AZfJ92XcwdjSm9QfJeWW6jN"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/lib/LibFixedPointDecimalScale.sol": {
        "keccak256": "0x4b4a1f943159fd837a9b243a226fdb9b4afd4fab0eb45b276fd6e7612950300a",
        "urls": [
          "bzz-raw://4a8e53ce2a5fb2c97a0e3b9151aadd4b047cb987a6e77404806245833f3879c8",
          "dweb:/ipfs/QmcU5b4EqUacgXWEorbH2MzJmBEwf4Qos6sruq7nUGLZ79"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/src/lib/LibWillOverflow.sol": {
        "keccak256": "0x71c6bfb257f44498f583280100216b0ecc219837118b493ce2f179ecfeb71d9b",
        "urls": [
          "bzz-raw://25b4c0c75cad29d64be39639ca583bbfcced2768773a01cfe8a6810af5af8f9a",
          "dweb:/ipfs/QmbEfsL2rpVLR86kjDMJ7WY2coLmmiE15oWck4WwXjwbp7"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemory.sol": {
        "keccak256": "0x82c1e8067a31ce737cfc76cd8cebb6a01d0680ff811a9e85e8d6c38f2351e4f5",
        "urls": [
          "bzz-raw://66741c8c46fb904b119a7a4d15417a8e44eb4fa4090b40c351b2c83deeb37830",
          "dweb:/ipfs/QmQB7G8qdrvs7rjbKgzUTydY6KCVEs4m1SJqxZ5n1F49Gp"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibStackPointer.sol": {
        "keccak256": "0xf8392fe485d4825f75c62d0729d2f8f455e2162dab9f090d7b9e116f7577baad",
        "urls": [
          "bzz-raw://cf8b236e4d50e7d9e124455ce143784021858bbfb35db7213f3d96f13c14f9c8",
          "dweb:/ipfs/QmY8xqFSLzfBL8aYtLx6S7pFgLGNrawDDbnM4231rK2M8P"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/rain.uniswapv2/src/error/ErrUniswapV2.sol": {
        "keccak256": "0xf72854f6a346f90e57e3e2c985ef9c2856161578a090aaf9d5bb68b4a1d950e0",
        "urls": [
          "bzz-raw://7d9873fd43251e8238d1ebc4e33f2d6d64efb0a0e80b03be2130ecef3fdc606a",
          "dweb:/ipfs/QmZzFQbWbg26i3QpRRKc1DuXViciXayn9Kjype9XZLnr24"
        ],
        "license": "CAL"
      },
      "lib/rain.uniswapv2/src/interface/IUniswapV2Factory.sol": {
        "keccak256": "0x502cb6f790ac98fd16c7c0996a4045c3ae22fd422faa83e2218cfc1e32c3e8f8",
        "urls": [
          "bzz-raw://264f78486733295ce4e1b70357f2b36144a4007169a54f2c511acddd9642bd21",
          "dweb:/ipfs/QmNT4oNgusD8nsQPhGANZgyT5i1q4AHEkygwMhVGisSyVD"
        ],
        "license": null
      },
      "lib/rain.uniswapv2/src/interface/IUniswapV2Pair.sol": {
        "keccak256": "0xad56bb89b5ac29439b5e73d6181aa5da9bd19ce8188d5e13d41ca30f0c0af985",
        "urls": [
          "bzz-raw://d7f6f472ce5e94e01d13aa0bfe99846bfaa7e8903ddc27f415b42c206d5046ce",
          "dweb:/ipfs/QmYBfzFYiBiVy7JigjUzv9qZeUBwRVu7rFebU5Q57izupw"
        ],
        "license": null
      },
      "lib/rain.uniswapv2/src/lib/LibUniswapV2.sol": {
        "keccak256": "0x770d0fdf7a01fefa61a34410c51b16804fea33f423a620ba0634b60e826e0fe1",
        "urls": [
          "bzz-raw://11f504393e8a78d25f43ca7ed1575af8213fe321946ca9cf7327b1ae2503b3ab",
          "dweb:/ipfs/QmerS3vAKcnvGSuoQJiqgZ7ypZK2qDWpkikrddsnPvYuso"
        ],
        "license": "CAL"
      },
      "lib/sol.lib.binmaskflag/src/Binary.sol": {
        "keccak256": "0xce65af9621e3306f7e05641138ab961d2de30ee544a50e688a8e1784be74d437",
        "urls": [
          "bzz-raw://04746eee593e31401af18509d7be132dfd3205644473f44178e480866b37c848",
          "dweb:/ipfs/QmVpwKJyp65wzjXfJS1aR2yywKJ6SKLSdrV1jEznFrHutd"
        ],
        "license": "CAL"
      },
      "src/concrete/RainterpreterExpressionDeployerNPE2.sol": {
        "keccak256": "0x67deba8d290ef2e810e9fd1969b16e70666a362ce458ca158d3891a0d1775003",
        "urls": [
          "bzz-raw://0a60606bd966d0aa178384cf21f4f68c139d443302069b3d4155c7aebef1acc7",
          "dweb:/ipfs/QmdJqxJAmX2tUhUMX62T6b6uPQXp5umbKUU6MXmVrjK77c"
        ],
        "license": "CAL"
      },
      "src/concrete/RainterpreterNPE2.sol": {
        "keccak256": "0x5d1e50c231c23ad9d10488dfa0cbb99dc5dfaf3c45b4f57d05fa2d93c16ae1b6",
        "urls": [
          "bzz-raw://ce3804f4d0ef8b57e2304059bd76e62132e3308ad6b11195aee68f8b0ecf3ed3",
          "dweb:/ipfs/QmZyb9rsLHGf2ku1EJuji9HVfasopHKHDY5aAYWEnzxVdK"
        ],
        "license": "CAL"
      },
      "src/concrete/RainterpreterParserNPE2.sol": {
        "keccak256": "0x22b301c09e1246661ef3583ff76d360faf5423f56c0ac54aca7a0dcc99a3848d",
        "urls": [
          "bzz-raw://071521b9aca82c951c940c444d773a8ad3fb6a4536302a94ba1139784816a876",
          "dweb:/ipfs/QmcGxmw71ksiidtMUf2hDh6sfjfrqjhF3rCvFQnbkJnFx9"
        ],
        "license": "CAL"
      },
      "src/concrete/RainterpreterStoreNPE2.sol": {
        "keccak256": "0x14a8bdfcabfb7f01a71fe0013cf611b1d2c90a2e7f05bb303e221b3e05440740",
        "urls": [
          "bzz-raw://8442f69eb350e8ea0d38192f65f0722ec1ac8ae76eaf7c9484e8bbd2c5de2dd6",
          "dweb:/ipfs/QmWyxSWDVW6Pgj7hZxw82YGfrv5H19BjcQtwwHUrCCqdWM"
        ],
        "license": "CAL"
      },
      "src/error/ErrBitwise.sol": {
        "keccak256": "0x57eb292b69a458714d27cc28fa6d2ce75de00d6032c7f7316031709a2180cab2",
        "urls": [
          "bzz-raw://3b8daad2d4234a5f356acab36f450d9a159d1a25d82b9fdab0926eaa8b2edab2",
          "dweb:/ipfs/QmeVs5rMhytE35ELUNCEigv4aTSWfBV1Y4ccgodtZzrTWR"
        ],
        "license": "CAL"
      },
      "src/error/ErrDeploy.sol": {
        "keccak256": "0xe9848e1b7bc6a702b02c81eaa0a9caf94b6cfc1217ec897c3aefe599cc10411a",
        "urls": [
          "bzz-raw://c3c10ddbe593f9d3385f923fe94a77e55e9849f9c0bf992e6072c356af43f600",
          "dweb:/ipfs/QmUa5GafQZXqhm1qFzeopaF6wTG5gQZauj1sqdbGVnA6xF"
        ],
        "license": "CAL"
      },
      "src/error/ErrParse.sol": {
        "keccak256": "0x9300b785aa22a78ce7116ae70efab89ac23748db9447247e3e2562560d6f6df6",
        "urls": [
          "bzz-raw://89e4df3c1ab8b6ff0baeab5e42a6bec176c02678921de0dec0666ed1ad9cd9ae",
          "dweb:/ipfs/QmSmCuaqwZULuJjTKoADUjku2LogGH6GgwMsYEYWcqxHtv"
        ],
        "license": "CAL"
      },
      "src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19",
        "urls": [
          "bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3",
          "dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc"
        ],
        "license": "CAL"
      },
      "src/interface/IParserV1.sol": {
        "keccak256": "0x647a88e4b5b6486e5d846eaa32cd438b406c65781bb9845eec4ef86c033286f5",
        "urls": [
          "bzz-raw://c1caf890fa97f5f07b3ea5b536acb76214c5d3bc784852a46bd405bb90b90b27",
          "dweb:/ipfs/Qme7pMWjKkNv42WtjDHQE4C2u33p3oDcwf7jvYKnMMAk6J"
        ],
        "license": "CAL"
      },
      "src/interface/deprecated/IInterpreterV1.sol": {
        "keccak256": "0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518",
        "urls": [
          "bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3",
          "dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IExpressionDeployerV3.sol": {
        "keccak256": "0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79",
        "urls": [
          "bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69",
          "dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IInterpreterStoreV2.sol": {
        "keccak256": "0xb4369c438f876657e2f6022c43ec068370cc274edde2df71046f781cd1772489",
        "urls": [
          "bzz-raw://ad044848e6d7fa545ead8ad8fa8eb5f823c2aeb56e0b6cd49c3c26b8fcabdeb5",
          "dweb:/ipfs/QmQCopP3JpP4542nPwPdQ8CSusxPhhsYzj46QipTgsqX9o"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IInterpreterV2.sol": {
        "keccak256": "0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50",
        "urls": [
          "bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8",
          "dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew"
        ],
        "license": "CAL"
      },
      "src/lib/bitwise/LibCtPop.sol": {
        "keccak256": "0xc2bbd4f059ee60bf95c80bf60e4d2c3d38328ce540595cefe31cff8e6d2c645b",
        "urls": [
          "bzz-raw://2bafd197ebab97854bb218e5dd6d429128cff29f1417dce0c9e89a8251ccee72",
          "dweb:/ipfs/QmeDdeMZaj5TAc6XjDyK5iiSjLiTcnWq5EALBUvTCdKdZ6"
        ],
        "license": "CAL"
      },
      "src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0",
        "urls": [
          "bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4",
          "dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK"
        ],
        "license": "CAL"
      },
      "src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455",
        "urls": [
          "bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1",
          "dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe"
        ],
        "license": "CAL"
      },
      "src/lib/eval/LibEvalNP.sol": {
        "keccak256": "0xd39623eaca6d166db414804df834999dda3e73014334247b1121d0342bdbaeb1",
        "urls": [
          "bzz-raw://fa7ea518be9f264b23a21c29d1f8bb5b2f8628e9af1698577ab92aa2303046af",
          "dweb:/ipfs/QmQiUMsPfsoRaH3TEN9je5Ri84JKpXtnRPnyv8t98Qnptm"
        ],
        "license": "CAL"
      },
      "src/lib/integrity/LibIntegrityCheckNP.sol": {
        "keccak256": "0x64167635098a544e99d83d667af086f6955c9275ac70525b68a9b541334ad679",
        "urls": [
          "bzz-raw://8a6f709ff25ea0eea668271a5cc4a1fb5bb48aa902b908cf3bb7175b7ae9782b",
          "dweb:/ipfs/QmPBnGYWu4knY51rnd5YanGThxXYJvEhT7x5WQvKSqRxTr"
        ],
        "license": "CAL"
      },
      "src/lib/ns/LibNamespace.sol": {
        "keccak256": "0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153",
        "urls": [
          "bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f",
          "dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y"
        ],
        "license": "CAL"
      },
      "src/lib/op/00/LibOpConstantNP.sol": {
        "keccak256": "0x9fed1aab408170475ef3f32a8e10ebd697f05646b8d9729cd00f59f26678e54e",
        "urls": [
          "bzz-raw://f647d44c569157da60735a663937edcba6e09a4c59f01565d887302c3369c6f1",
          "dweb:/ipfs/QmcNWTwSJFe8WFTExPcP86Ufv5u8eDZwpEYiRreVqZKqKp"
        ],
        "license": "CAL"
      },
      "src/lib/op/00/LibOpStackNP.sol": {
        "keccak256": "0xfb54ea32f8a3113e05aed9bc165243c72b8d0a4a2d8b3ed38a0f018a010bb9ce",
        "urls": [
          "bzz-raw://820f9ac7ae24252ddc2e9910c5a182be8b902faf2e4304ebe5afafd5ad8e50b7",
          "dweb:/ipfs/QmNch4ZYAEgyA3nLV5Wis5rLNrbLYaNzgvDLGRJxuepHEr"
        ],
        "license": "CAL"
      },
      "src/lib/op/LibAllStandardOpsNP.sol": {
        "keccak256": "0x8caf2e2b7764c5716a3907f79aa1c9e34352f1ccd047149e53ec1152cbfef8ed",
        "urls": [
          "bzz-raw://05ff6bb9686696372665b2fd08a82b604312a0b8503060f8007e7c955da7b5bf",
          "dweb:/ipfs/QmQZCQTs1rdEnG6A4bigfSR4nNHL9NWzzGAWS6fLgpkQVD"
        ],
        "license": "CAL"
      },
      "src/lib/op/bitwise/LibOpBitwiseAndNP.sol": {
        "keccak256": "0x6411206bf93e7a4a6bddf600f2764798d6bfdcb7f4d1da4179b0a33f29f2fce1",
        "urls": [
          "bzz-raw://2d546a2e869092b804fd560d88c61b9541d03ec9aa648fffe94c9fd513e161e0",
          "dweb:/ipfs/QmcYSXDzh3qG22Vmsi4B4PkdqAawvN7WjnN3Pp8QZXiYBo"
        ],
        "license": "CAL"
      },
      "src/lib/op/bitwise/LibOpBitwiseOrNP.sol": {
        "keccak256": "0xa64ec7595bd82938c64b7fe603e3660a63932728a658df12adfb128e34910f08",
        "urls": [
          "bzz-raw://1354fd5112ba31d54177d561b6297dd25903560c6f7f526dd30b897bf10dade6",
          "dweb:/ipfs/QmTCK6zgiV1EPkRoXif78C2ZrVNYyDKhqLCDMLgDXyDwUV"
        ],
        "license": "CAL"
      },
      "src/lib/op/bitwise/LibOpCtPopNP.sol": {
        "keccak256": "0xc5699c89883617b8f64a6605caac37f5fda83f06c5aa427f06f48e3705bd4ce9",
        "urls": [
          "bzz-raw://2ddd28afe4df90e5e6396928663ca3b24f867a5aadfbad4695ee1921944af76b",
          "dweb:/ipfs/QmYj3FvVvtbSzPhpzokc5vC5Vjmz59wb2ZUP4ToV4qLvgH"
        ],
        "license": "CAL"
      },
      "src/lib/op/bitwise/LibOpDecodeBitsNP.sol": {
        "keccak256": "0xffd8527c0888e1e481139d0232ed44186f001839deb6b57c925ae85eecb03f1b",
        "urls": [
          "bzz-raw://d695d31116f5e8ea22e90e3fea7df50b57f53e906082f0d46810dbff512bd61f",
          "dweb:/ipfs/QmXhGVNKY8JTsyMAbeNsYgS16uPNkjrYy65fzpXKh1zoEW"
        ],
        "license": "CAL"
      },
      "src/lib/op/bitwise/LibOpEncodeBitsNP.sol": {
        "keccak256": "0x8ae90b28edd961f264be64f18e3dee89e599b4017d1973308493bbacf29255c5",
        "urls": [
          "bzz-raw://1f7a578b2d0e42512cd2988286eca47724f67495c321125f01892c7f49720426",
          "dweb:/ipfs/QmRJBzaq211NwRadeoSMsRRTCG7Fahdik67cBYBE5QPns4"
        ],
        "license": "CAL"
      },
      "src/lib/op/bitwise/LibOpShiftBitsLeftNP.sol": {
        "keccak256": "0x7b153250710fa536b8eed011c74f1059d6a988282d71c184093c9a040fce7f0b",
        "urls": [
          "bzz-raw://ed5c13045d4f29f96d21f8ff5122916430b879b4285090c955953631fc62ae0f",
          "dweb:/ipfs/QmU7n3Z87HLf4vkMq8QYWX6PkwwCSrxYAuJ522TKyceHxS"
        ],
        "license": "CAL"
      },
      "src/lib/op/bitwise/LibOpShiftBitsRightNP.sol": {
        "keccak256": "0x08317c810f6fdc53b24af97f7c90de74b111da24edd72142cb06582ac1bd90cd",
        "urls": [
          "bzz-raw://19570479abbae47f2a4903aa19a2b7f5a8dc3ecbef1ad30e5bb8e41203a697e4",
          "dweb:/ipfs/QmXhRJMFKkhVV5Qv7qz9NieoBPH1PFt3Ro3qCFeGwVgWGJ"
        ],
        "license": "CAL"
      },
      "src/lib/op/call/LibOpCallNP.sol": {
        "keccak256": "0xc699fab0c99db3116c771302bdc96edb4cba22cf1fe14190dffdea567ef20b42",
        "urls": [
          "bzz-raw://a3d17ed7a2b153ae41fc59ee9fe1fb18abdbd5dbdcdb958b9cf24ce78396e9e2",
          "dweb:/ipfs/QmRoxz2bHsNVJ7gC3yTDZ7i8t5iSJtmFv8Ta9T4th1SdZf"
        ],
        "license": "CAL"
      },
      "src/lib/op/context/LibOpContextNP.sol": {
        "keccak256": "0x727dee1dee823c24d9eee0a3f4f669deceac4ef6944c91ca612ea69cd9977721",
        "urls": [
          "bzz-raw://2a2f019d0dd2449716b93dbfb70e62143a80527f781bde246f4ab7554f493c4a",
          "dweb:/ipfs/QmfKBMTDqPSjtDJQsN395LpXfEM9VmNiEtjYm3ZKFkRVhb"
        ],
        "license": "CAL"
      },
      "src/lib/op/crypto/LibOpHashNP.sol": {
        "keccak256": "0x5b50a7468b2cdedd6c1e716ae2ad3a34ddd40084968991a7d9895d5feed032ca",
        "urls": [
          "bzz-raw://72773768e795d485fd35bef779d7c7ead6099fd6b2249e04e97790a3e8fcf588",
          "dweb:/ipfs/QmZvTQDEiBv8Wdg4rSbacEchXoxDmtqn64kbPcxxF3RG7A"
        ],
        "license": "CAL"
      },
      "src/lib/op/erc5313/LibOpERC5313OwnerNP.sol": {
        "keccak256": "0x642cff080dc816059d6712a7ef2569f6c6b979e83279f45dc99d7d3418db1841",
        "urls": [
          "bzz-raw://27d40c10ff2a0d11ec65d289d5feb82e25ccd609625e8dc0e15a49c4a4bdac0a",
          "dweb:/ipfs/QmQYKkj9gNo5syBTQTsLGpmHgpCA7RXUXn6tdo4CwPYWgz"
        ],
        "license": "CAL"
      },
      "src/lib/op/erc721/LibOpERC721BalanceOfNP.sol": {
        "keccak256": "0xb7b7d1a31a94d290196885237fb68d4559f90e3ebc571459004604ea190ff718",
        "urls": [
          "bzz-raw://b2acc84fa1a5b082936d1d80420e64abdf72bd418d584f2e25e95c356817d8c2",
          "dweb:/ipfs/QmaTHuMD7MPhX27WYYAeZxda1E5K2kb7YSxaauGqx2Wg4A"
        ],
        "license": "CAL"
      },
      "src/lib/op/erc721/LibOpERC721OwnerOfNP.sol": {
        "keccak256": "0x19b7b889ccd3444d3a4694c3517f20719f90096247138ac0465e98b2eb4ae81f",
        "urls": [
          "bzz-raw://501193edbe09cb6b6faa6f0d16bd3744e61cfabc116592f2ee8d41f4e56b81b1",
          "dweb:/ipfs/QmUzrfCEUifJJgPCQgqrwvivMiVMirNbCk1wgJMFf9KsbF"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpBlockNumberNP.sol": {
        "keccak256": "0xc981aa32adffc153985e878812fdd236816ac7cc6e10318930c2b28f36636e57",
        "urls": [
          "bzz-raw://9ac6eaefe7a63854f97aab69b2d8182a738405d59b3032539f70e1ecca058ea1",
          "dweb:/ipfs/QmXEE42UjQbeTWvkMUunCLvJVN8WCx4fcjcxH3MXSCkL2u"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpChainIdNP.sol": {
        "keccak256": "0x7a1431ee789409625173cdcc013c4c9b63f2b1796ed0e6d1b5e43ea263c3dff4",
        "urls": [
          "bzz-raw://72800a688394aa322f8556521294de6e8e66d76dde53ed7d42f41e537bd8bec7",
          "dweb:/ipfs/QmQji25sLut5KovdFtDC2XCHRvf6jVPgAnyWTdx52uneVW"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpMaxUint256NP.sol": {
        "keccak256": "0xcd3912cb90a4ccd8c4c0c8c9323c962a36481918134410650bcb4ee1c0971dc2",
        "urls": [
          "bzz-raw://5dd3fd597a3fdde14ce040b665d2fcce95dc6515037acc80a8f5459a07adb850",
          "dweb:/ipfs/QmQiodQK3ZoFCjWcruNQUUjVgfxdZLgcMGTpd3FkVBD2ny"
        ],
        "license": "CAL"
      },
      "src/lib/op/evm/LibOpTimestampNP.sol": {
        "keccak256": "0x719d0f81acaa9346fa550ad92d08ab6ba5e3c75bb1140f60746efbc7838eb982",
        "urls": [
          "bzz-raw://1db9da7838c66c10e1f0f996ff02326d016193176ff65565d75af9d0d28759c5",
          "dweb:/ipfs/QmQXiAFdF3BrnVWfAVd5ubMv7enxB5kc1pN7sh7xf9oztA"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpAnyNP.sol": {
        "keccak256": "0xe2fa954fc42bbe0c44723ee3d90216ec5b7cd77b5a2b14957029abb13d54cf47",
        "urls": [
          "bzz-raw://a03a827507acab08db716c7e2d380f5a77da3371dfb36cca8f3dc89ccdcf75dd",
          "dweb:/ipfs/QmUXaqi1nc6gqJp8CgRSznMY1fcuvP3q2sqZFEkL4vbH7p"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpConditionsNP.sol": {
        "keccak256": "0xaeaf2e1610f805fa60c7187aec3f0c914586f17ece3fca8acc19d12bb10d8ddd",
        "urls": [
          "bzz-raw://30cb7f8bda36da1d11f64e995fd65fd3559aa30ee984457f221414349fa8350b",
          "dweb:/ipfs/QmdyHhhhCo1ZiiktsDC3JQuNQTZ26GELJcFeS4zis5Hjgr"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpEnsureNP.sol": {
        "keccak256": "0xb5b6a808b7db6b2d341be5da4e5e47f4a98232807d416e3ebb6460940f8678dc",
        "urls": [
          "bzz-raw://a2cc14985d89f557869ac438a9be5d5301bfed760424a2778f77ed466408b4d2",
          "dweb:/ipfs/QmUMDJ1Fnyw5GP55VZpW8KGw629ZPgjLwKWcyakW7e2JHd"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpEqualToNP.sol": {
        "keccak256": "0x0c910729104f04e7085d3439cfc3661343d85ee7f2570d18a6292a164b13946d",
        "urls": [
          "bzz-raw://647eaa9e135e2a74fede8d7df0c1d6127b6f807d9dea0ce26d6fc15a6cba3bcb",
          "dweb:/ipfs/Qmcw7M4h33KFFX7GJZHsRQJkAvEMADb25dTm2VfT34FczR"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpEveryNP.sol": {
        "keccak256": "0x9393b10c69e1c2437855fa491996e0035668c2971ad61bee1b1fac90cf70620f",
        "urls": [
          "bzz-raw://97802ea94622ee5dcc44836a5c883bec7c830ec27adaa36b78f3eb0a30cf42c1",
          "dweb:/ipfs/QmZeAvcVL3U5MJY2msEHimVmCEMrdEM4EzwKnrwfbQBs2u"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpGreaterThanNP.sol": {
        "keccak256": "0x8631d104313b4d06fdbba8b5f9080a70c50b72c81d1fa35027197b9b027fdd16",
        "urls": [
          "bzz-raw://eedfeb22f6fbcfd088127c01da5742d9d75f976c36e1fa77bc174f4e01b9d3dc",
          "dweb:/ipfs/QmTnjtoNitGt99U2gKnDehHTaw63vfzczphRyjcNgsehDg"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpGreaterThanOrEqualToNP.sol": {
        "keccak256": "0xe865d600e2619d8eb66126e44f7c8608aaef1b9879fa47a1c5a626b7108532e3",
        "urls": [
          "bzz-raw://17149a826cc7d76f9fb405fd9d4c7ecd4d7a0545769e678f93b72c63b1096717",
          "dweb:/ipfs/QmVSe5inpZE2ABG4VeeCRVrTKcNrdWYG9a7tByBBoMLQJv"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpIfNP.sol": {
        "keccak256": "0x2db4cf41ee053f62c798f50442e0a46f831a581c18fc34090e874a11bdfc9c7c",
        "urls": [
          "bzz-raw://3eb2bbf48552bb869e9e47cfeba1bcf2b50dea72cc7a78021c3dc4f2e083182d",
          "dweb:/ipfs/QmeisvEZ94oxro1oG2LaAJWJf31TKDXSsNUgNRWfKXpnpf"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpIsZeroNP.sol": {
        "keccak256": "0x29464f68cd06c704ae5a3b47419240cd4883adebf8c150aea9c387f0f25260e0",
        "urls": [
          "bzz-raw://d5bf6fdee8e9a78e8ed23cd2eaa193d900de7cc7bfd576a0816515c1a5dce70a",
          "dweb:/ipfs/QmNqqcdoyJG8vSmBYeTgtahWYyaQxK3YBY2pxbDkbT5aHM"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpLessThanNP.sol": {
        "keccak256": "0xb2036f896db97762ed3de5cebc4319b9b2679d159b33cdad154394f57e530372",
        "urls": [
          "bzz-raw://0f3c426ccb39d90ee8e50633f193ee591eb45506877a9d1a6fd50075ade476c4",
          "dweb:/ipfs/QmXZi9QPhbko8Nt6vkPjRyJdaHzaXis9KADoerW8wwtfM2"
        ],
        "license": "CAL"
      },
      "src/lib/op/logic/LibOpLessThanOrEqualToNP.sol": {
        "keccak256": "0xe89dcec789aa4aeac00e2b1ca9fe773d95f252beea1aa945778a3750316d152e",
        "urls": [
          "bzz-raw://314068a92429ed9b49e558c95a78223a9e4a1849737970203b6aec8f3af0b7f6",
          "dweb:/ipfs/QmZ2MDdH1LuqMhzgqJt6n1GowT9nYVoY2RNDrdpRgG6c3j"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18DivNP.sol": {
        "keccak256": "0x691db6e70d1e691cb9ac5ba4a7bb4e13fbf6772916fac5f6d5895340306a28e4",
        "urls": [
          "bzz-raw://4ecaa66ae5ac86d96d6771e20ff80acfca389af9c3b71e20f632d8854ae4d9ef",
          "dweb:/ipfs/QmWyzcKaki9orRNoRjikdmQrWWjGtd1JYZ9GRwaASYKuMH"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18MulNP.sol": {
        "keccak256": "0xc7f0f1b35f0508e7d1818bc3442d103ee3bc0a53cc39198379c1065a3474749d",
        "urls": [
          "bzz-raw://6bc7e1fde53c5c322c3f181630d45f28ba44b0a9bef7caf72bf4aed11de9071a",
          "dweb:/ipfs/QmPeVSLVKHzYzupoofLjsyyRhqScJZ5rEMbJs1EbafaevT"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18Scale18DynamicNP.sol": {
        "keccak256": "0x1395725f712c9d696910723145255f31996464de65f4254d58e2ff5f057b81ad",
        "urls": [
          "bzz-raw://b6ff0901efdfdbee20297807804466770dfafcd6c43c487fa4a954ec292fec71",
          "dweb:/ipfs/QmNWXwCYjRYNpTAZBpnaVqgqPbxxo7qirDzuVKSgKQDdPT"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18Scale18NP.sol": {
        "keccak256": "0x537d39862901a1b4af2f83cb7b8aa6b32b592e5eac4fede3a8be7458e32424b5",
        "urls": [
          "bzz-raw://d556b48bcc23ee694c517793c809200ed0be3d12e2115fa900c292de3561eeb6",
          "dweb:/ipfs/QmUp7avbLk1qiVpUr72bHKFXQFQsk6VJQHRTfbbMKmEyMG"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/decimal18/LibOpDecimal18ScaleNNP.sol": {
        "keccak256": "0x1220c9a143c788cbb2c2fb4e0508357c5a3b66427a3dbe36c2c583642dd921cb",
        "urls": [
          "bzz-raw://8f44d208f81afe71a6baa27a9fe1c7a8cfe55aaa269e06fdcf602064bd2ae5d3",
          "dweb:/ipfs/QmTdEcguiYHkgXEXFHGbN29iFAYc6cSjewUjvHjgyVqKpT"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntAddNP.sol": {
        "keccak256": "0x7ecc63ae8c72a2c6f67e780ba267bf06008392226175b966d6eda1bde6371f01",
        "urls": [
          "bzz-raw://afc0a8e44326471490d908ad994f8e9922fb56ff0228fd89c3c82d8e526a8bbe",
          "dweb:/ipfs/Qmf4ukz5mRMuCV61jBbuorJCzTyD6PW3C9jEifYLJnyLeE"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntDivNP.sol": {
        "keccak256": "0x6416015d8c4a676b30a9c242a897db825ed7dba7719f7f7406b7197fd01d1854",
        "urls": [
          "bzz-raw://e1bacbb2c2113b3619e929a16215f312820e0566935aa05634996e45a7a017cc",
          "dweb:/ipfs/QmUkmYx39knqUftfuuaKJ7Hti2wHJUQcxV9hZ7fbUr5edf"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntExpNP.sol": {
        "keccak256": "0xdbdf576c0aa2b36cb1a2f9b70c32a905528fab2e8a74e31bd9b6a1f8a210c21b",
        "urls": [
          "bzz-raw://4b7f8a9eb04156783728b16bd99ab9a53276fd45c5248c5e90b3347b16b04ad5",
          "dweb:/ipfs/QmZWmci7SNhJWKkYbbBT5iKkMdTWuYU2RN7SaWmrCVEjHS"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntMaxNP.sol": {
        "keccak256": "0x052f392930e3b631c863004e4be3a95cf6e78cf75baee38921271d0db33d90aa",
        "urls": [
          "bzz-raw://aa69fc771ae45235dd1a3ce39ef03c586523f0c2984af1bc9b12139e88aa3320",
          "dweb:/ipfs/QmXS47aaKEhyLB7dJrBLwK8vNLy2V3mznGsNw4ZtGB88tN"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntMinNP.sol": {
        "keccak256": "0xc62d6969711f32071c6daa29176a8de1d9e58707b683a1ae4ce52a9277e64e32",
        "urls": [
          "bzz-raw://5fdaf9bda5ee5fd01f50d2dce57dffa0aded1e2d2496ce438cef416686050386",
          "dweb:/ipfs/QmPYmqHjDxZqGQSy4k7Q8rA9PNEEcHoUSqU9BZKmeuxdAr"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntModNP.sol": {
        "keccak256": "0x1b55f250e601873d552db746d48af97da654467400c9a9047a6a8b99ca44bc36",
        "urls": [
          "bzz-raw://89ecb113fd3dc0f2118b60d7cb363892d4b633e2777ee1ef411d845f19e8a27d",
          "dweb:/ipfs/QmXxA9E6gtLnCs2wdyHRiVj97Z8nTNoQhsNh311HV2pKjm"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntMulNP.sol": {
        "keccak256": "0xf54e63af097828f754cba12d16377139f108f976ac060a112f2b7a356495cccd",
        "urls": [
          "bzz-raw://60c97d9970126dc933075433d03d0df1d0530a72ff9e16f4cc3865b2b07b9364",
          "dweb:/ipfs/QmUi9oYyCxgDwXat8F8BFKCtdZeWfjCBCbzqrTHf3yNQKn"
        ],
        "license": "CAL"
      },
      "src/lib/op/math/int/LibOpIntSubNP.sol": {
        "keccak256": "0x90fdb1f88c538ae68227974134fed1d07581f73d19908e14f4378a2f3fb255c2",
        "urls": [
          "bzz-raw://37ccc2d62e9639a3cb64170799fefc739d116c2d3acc9b1b329b801a40e3bd8c",
          "dweb:/ipfs/QmQ655sq42jiy9sdzWFs1cXKjJMgWrWCj6e65bxwmAvxjZ"
        ],
        "license": "CAL"
      },
      "src/lib/op/store/LibOpGetNP.sol": {
        "keccak256": "0x0a969e9446204e34fceece225be31a6c5199b16ff36037430b3b95494b07bb22",
        "urls": [
          "bzz-raw://c5c14b0ad2595c4e5f0260b3091471799ba34e88446e073feab01be75bb4369a",
          "dweb:/ipfs/QmT8wNGeey9TzrUUweixKgjfHtjPzckqEatJCKqkQ7Vaz3"
        ],
        "license": "CAL"
      },
      "src/lib/op/store/LibOpSetNP.sol": {
        "keccak256": "0x672547e0f7c4448d04f4959e6efd6e3fc81b93ae5fe4e070f19c812b619ab8e6",
        "urls": [
          "bzz-raw://d402053f654fa64981044d0ed0d27b35f6977f62401e8e445bbf27cee6fa56bf",
          "dweb:/ipfs/QmP4b8E8dKkw3rJbLCCLV1UPxyNZDuyB2esDHCaP2yaDUy"
        ],
        "license": "CAL"
      },
      "src/lib/op/uniswap/LibOpUniswapV2AmountIn.sol": {
        "keccak256": "0xb62e7e13945b80d49b898b3c50c3094b7f627fad47a35cb1acb9a18a5d9dd0fe",
        "urls": [
          "bzz-raw://7a4f72f300010c03fd43af444c903dc9d96251a80a8deb6f618a444030bc1956",
          "dweb:/ipfs/QmYzWGomMoeQ6Xo17qfFkfUcEJPebTVPgTtSrZwsnENnDC"
        ],
        "license": "CAL"
      },
      "src/lib/op/uniswap/LibOpUniswapV2AmountOut.sol": {
        "keccak256": "0xc0d34fb18112ddd63c8f3b516f665ae03ea9771942dc095b5b29f98eae588916",
        "urls": [
          "bzz-raw://6aa99580f907f8aaeac3e4367cb7fbf2e4bacda1d133224033cc84df91e567f9",
          "dweb:/ipfs/QmQSzCpUQGBi2TUXLks1JpBvKyzjmaQb3EZQ7Y8hyEYFPe"
        ],
        "license": "CAL"
      },
      "src/lib/op/uniswap/LibOpUniswapV2Quote.sol": {
        "keccak256": "0x96f3896470a7676d34029d6c090a1d0a45f9c7697a92328925412ffa349e17cf",
        "urls": [
          "bzz-raw://881e27cfd15bd48011d0ed0851856a39d6c991ef54d3472551b8ff0d3adc9067",
          "dweb:/ipfs/QmUnJDNX9wCY1mdN38TN1V72N3mWfvM58ySxwhtu5dMcUM"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParse.sol": {
        "keccak256": "0xf0de57f292629cd2e09964897be77f7bf7ba786a06b232be47ab0fa244004287",
        "urls": [
          "bzz-raw://f085a7937788be20e56fdd97e8a66919282c4e25312dc0e8bcf28802b5c175fa",
          "dweb:/ipfs/QmcMycQRt95sFNWoKpg8EUaonTJmFHvr3d11KWM71sHf43"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseCMask.sol": {
        "keccak256": "0x5ec6b865df66bec72ea0976082ce9b7d0250818ee8180cf463861f20eec3b0ff",
        "urls": [
          "bzz-raw://3e6660d651d4d57eadd18b440235f5a63c4bac7dce52a9f065329b47e2ca4fec",
          "dweb:/ipfs/QmNUJs5iPbuZRYmkZc3XzsekRdzdrABoQUPbg5eEGhr2kV"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseLiteral.sol": {
        "keccak256": "0xd36696cc8b1f4f332f82f037e63aaf89b730e10056d93cd59849dc421a33fa93",
        "urls": [
          "bzz-raw://136302dafb7c9626f6bf790a974bcf20db312a753f8cc5a2ff220b699dc276f1",
          "dweb:/ipfs/QmPSQoXqQ1AvvNyseXiEQv35dQyKJ3SzgvmnjmWzecy3aQ"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseMeta.sol": {
        "keccak256": "0x910e6af2fe4281ccc66376d407933fee8601451161e52d80cf7146eb774a3246",
        "urls": [
          "bzz-raw://972dd1416a724a5068717202198617c13754f144ef72ac54b05e991ece148937",
          "dweb:/ipfs/QmdJLRXxPiaPH8vyty3EgEM4zM2dwXbGeiB3mPKqEeBL6J"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseOperand.sol": {
        "keccak256": "0xba1030d096646784f61acf4f742a45a96527f29079b8fb1950c9d537a9717bf6",
        "urls": [
          "bzz-raw://814f78faa0adc4d556028eba971106924511abff3983e754c7275d6a0c3253c3",
          "dweb:/ipfs/QmducXPnyu7Nve3gTjtKxpMTt6ddoEd4JMXduJC3f5hMD3"
        ],
        "license": "CAL"
      },
      "src/lib/parse/LibParseStackName.sol": {
        "keccak256": "0x5c24e0f7b58f751dfe8ea7f900d7d70dea0cf983922d11f02b8c659cadb7aaec",
        "urls": [
          "bzz-raw://aed9fad94c01122517bcc68fea0f89e2dc1c0cf4191dd9f7be0219c1072dbcce",
          "dweb:/ipfs/QmYFvDhR4GvoXNJm8WYjEqmeij33N2trAPr1YnFnLSR2XK"
        ],
        "license": "CAL"
      },
      "src/lib/state/LibInterpreterStateDataContractNP.sol": {
        "keccak256": "0x3015f22cfab5bb672bc08440a1b7fd6a24c64536bbcc6cfa63a744700fed1ac0",
        "urls": [
          "bzz-raw://bee842de1b3e529f02c5c6041678479c9403176fb25a41f9872b86c81b1c0723",
          "dweb:/ipfs/Qmat5yhCsbWxEXUQRMJkdCY8oHZS87kJQg6zJSG12fcQKo"
        ],
        "license": "CAL"
      },
      "src/lib/state/LibInterpreterStateNP.sol": {
        "keccak256": "0x51f187ecc7101939f7d69e7ae775ab9cd96169191c3068e4a68cffc1bb817280",
        "urls": [
          "bzz-raw://d49c7295d8b2a250cea699266df6d14016870052e51b4b9c387dc2be1c8d89da",
          "dweb:/ipfs/QmaHHUK6DgAVixpgUEV4ukuKXmrr4P2m9isTfky9YfeT7z"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/RainterpreterExpressionDeployerNPE2.sol",
    "id": 55439,
    "exportedSymbols": {
      "CONSTRUCTION_META_HASH": [
        55091
      ],
      "DataContractMemoryContainer": [
        52032
      ],
      "ERC165": [
        44079
      ],
      "IERC165": [
        44091
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V3": [
        56545
      ],
      "IERC1820_REGISTRY": [
        52239
      ],
      "IExpressionDeployerV3": [
        56604
      ],
      "IInterpreterStoreV1": [
        56163
      ],
      "IInterpreterV2": [
        56689
      ],
      "INTEGRITY_FUNCTION_POINTERS": [
        55084
      ],
      "INTERPRETER_BYTECODE_HASH": [
        55632
      ],
      "IParserV1": [
        56177
      ],
      "LibAllStandardOpsNP": [
        59728
      ],
      "LibDataContract": [
        52139
      ],
      "LibIntegrityCheckNP": [
        58689
      ],
      "LibInterpreterStateDataContractNP": [
        73424
      ],
      "LibParse": [
        68258
      ],
      "LibParseMeta": [
        72325
      ],
      "LibPointer": [
        53479
      ],
      "LibStackPointer": [
        53642
      ],
      "LibUint256Array": [
        53870
      ],
      "PARSER_BYTECODE_HASH": [
        55764
      ],
      "Pointer": [
        53359
      ],
      "RainterpreterExpressionDeployerNPE2": [
        55438
      ],
      "RainterpreterExpressionDeployerNPE2ConstructionConfig": [
        55100
      ],
      "RainterpreterNPE2": [
        55749
      ],
      "STORE_BYTECODE_HASH": [
        55843
      ],
      "UnexpectedConstructionMetaHash": [
        56029
      ],
      "UnexpectedInterpreterBytecodeHash": [
        56008
      ],
      "UnexpectedParserBytecodeHash": [
        56022
      ],
      "UnexpectedPointers": [
        56001
      ],
      "UnexpectedStoreBytecodeHash": [
        56015
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9325:80",
    "nodes": [
      {
        "id": 55034,
        "nodeType": "PragmaDirective",
        "src": "32:24:80",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 55037,
        "nodeType": "ImportDirective",
        "src": "58:96:80",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "file": "openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 44080,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55035,
              "name": "ERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44079,
              "src": "66:6:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55036,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44091,
              "src": "74:7:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55040,
        "nodeType": "ImportDirective",
        "src": "155:67:80",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibPointer.sol",
        "file": "rain.solmem/lib/LibPointer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 53480,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55038,
              "name": "Pointer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53359,
              "src": "163:7:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55039,
              "name": "LibPointer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53479,
              "src": "172:10:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55042,
        "nodeType": "ImportDirective",
        "src": "223:68:80",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibStackPointer.sol",
        "file": "rain.solmem/lib/LibStackPointer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 53643,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55041,
              "name": "LibStackPointer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53642,
              "src": "231:15:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55045,
        "nodeType": "ImportDirective",
        "src": "292:103:80",
        "nodes": [],
        "absolutePath": "lib/rain.datacontract/src/lib/LibDataContract.sol",
        "file": "rain.datacontract/lib/LibDataContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 52140,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55043,
              "name": "LibDataContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52139,
              "src": "300:15:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55044,
              "name": "DataContractMemoryContainer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52032,
              "src": "317:27:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55047,
        "nodeType": "ImportDirective",
        "src": "396:67:80",
        "nodes": [],
        "absolutePath": "lib/rain.erc1820/src/lib/LibIERC1820.sol",
        "file": "rain.erc1820/lib/LibIERC1820.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 52240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55046,
              "name": "IERC1820_REGISTRY",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52239,
              "src": "404:17:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55049,
        "nodeType": "ImportDirective",
        "src": "464:68:80",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibUint256Array.sol",
        "file": "rain.solmem/lib/LibUint256Array.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 53871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55048,
              "name": "LibUint256Array",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53870,
              "src": "472:15:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55055,
        "nodeType": "ImportDirective",
        "src": "534:206:80",
        "nodes": [],
        "absolutePath": "src/error/ErrDeploy.sol",
        "file": "../error/ErrDeploy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 56030,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55050,
              "name": "UnexpectedConstructionMetaHash",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56029,
              "src": "547:30:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55051,
              "name": "UnexpectedInterpreterBytecodeHash",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56008,
              "src": "583:33:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55052,
              "name": "UnexpectedStoreBytecodeHash",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56015,
              "src": "622:27:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55053,
              "name": "UnexpectedParserBytecodeHash",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56022,
              "src": "655:28:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55054,
              "name": "UnexpectedPointers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56001,
              "src": "689:18:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55058,
        "nodeType": "ImportDirective",
        "src": "741:135:80",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IExpressionDeployerV3.sol",
        "file": "../interface/unstable/IExpressionDeployerV3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 56605,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55056,
              "name": "IExpressionDeployerV3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56604,
              "src": "754:21:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55057,
              "name": "IERC1820_NAME_IEXPRESSION_DEPLOYER_V3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56545,
              "src": "781:37:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55060,
        "nodeType": "ImportDirective",
        "src": "877:53:80",
        "nodes": [],
        "absolutePath": "src/interface/IParserV1.sol",
        "file": "../interface/IParserV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 56178,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55059,
              "name": "IParserV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56177,
              "src": "885:9:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55062,
        "nodeType": "ImportDirective",
        "src": "931:72:80",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IInterpreterV2.sol",
        "file": "../interface/unstable/IInterpreterV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 56690,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55061,
              "name": "IInterpreterV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56689,
              "src": "939:14:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55064,
        "nodeType": "ImportDirective",
        "src": "1004:73:80",
        "nodes": [],
        "absolutePath": "src/interface/IInterpreterStoreV1.sol",
        "file": "../interface/IInterpreterStoreV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 56164,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55063,
              "name": "IInterpreterStoreV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56163,
              "src": "1012:19:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55066,
        "nodeType": "ImportDirective",
        "src": "1079:77:80",
        "nodes": [],
        "absolutePath": "src/lib/integrity/LibIntegrityCheckNP.sol",
        "file": "../lib/integrity/LibIntegrityCheckNP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 58690,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55065,
              "name": "LibIntegrityCheckNP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58689,
              "src": "1087:19:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55068,
        "nodeType": "ImportDirective",
        "src": "1157:101:80",
        "nodes": [],
        "absolutePath": "src/lib/state/LibInterpreterStateDataContractNP.sol",
        "file": "../lib/state/LibInterpreterStateDataContractNP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 73425,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55067,
              "name": "LibInterpreterStateDataContractNP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73424,
              "src": "1165:33:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55070,
        "nodeType": "ImportDirective",
        "src": "1259:70:80",
        "nodes": [],
        "absolutePath": "src/lib/op/LibAllStandardOpsNP.sol",
        "file": "../lib/op/LibAllStandardOpsNP.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 59729,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55069,
              "name": "LibAllStandardOpsNP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59728,
              "src": "1267:19:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55073,
        "nodeType": "ImportDirective",
        "src": "1330:65:80",
        "nodes": [],
        "absolutePath": "src/lib/parse/LibParse.sol",
        "file": "../lib/parse/LibParse.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 68259,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55071,
              "name": "LibParse",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68258,
              "src": "1338:8:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55072,
              "name": "LibParseMeta",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72325,
              "src": "1348:12:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55076,
        "nodeType": "ImportDirective",
        "src": "1396:85:80",
        "nodes": [],
        "absolutePath": "src/concrete/RainterpreterNPE2.sol",
        "file": "./RainterpreterNPE2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 55750,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55074,
              "name": "RainterpreterNPE2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55749,
              "src": "1404:17:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55075,
              "name": "INTERPRETER_BYTECODE_HASH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55632,
              "src": "1423:25:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55078,
        "nodeType": "ImportDirective",
        "src": "1482:67:80",
        "nodes": [],
        "absolutePath": "src/concrete/RainterpreterParserNPE2.sol",
        "file": "./RainterpreterParserNPE2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 55827,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55077,
              "name": "PARSER_BYTECODE_HASH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55764,
              "src": "1490:20:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55080,
        "nodeType": "ImportDirective",
        "src": "1550:65:80",
        "nodes": [],
        "absolutePath": "src/concrete/RainterpreterStoreNPE2.sol",
        "file": "./RainterpreterStoreNPE2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 55439,
        "sourceUnit": 55978,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55079,
              "name": "STORE_BYTECODE_HASH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55843,
              "src": "1558:19:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55084,
        "nodeType": "VariableDeclaration",
        "src": "1677:266:80",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "INTEGRITY_FUNCTION_POINTERS",
        "nameLocation": "1692:27:80",
        "scope": 55439,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes_memory_ptr",
          "typeString": "bytes"
        },
        "typeName": {
          "id": 55082,
          "name": "bytes",
          "nodeType": "ElementaryTypeName",
          "src": "1677:5:80",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes_storage_ptr",
            "typeString": "bytes"
          }
        },
        "value": {
          "hexValue": "0a3e0ab80b1f0b1f0b290b320b4d0bf30bf30c4f0ccb0cd50b1f0b1f0b290ccb0ccb0ccb0ccb0ccb0cdf0d010d2b0b1f0cdf0b1f0b1f0d4d0b290b1f0b1f0d570d570b1f0b290b290d570d570d570d570d570d570d570d570d570d570d570d570b290d6e0d780d780d78",
          "id": 55083,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "hexString",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "1726:217:80",
          "typeDescriptions": {
            "typeIdentifier": "t_stringliteral_e28cd2d96be734c091f9b977e987b3ec1843578a90a56393f863d199ad202676",
            "typeString": "literal_string hex\"0a3e0ab80b1f0b1f0b290b320b4d0bf30bf30c4f0ccb0cd50b1f0b1f0b290ccb0ccb0ccb0ccb0ccb0cdf0d010d2b0b1f0cdf0b1f0b1f0d4d0b290b1f0b1f0d570d570b1f0b290b290d570d570d570d570d570d570d570d570d570d570d570d570b290d6e0d780d780d78\""
          }
        },
        "visibility": "internal"
      },
      {
        "id": 55091,
        "nodeType": "VariableDeclaration",
        "src": "1992:117:80",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CONSTRUCTION_META_HASH",
        "nameLocation": "2009:22:80",
        "scope": 55439,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 55086,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "1992:7:80",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307837613839303334666437613333646638386361343734666632653431336438613266343235656432396630393836363334346163366436303730613330643132",
              "id": 55089,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2042:66:80",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_55424248432817261714131471708873292651922489107934210649916486758903681584402_by_1",
                "typeString": "int_const 5542...(69 digits omitted)...4402"
              },
              "value": "0x7a89034fd7a33df88ca474ff2e413d8a2f425ed29f09866344ac6d6070a30d12"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_55424248432817261714131471708873292651922489107934210649916486758903681584402_by_1",
                "typeString": "int_const 5542...(69 digits omitted)...4402"
              }
            ],
            "id": 55088,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "2034:7:80",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 55087,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2034:7:80",
              "typeDescriptions": {}
            }
          },
          "id": 55090,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "2034:75:80",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 55100,
        "nodeType": "StructDefinition",
        "src": "2383:144:80",
        "nodes": [],
        "canonicalName": "RainterpreterExpressionDeployerNPE2ConstructionConfig",
        "members": [
          {
            "constant": false,
            "id": 55093,
            "mutability": "mutable",
            "name": "interpreter",
            "nameLocation": "2458:11:80",
            "nodeType": "VariableDeclaration",
            "scope": 55100,
            "src": "2450:19:80",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55092,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2450:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 55095,
            "mutability": "mutable",
            "name": "store",
            "nameLocation": "2483:5:80",
            "nodeType": "VariableDeclaration",
            "scope": 55100,
            "src": "2475:13:80",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55094,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2475:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 55097,
            "mutability": "mutable",
            "name": "parser",
            "nameLocation": "2502:6:80",
            "nodeType": "VariableDeclaration",
            "scope": 55100,
            "src": "2494:14:80",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55096,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2494:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 55099,
            "mutability": "mutable",
            "name": "meta",
            "nameLocation": "2520:4:80",
            "nodeType": "VariableDeclaration",
            "scope": 55100,
            "src": "2514:10:80",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 55098,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2514:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "RainterpreterExpressionDeployerNPE2ConstructionConfig",
        "nameLocation": "2390:53:80",
        "scope": 55439,
        "visibility": "public"
      },
      {
        "id": 55438,
        "nodeType": "ContractDefinition",
        "src": "2756:6600:80",
        "nodes": [
          {
            "id": 55109,
            "nodeType": "UsingForDirective",
            "src": "2840:29:80",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 55106,
              "name": "LibPointer",
              "nameLocations": [
                "2846:10:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53479,
              "src": "2846:10:80"
            },
            "typeName": {
              "id": 55108,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55107,
                "name": "Pointer",
                "nameLocations": [
                  "2861:7:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53359,
                "src": "2861:7:80"
              },
              "referencedDeclaration": 53359,
              "src": "2861:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Pointer_$53359",
                "typeString": "Pointer"
              }
            }
          },
          {
            "id": 55113,
            "nodeType": "UsingForDirective",
            "src": "2874:34:80",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 55110,
              "name": "LibStackPointer",
              "nameLocations": [
                "2880:15:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53642,
              "src": "2880:15:80"
            },
            "typeName": {
              "id": 55112,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55111,
                "name": "Pointer",
                "nameLocations": [
                  "2900:7:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53359,
                "src": "2900:7:80"
              },
              "referencedDeclaration": 53359,
              "src": "2900:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Pointer_$53359",
                "typeString": "Pointer"
              }
            }
          },
          {
            "id": 55117,
            "nodeType": "UsingForDirective",
            "src": "2913:36:80",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 55114,
              "name": "LibUint256Array",
              "nameLocations": [
                "2919:15:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53870,
              "src": "2919:15:80"
            },
            "typeName": {
              "baseType": {
                "id": 55115,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2939:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 55116,
              "nodeType": "ArrayTypeName",
              "src": "2939:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 55121,
            "nodeType": "VariableDeclaration",
            "src": "3046:44:80",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 55118,
              "nodeType": "StructuredDocumentation",
              "src": "2955:86:80",
              "text": "The interpreter with known bytecode that this deployer is constructed\n for."
            },
            "functionSelector": "f0cfdd37",
            "mutability": "immutable",
            "name": "iInterpreter",
            "nameLocation": "3078:12:80",
            "scope": 55438,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
              "typeString": "contract IInterpreterV2"
            },
            "typeName": {
              "id": 55120,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55119,
                "name": "IInterpreterV2",
                "nameLocations": [
                  "3046:14:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56689,
                "src": "3046:14:80"
              },
              "referencedDeclaration": 56689,
              "src": "3046:14:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                "typeString": "contract IInterpreterV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 55125,
            "nodeType": "VariableDeclaration",
            "src": "3173:43:80",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 55122,
              "nodeType": "StructuredDocumentation",
              "src": "3096:72:80",
              "text": "The store with known bytecode that this deployer is constructed for."
            },
            "functionSelector": "c19423bc",
            "mutability": "immutable",
            "name": "iStore",
            "nameLocation": "3210:6:80",
            "scope": 55438,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
              "typeString": "contract IInterpreterStoreV1"
            },
            "typeName": {
              "id": 55124,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55123,
                "name": "IInterpreterStoreV1",
                "nameLocations": [
                  "3173:19:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56163,
                "src": "3173:19:80"
              },
              "referencedDeclaration": 56163,
              "src": "3173:19:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                "typeString": "contract IInterpreterStoreV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 55128,
            "nodeType": "VariableDeclaration",
            "src": "3222:34:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "24376855",
            "mutability": "immutable",
            "name": "iParser",
            "nameLocation": "3249:7:80",
            "scope": 55438,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IParserV1_$56177",
              "typeString": "contract IParserV1"
            },
            "typeName": {
              "id": 55127,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 55126,
                "name": "IParserV1",
                "nameLocations": [
                  "3222:9:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56177,
                "src": "3222:9:80"
              },
              "referencedDeclaration": 56177,
              "src": "3222:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IParserV1_$56177",
                "typeString": "contract IParserV1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 55285,
            "nodeType": "FunctionDefinition",
            "src": "3263:2685:80",
            "nodes": [],
            "body": {
              "id": 55284,
              "nodeType": "Block",
              "src": "3344:2604:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55136,
                      "mutability": "mutable",
                      "name": "interpreter",
                      "nameLocation": "3400:11:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55284,
                      "src": "3385:26:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                        "typeString": "contract IInterpreterV2"
                      },
                      "typeName": {
                        "id": 55135,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55134,
                          "name": "IInterpreterV2",
                          "nameLocations": [
                            "3385:14:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56689,
                          "src": "3385:14:80"
                        },
                        "referencedDeclaration": 56689,
                        "src": "3385:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                          "typeString": "contract IInterpreterV2"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55141,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55138,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55131,
                          "src": "3429:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerNPE2ConstructionConfig_$55100_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig memory"
                          }
                        },
                        "id": 55139,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3436:11:80",
                        "memberName": "interpreter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55093,
                        "src": "3429:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55137,
                      "name": "IInterpreterV2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56689,
                      "src": "3414:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IInterpreterV2_$56689_$",
                        "typeString": "type(contract IInterpreterV2)"
                      }
                    },
                    "id": 55140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:34:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                      "typeString": "contract IInterpreterV2"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3385:63:80"
                },
                {
                  "assignments": [
                    55144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55144,
                      "mutability": "mutable",
                      "name": "store",
                      "nameLocation": "3478:5:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55284,
                      "src": "3458:25:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                        "typeString": "contract IInterpreterStoreV1"
                      },
                      "typeName": {
                        "id": 55143,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55142,
                          "name": "IInterpreterStoreV1",
                          "nameLocations": [
                            "3458:19:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56163,
                          "src": "3458:19:80"
                        },
                        "referencedDeclaration": 56163,
                        "src": "3458:19:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                          "typeString": "contract IInterpreterStoreV1"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55149,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55146,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55131,
                          "src": "3506:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerNPE2ConstructionConfig_$55100_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig memory"
                          }
                        },
                        "id": 55147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3513:5:80",
                        "memberName": "store",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55095,
                        "src": "3506:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55145,
                      "name": "IInterpreterStoreV1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56163,
                      "src": "3486:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IInterpreterStoreV1_$56163_$",
                        "typeString": "type(contract IInterpreterStoreV1)"
                      }
                    },
                    "id": 55148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3486:33:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                      "typeString": "contract IInterpreterStoreV1"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3458:61:80"
                },
                {
                  "assignments": [
                    55152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55152,
                      "mutability": "mutable",
                      "name": "parser",
                      "nameLocation": "3539:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55284,
                      "src": "3529:16:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IParserV1_$56177",
                        "typeString": "contract IParserV1"
                      },
                      "typeName": {
                        "id": 55151,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55150,
                          "name": "IParserV1",
                          "nameLocations": [
                            "3529:9:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56177,
                          "src": "3529:9:80"
                        },
                        "referencedDeclaration": 56177,
                        "src": "3529:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IParserV1_$56177",
                          "typeString": "contract IParserV1"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55157,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55154,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55131,
                          "src": "3558:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerNPE2ConstructionConfig_$55100_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig memory"
                          }
                        },
                        "id": 55155,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3565:6:80",
                        "memberName": "parser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55097,
                        "src": "3558:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55153,
                      "name": "IParserV1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56177,
                      "src": "3548:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IParserV1_$56177_$",
                        "typeString": "type(contract IParserV1)"
                      }
                    },
                    "id": 55156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:24:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IParserV1_$56177",
                      "typeString": "contract IParserV1"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3529:43:80"
                },
                {
                  "expression": {
                    "id": 55160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55158,
                      "name": "iInterpreter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55121,
                      "src": "3583:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                        "typeString": "contract IInterpreterV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55159,
                      "name": "interpreter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55136,
                      "src": "3598:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                        "typeString": "contract IInterpreterV2"
                      }
                    },
                    "src": "3583:26:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                      "typeString": "contract IInterpreterV2"
                    }
                  },
                  "id": 55161,
                  "nodeType": "ExpressionStatement",
                  "src": "3583:26:80"
                },
                {
                  "expression": {
                    "id": 55164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55162,
                      "name": "iStore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55125,
                      "src": "3619:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                        "typeString": "contract IInterpreterStoreV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55163,
                      "name": "store",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55144,
                      "src": "3628:5:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                        "typeString": "contract IInterpreterStoreV1"
                      }
                    },
                    "src": "3619:14:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                      "typeString": "contract IInterpreterStoreV1"
                    }
                  },
                  "id": 55165,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:14:80"
                },
                {
                  "expression": {
                    "id": 55168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55166,
                      "name": "iParser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55128,
                      "src": "3643:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IParserV1_$56177",
                        "typeString": "contract IParserV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55167,
                      "name": "parser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55152,
                      "src": "3653:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IParserV1_$56177",
                        "typeString": "contract IParserV1"
                      }
                    },
                    "src": "3643:16:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IParserV1_$56177",
                      "typeString": "contract IParserV1"
                    }
                  },
                  "id": 55169,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:16:80"
                },
                {
                  "assignments": [
                    55172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55172,
                      "mutability": "mutable",
                      "name": "constructionMetaHash",
                      "nameLocation": "3903:20:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55284,
                      "src": "3895:28:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 55171,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3895:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "This IS a security check. This prevents someone making an exact\n bytecode copy of the interpreter and shipping different meta for\n the copy to lie about what each op does in the interpreter.",
                  "id": 55177,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55174,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55131,
                          "src": "3936:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerNPE2ConstructionConfig_$55100_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig memory"
                          }
                        },
                        "id": 55175,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3943:4:80",
                        "memberName": "meta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55099,
                        "src": "3936:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 55173,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3926:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 55176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3926:22:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3895:53:80"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 55181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55178,
                      "name": "constructionMetaHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55172,
                      "src": "3962:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55179,
                        "name": "expectedConstructionMetaHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55410,
                        "src": "3986:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                          "typeString": "function () pure returns (bytes32)"
                        }
                      },
                      "id": 55180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3986:30:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3962:54:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55189,
                  "nodeType": "IfStatement",
                  "src": "3958:176:80",
                  "trueBody": {
                    "id": 55188,
                    "nodeType": "Block",
                    "src": "4018:116:80",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 55183,
                                "name": "expectedConstructionMetaHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55410,
                                "src": "4070:28:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                                  "typeString": "function () pure returns (bytes32)"
                                }
                              },
                              "id": 55184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4070:30:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 55185,
                              "name": "constructionMetaHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55172,
                              "src": "4102:20:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 55182,
                            "name": "UnexpectedConstructionMetaHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56029,
                            "src": "4039:30:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) pure"
                            }
                          },
                          "id": 55186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4039:84:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55187,
                        "nodeType": "RevertStatement",
                        "src": "4032:91:80"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    55191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55191,
                      "mutability": "mutable",
                      "name": "interpreterHash",
                      "nameLocation": "4215:15:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55284,
                      "src": "4207:23:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 55190,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4207:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55192,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4207:23:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4265:67:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4279:43:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "interpreter",
                              "nodeType": "YulIdentifier",
                              "src": "4310:11:80"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "4298:11:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4298:24:80"
                        },
                        "variableNames": [
                          {
                            "name": "interpreterHash",
                            "nodeType": "YulIdentifier",
                            "src": "4279:15:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 55136,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4310:11:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 55191,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4279:15:80",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 55193,
                  "nodeType": "InlineAssembly",
                  "src": "4240:92:80"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 55197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55194,
                      "name": "interpreterHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55191,
                      "src": "4345:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55195,
                        "name": "expectedInterpreterBytecodeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55419,
                        "src": "4364:31:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                          "typeString": "function () pure returns (bytes32)"
                        }
                      },
                      "id": 55196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4364:33:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4345:52:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55205,
                  "nodeType": "IfStatement",
                  "src": "4341:175:80",
                  "trueBody": {
                    "id": 55204,
                    "nodeType": "Block",
                    "src": "4399:117:80",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 55199,
                                "name": "expectedInterpreterBytecodeHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55419,
                                "src": "4454:31:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                                  "typeString": "function () pure returns (bytes32)"
                                }
                              },
                              "id": 55200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4454:33:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 55201,
                              "name": "interpreterHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55191,
                              "src": "4489:15:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 55198,
                            "name": "UnexpectedInterpreterBytecodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56008,
                            "src": "4420:33:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) pure"
                            }
                          },
                          "id": 55202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4420:85:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55203,
                        "nodeType": "RevertStatement",
                        "src": "4413:92:80"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    55207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55207,
                      "mutability": "mutable",
                      "name": "storeHash",
                      "nameLocation": "4591:9:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55284,
                      "src": "4583:17:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 55206,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4583:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55208,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4583:17:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4635:55:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4649:31:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "store",
                              "nodeType": "YulIdentifier",
                              "src": "4674:5:80"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "4662:11:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4662:18:80"
                        },
                        "variableNames": [
                          {
                            "name": "storeHash",
                            "nodeType": "YulIdentifier",
                            "src": "4649:9:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 55144,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4674:5:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 55207,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4649:9:80",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 55209,
                  "nodeType": "InlineAssembly",
                  "src": "4610:80:80"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 55213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55210,
                      "name": "storeHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55207,
                      "src": "4703:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55211,
                        "name": "expectedStoreBytecodeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55428,
                        "src": "4716:25:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                          "typeString": "function () pure returns (bytes32)"
                        }
                      },
                      "id": 55212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4716:27:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4703:40:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55221,
                  "nodeType": "IfStatement",
                  "src": "4699:145:80",
                  "trueBody": {
                    "id": 55220,
                    "nodeType": "Block",
                    "src": "4745:99:80",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 55215,
                                "name": "expectedStoreBytecodeHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55428,
                                "src": "4794:25:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                                  "typeString": "function () pure returns (bytes32)"
                                }
                              },
                              "id": 55216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4794:27:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 55217,
                              "name": "storeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55207,
                              "src": "4823:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 55214,
                            "name": "UnexpectedStoreBytecodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56015,
                            "src": "4766:27:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) pure"
                            }
                          },
                          "id": 55218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4766:67:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55219,
                        "nodeType": "RevertStatement",
                        "src": "4759:74:80"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    55223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55223,
                      "mutability": "mutable",
                      "name": "parserHash",
                      "nameLocation": "4919:10:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55284,
                      "src": "4911:18:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 55222,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4911:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55224,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4911:18:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4964:57:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4978:33:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "parser",
                              "nodeType": "YulIdentifier",
                              "src": "5004:6:80"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "4992:11:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4992:19:80"
                        },
                        "variableNames": [
                          {
                            "name": "parserHash",
                            "nodeType": "YulIdentifier",
                            "src": "4978:10:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 55152,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5004:6:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 55223,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4978:10:80",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 55225,
                  "nodeType": "InlineAssembly",
                  "src": "4939:82:80"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 55229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55226,
                      "name": "parserHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55223,
                      "src": "5034:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55227,
                        "name": "expectedParserBytecodeHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55437,
                        "src": "5048:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                          "typeString": "function () pure returns (bytes32)"
                        }
                      },
                      "id": 55228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5048:28:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5034:42:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55237,
                  "nodeType": "IfStatement",
                  "src": "5030:150:80",
                  "trueBody": {
                    "id": 55236,
                    "nodeType": "Block",
                    "src": "5078:102:80",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 55231,
                                "name": "expectedParserBytecodeHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55437,
                                "src": "5128:26:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                                  "typeString": "function () pure returns (bytes32)"
                                }
                              },
                              "id": 55232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5128:28:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 55233,
                              "name": "parserHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55223,
                              "src": "5158:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 55230,
                            "name": "UnexpectedParserBytecodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56022,
                            "src": "5099:28:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) pure"
                            }
                          },
                          "id": 55234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5099:70:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55235,
                        "nodeType": "RevertStatement",
                        "src": "5092:77:80"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5345:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5349:6:80",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5345:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 55243,
                            "name": "interpreter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55136,
                            "src": "5365:11:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                              "typeString": "contract IInterpreterV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                              "typeString": "contract IInterpreterV2"
                            }
                          ],
                          "id": 55242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5357:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5357:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5357:20:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 55247,
                            "name": "store",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55144,
                            "src": "5387:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                              "typeString": "contract IInterpreterStoreV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                              "typeString": "contract IInterpreterStoreV1"
                            }
                          ],
                          "id": 55246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5379:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5379:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5379:14:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 55251,
                            "name": "parser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55152,
                            "src": "5403:6:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IParserV1_$56177",
                              "typeString": "contract IParserV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IParserV1_$56177",
                              "typeString": "contract IParserV1"
                            }
                          ],
                          "id": 55250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5395:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55249,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5395:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5395:15:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 55253,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55131,
                          "src": "5412:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerNPE2ConstructionConfig_$55100_memory_ptr",
                            "typeString": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig memory"
                          }
                        },
                        "id": 55254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5419:4:80",
                        "memberName": "meta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55099,
                        "src": "5412:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 55238,
                      "name": "DISPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56584,
                      "src": "5337:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,bytes memory)"
                      }
                    },
                    "id": 55255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5337:87:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55256,
                  "nodeType": "EmitStatement",
                  "src": "5332:92:80"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55259,
                              "name": "IERC1820_REGISTRY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52239,
                              "src": "5708:17:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1820Registry_$52229",
                                "typeString": "contract IERC1820Registry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC1820Registry_$52229",
                                "typeString": "contract IERC1820Registry"
                              }
                            ],
                            "id": 55258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5700:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 55257,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5700:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5700:26:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 55261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5727:4:80",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "5700:31:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 55262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5732:6:80",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5700:38:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 55263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5741:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5700:42:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55283,
                  "nodeType": "IfStatement",
                  "src": "5696:246:80",
                  "trueBody": {
                    "id": 55282,
                    "nodeType": "Block",
                    "src": "5744:198:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 55270,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5825:4:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNPE2_$55438",
                                    "typeString": "contract RainterpreterExpressionDeployerNPE2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNPE2_$55438",
                                    "typeString": "contract RainterpreterExpressionDeployerNPE2"
                                  }
                                ],
                                "id": 55269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5817:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 55268,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5817:7:80",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 55271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5817:13:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 55274,
                                  "name": "IERC1820_NAME_IEXPRESSION_DEPLOYER_V3",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56545,
                                  "src": "5864:37:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 55272,
                                  "name": "IERC1820_REGISTRY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52239,
                                  "src": "5832:17:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1820Registry_$52229",
                                    "typeString": "contract IERC1820Registry"
                                  }
                                },
                                "id": 55273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5850:13:80",
                                "memberName": "interfaceHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52200,
                                "src": "5832:31:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (string memory) pure external returns (bytes32)"
                                }
                              },
                              "id": 55275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5832:70:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 55278,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5912:4:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNPE2_$55438",
                                    "typeString": "contract RainterpreterExpressionDeployerNPE2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RainterpreterExpressionDeployerNPE2_$55438",
                                    "typeString": "contract RainterpreterExpressionDeployerNPE2"
                                  }
                                ],
                                "id": 55277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5904:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 55276,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5904:7:80",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 55279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5904:13:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 55265,
                              "name": "IERC1820_REGISTRY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52239,
                              "src": "5758:17:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1820Registry_$52229",
                                "typeString": "contract IERC1820Registry"
                              }
                            },
                            "id": 55267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5776:23:80",
                            "memberName": "setInterfaceImplementer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52182,
                            "src": "5758:41:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (address,bytes32,address) external"
                            }
                          },
                          "id": 55280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5758:173:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55281,
                        "nodeType": "ExpressionStatement",
                        "src": "5758:173:80"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55131,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "3336:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 55285,
                  "src": "3275:67:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerNPE2ConstructionConfig_$55100_memory_ptr",
                    "typeString": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig"
                  },
                  "typeName": {
                    "id": 55130,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55129,
                      "name": "RainterpreterExpressionDeployerNPE2ConstructionConfig",
                      "nameLocations": [
                        "3275:53:80"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55100,
                      "src": "3275:53:80"
                    },
                    "referencedDeclaration": 55100,
                    "src": "3275:53:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RainterpreterExpressionDeployerNPE2ConstructionConfig_$55100_storage_ptr",
                      "typeString": "struct RainterpreterExpressionDeployerNPE2ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3274:69:80"
            },
            "returnParameters": {
              "id": 55133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3344:0:80"
            },
            "scope": 55438,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55309,
            "nodeType": "FunctionDefinition",
            "src": "5982:213:80",
            "nodes": [],
            "body": {
              "id": 55308,
              "nodeType": "Block",
              "src": "6073:122:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 55306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 55299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 55294,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55288,
                        "src": "6090:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55296,
                              "name": "IExpressionDeployerV3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56604,
                              "src": "6110:21:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IExpressionDeployerV3_$56604_$",
                                "typeString": "type(contract IExpressionDeployerV3)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IExpressionDeployerV3_$56604_$",
                                "typeString": "type(contract IExpressionDeployerV3)"
                              }
                            ],
                            "id": 55295,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6105:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 55297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6105:27:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IExpressionDeployerV3_$56604",
                            "typeString": "type(contract IExpressionDeployerV3)"
                          }
                        },
                        "id": 55298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6133:11:80",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "6105:39:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "6090:54:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 55305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 55300,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55288,
                        "src": "6148:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 55302,
                              "name": "IERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44091,
                              "src": "6168:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$44091_$",
                                "typeString": "type(contract IERC165)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$44091_$",
                                "typeString": "type(contract IERC165)"
                              }
                            ],
                            "id": 55301,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6163:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 55303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6163:13:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$44091",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 55304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6177:11:80",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "6163:25:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "6148:40:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6090:98:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 55293,
                  "id": 55307,
                  "nodeType": "Return",
                  "src": "6083:105:80"
                }
              ]
            },
            "baseFunctions": [
              44078
            ],
            "documentation": {
              "id": 55286,
              "nodeType": "StructuredDocumentation",
              "src": "5954:23:80",
              "text": "@inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "5991:17:80",
            "overrides": {
              "id": 55290,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6049:8:80"
            },
            "parameters": {
              "id": 55289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55288,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "6016:11:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 55309,
                  "src": "6009:18:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 55287,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6009:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6008:20:80"
            },
            "returnParameters": {
              "id": 55293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55309,
                  "src": "6067:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 55291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6067:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6066:6:80"
            },
            "scope": 55438,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 55390,
            "nodeType": "FunctionDefinition",
            "src": "6243:1083:80",
            "nodes": [],
            "body": {
              "id": 55389,
              "nodeType": "Block",
              "src": "6435:891:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    55329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55329,
                      "mutability": "mutable",
                      "name": "io",
                      "nameLocation": "6458:2:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55389,
                      "src": "6445:15:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 55328,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6445:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55336,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55332,
                        "name": "INTEGRITY_FUNCTION_POINTERS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55084,
                        "src": "6499:27:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 55333,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55312,
                        "src": "6528:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 55334,
                        "name": "constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55315,
                        "src": "6538:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 55330,
                        "name": "LibIntegrityCheckNP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58689,
                        "src": "6463:19:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibIntegrityCheckNP_$58689_$",
                          "typeString": "type(library LibIntegrityCheckNP)"
                        }
                      },
                      "id": 55331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6483:15:80",
                      "memberName": "integrityCheck2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58688,
                      "src": "6463:35:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,uint256[] memory) view returns (bytes memory)"
                      }
                    },
                    "id": 55335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6463:85:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6445:103:80"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55338,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6578:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6582:6:80",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6578:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55340,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55312,
                        "src": "6590:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 55341,
                        "name": "constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55315,
                        "src": "6600:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 55337,
                      "name": "NewExpression",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56556,
                      "src": "6564:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256[] memory)"
                      }
                    },
                    "id": 55342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6564:46:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55343,
                  "nodeType": "EmitStatement",
                  "src": "6559:51:80"
                },
                {
                  "assignments": [
                    55346,
                    55349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55346,
                      "mutability": "mutable",
                      "name": "container",
                      "nameLocation": "6650:9:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55389,
                      "src": "6622:37:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$52032",
                        "typeString": "DataContractMemoryContainer"
                      },
                      "typeName": {
                        "id": 55345,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55344,
                          "name": "DataContractMemoryContainer",
                          "nameLocations": [
                            "6622:27:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52032,
                          "src": "6622:27:80"
                        },
                        "referencedDeclaration": 52032,
                        "src": "6622:27:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$52032",
                          "typeString": "DataContractMemoryContainer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55349,
                      "mutability": "mutable",
                      "name": "pointer",
                      "nameLocation": "6669:7:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55389,
                      "src": "6661:15:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$53359",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 55348,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55347,
                          "name": "Pointer",
                          "nameLocations": [
                            "6661:7:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53359,
                          "src": "6661:7:80"
                        },
                        "referencedDeclaration": 53359,
                        "src": "6661:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$53359",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55358,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 55354,
                            "name": "bytecode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55312,
                            "src": "6771:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 55355,
                            "name": "constants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55315,
                            "src": "6781:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 55352,
                            "name": "LibInterpreterStateDataContractNP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73424,
                            "src": "6721:33:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibInterpreterStateDataContractNP_$73424_$",
                              "typeString": "type(library LibInterpreterStateDataContractNP)"
                            }
                          },
                          "id": 55353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6755:15:80",
                          "memberName": "serializeSizeNP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73334,
                          "src": "6721:49:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory,uint256[] memory) pure returns (uint256)"
                          }
                        },
                        "id": 55356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6721:70:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 55350,
                        "name": "LibDataContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52139,
                        "src": "6692:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDataContract_$52139_$",
                          "typeString": "type(library LibDataContract)"
                        }
                      },
                      "id": 55351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6708:12:80",
                      "memberName": "newContainer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52056,
                      "src": "6692:28:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_userDefinedValueType$_DataContractMemoryContainer_$52032_$_t_userDefinedValueType$_Pointer_$53359_$",
                        "typeString": "function (uint256) pure returns (DataContractMemoryContainer,Pointer)"
                      }
                    },
                    "id": 55357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6692:100:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_DataContractMemoryContainer_$52032_$_t_userDefinedValueType$_Pointer_$53359_$",
                      "typeString": "tuple(DataContractMemoryContainer,Pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6621:171:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55362,
                        "name": "pointer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55349,
                        "src": "6966:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$53359",
                          "typeString": "Pointer"
                        }
                      },
                      {
                        "id": 55363,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55312,
                        "src": "6975:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 55364,
                        "name": "constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55315,
                        "src": "6985:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$53359",
                          "typeString": "Pointer"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 55359,
                        "name": "LibInterpreterStateDataContractNP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73424,
                        "src": "6914:33:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibInterpreterStateDataContractNP_$73424_$",
                          "typeString": "type(library LibInterpreterStateDataContractNP)"
                        }
                      },
                      "id": 55361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6948:17:80",
                      "memberName": "unsafeSerializeNP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73361,
                      "src": "6914:51:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$53359_$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (Pointer,bytes memory,uint256[] memory) pure"
                      }
                    },
                    "id": 55365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6914:81:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55366,
                  "nodeType": "ExpressionStatement",
                  "src": "6914:81:80"
                },
                {
                  "assignments": [
                    55368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55368,
                      "mutability": "mutable",
                      "name": "expression",
                      "nameLocation": "7067:10:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 55389,
                      "src": "7059:18:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 55367,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7059:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55373,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55371,
                        "name": "container",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55346,
                        "src": "7102:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$52032",
                          "typeString": "DataContractMemoryContainer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_DataContractMemoryContainer_$52032",
                          "typeString": "DataContractMemoryContainer"
                        }
                      ],
                      "expression": {
                        "id": 55369,
                        "name": "LibDataContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52139,
                        "src": "7080:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDataContract_$52139_$",
                          "typeString": "type(library LibDataContract)"
                        }
                      },
                      "id": 55370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7096:5:80",
                      "memberName": "write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52086,
                      "src": "7080:21:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_DataContractMemoryContainer_$52032_$returns$_t_address_$",
                        "typeString": "function (DataContractMemoryContainer) returns (address)"
                      }
                    },
                    "id": 55372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7080:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7059:53:80"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7214:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 55376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7218:6:80",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7214:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55377,
                        "name": "iInterpreter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55121,
                        "src": "7226:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                          "typeString": "contract IInterpreterV2"
                        }
                      },
                      {
                        "id": 55378,
                        "name": "iStore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55125,
                        "src": "7240:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                          "typeString": "contract IInterpreterStoreV1"
                        }
                      },
                      {
                        "id": 55379,
                        "name": "expression",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55368,
                        "src": "7248:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55380,
                        "name": "io",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55329,
                        "src": "7260:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                          "typeString": "contract IInterpreterV2"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                          "typeString": "contract IInterpreterStoreV1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 55374,
                      "name": "DeployedExpression",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56571,
                      "src": "7195:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IInterpreterV2_$56689_$_t_contract$_IInterpreterStoreV1_$56163_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IInterpreterV2,contract IInterpreterStoreV1,address,bytes memory)"
                      }
                    },
                    "id": 55381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7195:68:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55382,
                  "nodeType": "EmitStatement",
                  "src": "7190:73:80"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 55383,
                        "name": "iInterpreter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55121,
                        "src": "7282:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                          "typeString": "contract IInterpreterV2"
                        }
                      },
                      {
                        "id": 55384,
                        "name": "iStore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55125,
                        "src": "7296:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                          "typeString": "contract IInterpreterStoreV1"
                        }
                      },
                      {
                        "id": 55385,
                        "name": "expression",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55368,
                        "src": "7304:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 55386,
                        "name": "io",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55329,
                        "src": "7316:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 55387,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7281:38:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IInterpreterV2_$56689_$_t_contract$_IInterpreterStoreV1_$56163_$_t_address_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(contract IInterpreterV2,contract IInterpreterStoreV1,address,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 55327,
                  "id": 55388,
                  "nodeType": "Return",
                  "src": "7274:45:80"
                }
              ]
            },
            "baseFunctions": [
              56603
            ],
            "documentation": {
              "id": 55310,
              "nodeType": "StructuredDocumentation",
              "src": "6201:37:80",
              "text": "@inheritdoc IExpressionDeployerV3"
            },
            "functionSelector": "b7f14403",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployExpression2",
            "nameLocation": "6252:17:80",
            "parameters": {
              "id": 55316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55312,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "6283:8:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 55390,
                  "src": "6270:21:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55311,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6270:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55315,
                  "mutability": "mutable",
                  "name": "constants",
                  "nameLocation": "6310:9:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 55390,
                  "src": "6293:26:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55313,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6293:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55314,
                    "nodeType": "ArrayTypeName",
                    "src": "6293:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6269:51:80"
            },
            "returnParameters": {
              "id": 55327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55390,
                  "src": "6371:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                    "typeString": "contract IInterpreterV2"
                  },
                  "typeName": {
                    "id": 55318,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55317,
                      "name": "IInterpreterV2",
                      "nameLocations": [
                        "6371:14:80"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56689,
                      "src": "6371:14:80"
                    },
                    "referencedDeclaration": 56689,
                    "src": "6371:14:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterV2_$56689",
                      "typeString": "contract IInterpreterV2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55322,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55390,
                  "src": "6387:19:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                    "typeString": "contract IInterpreterStoreV1"
                  },
                  "typeName": {
                    "id": 55321,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55320,
                      "name": "IInterpreterStoreV1",
                      "nameLocations": [
                        "6387:19:80"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56163,
                      "src": "6387:19:80"
                    },
                    "referencedDeclaration": 56163,
                    "src": "6387:19:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterpreterStoreV1_$56163",
                      "typeString": "contract IInterpreterStoreV1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55324,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55390,
                  "src": "6408:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6408:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55326,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55390,
                  "src": "6417:12:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55325,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6417:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6370:60:80"
            },
            "scope": 55438,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 55401,
            "nodeType": "FunctionDefinition",
            "src": "8092:153:80",
            "nodes": [],
            "body": {
              "id": 55400,
              "nodeType": "Block",
              "src": "8174:71:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 55396,
                        "name": "LibAllStandardOpsNP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59728,
                        "src": "8191:19:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibAllStandardOpsNP_$59728_$",
                          "typeString": "type(library LibAllStandardOpsNP)"
                        }
                      },
                      "id": 55397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8211:25:80",
                      "memberName": "integrityFunctionPointers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59544,
                      "src": "8191:45:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 55398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8191:47:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 55395,
                  "id": 55399,
                  "nodeType": "Return",
                  "src": "8184:54:80"
                }
              ]
            },
            "documentation": {
              "id": 55391,
              "nodeType": "StructuredDocumentation",
              "src": "7332:755:80",
              "text": "Defines all the function pointers to integrity checks. This is the\n expression deployer's equivalent of the opcode function pointers and\n follows a near identical dispatch process. These are never compiled into\n source and are instead indexed into directly by the integrity check. The\n indexing into integrity pointers (which has an out of bounds check) is a\n proxy for enforcing that all opcode pointers exist at runtime, so the\n length of the integrity pointers MUST match the length of opcode function\n pointers. This function is `virtual` so that it can be overridden\n pairwise with overrides to `functionPointers` on `Rainterpreter`.\n @return The list of integrity function pointers."
            },
            "functionSelector": "8d614591",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "integrityFunctionPointers",
            "nameLocation": "8101:25:80",
            "parameters": {
              "id": 55392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8126:2:80"
            },
            "returnParameters": {
              "id": 55395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55394,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55401,
                  "src": "8160:12:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55393,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8160:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8159:14:80"
            },
            "scope": 55438,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 55410,
            "nodeType": "FunctionDefinition",
            "src": "8624:124:80",
            "nodes": [],
            "body": {
              "id": 55409,
              "nodeType": "Block",
              "src": "8702:46:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55407,
                    "name": "CONSTRUCTION_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55091,
                    "src": "8719:22:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 55406,
                  "id": 55408,
                  "nodeType": "Return",
                  "src": "8712:29:80"
                }
              ]
            },
            "documentation": {
              "id": 55402,
              "nodeType": "StructuredDocumentation",
              "src": "8251:368:80",
              "text": "Virtual function to return the expected construction meta hash.\n Public so that external tooling can read it, although this should be\n considered deprecated. The intended workflow is that tooling uses a real\n evm to deploy the full dispair and reads the hashes from errors using a\n trail/error approach until a full dispair is deployed."
            },
            "functionSelector": "005f6613",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "expectedConstructionMetaHash",
            "nameLocation": "8633:28:80",
            "parameters": {
              "id": 55403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8661:2:80"
            },
            "returnParameters": {
              "id": 55406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55405,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55410,
                  "src": "8693:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55404,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8693:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8692:9:80"
            },
            "scope": 55438,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 55419,
            "nodeType": "FunctionDefinition",
            "src": "8829:132:80",
            "nodes": [],
            "body": {
              "id": 55418,
              "nodeType": "Block",
              "src": "8912:49:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55416,
                    "name": "INTERPRETER_BYTECODE_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55632,
                    "src": "8929:25:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 55415,
                  "id": 55417,
                  "nodeType": "Return",
                  "src": "8922:32:80"
                }
              ]
            },
            "documentation": {
              "id": 55411,
              "nodeType": "StructuredDocumentation",
              "src": "8754:70:80",
              "text": "Virtual function to return the expected interpreter bytecode hash."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "expectedInterpreterBytecodeHash",
            "nameLocation": "8838:31:80",
            "parameters": {
              "id": 55412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8869:2:80"
            },
            "returnParameters": {
              "id": 55415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55414,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55419,
                  "src": "8903:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55413,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8903:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8902:9:80"
            },
            "scope": 55438,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 55428,
            "nodeType": "FunctionDefinition",
            "src": "9036:120:80",
            "nodes": [],
            "body": {
              "id": 55427,
              "nodeType": "Block",
              "src": "9113:43:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55425,
                    "name": "STORE_BYTECODE_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55843,
                    "src": "9130:19:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 55424,
                  "id": 55426,
                  "nodeType": "Return",
                  "src": "9123:26:80"
                }
              ]
            },
            "documentation": {
              "id": 55420,
              "nodeType": "StructuredDocumentation",
              "src": "8967:64:80",
              "text": "Virtual function to return the expected store bytecode hash."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "expectedStoreBytecodeHash",
            "nameLocation": "9045:25:80",
            "parameters": {
              "id": 55421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9070:2:80"
            },
            "returnParameters": {
              "id": 55424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55428,
                  "src": "9104:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55422,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9104:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9103:9:80"
            },
            "scope": 55438,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 55437,
            "nodeType": "FunctionDefinition",
            "src": "9232:122:80",
            "nodes": [],
            "body": {
              "id": 55436,
              "nodeType": "Block",
              "src": "9310:44:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55434,
                    "name": "PARSER_BYTECODE_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55764,
                    "src": "9327:20:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 55433,
                  "id": 55435,
                  "nodeType": "Return",
                  "src": "9320:27:80"
                }
              ]
            },
            "documentation": {
              "id": 55429,
              "nodeType": "StructuredDocumentation",
              "src": "9162:65:80",
              "text": "Virtual function to return the expected parser bytecode hash."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "expectedParserBytecodeHash",
            "nameLocation": "9241:26:80",
            "parameters": {
              "id": 55430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9267:2:80"
            },
            "returnParameters": {
              "id": 55433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55437,
                  "src": "9301:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55431,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9301:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9300:9:80"
            },
            "scope": 55438,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 55102,
              "name": "IExpressionDeployerV3",
              "nameLocations": [
                "2804:21:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56604,
              "src": "2804:21:80"
            },
            "id": 55103,
            "nodeType": "InheritanceSpecifier",
            "src": "2804:21:80"
          },
          {
            "baseName": {
              "id": 55104,
              "name": "ERC165",
              "nameLocations": [
                "2827:6:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44079,
              "src": "2827:6:80"
            },
            "id": 55105,
            "nodeType": "InheritanceSpecifier",
            "src": "2827:6:80"
          }
        ],
        "canonicalName": "RainterpreterExpressionDeployerNPE2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 55101,
          "nodeType": "StructuredDocumentation",
          "src": "2529:227:80",
          "text": "@title RainterpreterExpressionDeployerNPE2\n @notice !!!EXPERIMENTAL!!! This is the deployer for the RainterpreterNPE2\n interpreter. Notably includes onchain parsing/compiling of expressions from\n Rainlang strings."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55438,
          44079,
          44091,
          56604
        ],
        "name": "RainterpreterExpressionDeployerNPE2",
        "nameLocation": "2765:35:80",
        "scope": 55439,
        "usedErrors": [
          52019,
          55984,
          55991,
          55994,
          56008,
          56015,
          56022,
          56029,
          56944,
          56949,
          56954,
          56959,
          56964,
          56969,
          56976,
          58356,
          58365,
          58374,
          58381,
          58388,
          58728,
          58854,
          59059,
          60685
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 80
}