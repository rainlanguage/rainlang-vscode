{
  "name": "rainlang-vscode",
  "displayName": "Rain Language",
  "publisher": "rainprotocol",
  "description": "Rain Protocol language (rainlang) implementation for vscode",
  "author": "Rain Protocol",
  "license": "CAL-1.0",
  "version": "1.3.7",
  "private": true,
  "main": "./dist/node/client",
  "browser": "./dist/browser/client",
  "homepage": "http://rainprotocol.xyz/",
  "repository": {
    "type": "git",
    "url": "https://github.com/rainprotocol/rainlang-vscode"
  },
  "bugs": {
    "url": "https://github.com/rainprotocol/rainlang-vscode/issues"
  },
  "icon": "./docs/images/rain-logo-800px.png",
  "galleryBanner": {
    "color": "#e0e0e0",
    "theme": "light"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Formatters"
  ],
  "keywords": [
    "rainprotocol",
    "rain",
    "blockchain",
    "ethereum",
    "evm"
  ],
  "engines": {
    "vscode": "^1.75.0"
  },
  "contributes": {
    "commands": [
      {
        "command": "rainlang.compile",
        "title": "Rainlang Compile"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == rainlang",
          "command": "rainlang.compile"
        }
      ]
    },
    "languages": [
      {
        "id": "rainlang",
        "aliases": [
          "Rain Language",
          "Rain",
          "rain",
          "rainlang",
          "Rainlang",
          "RainLang"
        ],
        "extensions": [
          ".rain"
        ],
        "configuration": "./rain-language-configuration.json",
        "icon": {
          "light": "./docs/images/rain-logo-icon.svg",
          "dark": "./docs/images/rain-logo-icon.svg"
        }
      }
    ],
    "jsonValidation": [{
      "fileMatch": "*.rain.json",
      "url": "./config.schema.json"
    }],
    "configurationDefaults": {
      "[rainlang]": {
        "editor.semanticHighlighting.enabled": true,
        "editor.language.colorizedBracketPairs": [
          [
            "<",
            ">"
          ],
          [
            "(",
            ")"
          ],
          [
            "{",
            "}"
          ],
          [
            "[",
            "]"
          ]
        ]
      }
    },
    "configuration": {
      "type": "object",
      "title": "Rain Language",
      "properties": {
        "rainlang.config": {
          "scope": "resource",
          "title": "Rain Config Path",
          "description": "Path to the rain config file (must end with *.rain.json) in case 'config.rain.json' doesn't exist in current workspace root directory, it is recommended that the config file be placed at root directory of workspace with the name 'config.rain.json', so only use this option if that not possible",
          "type": "string",
          "pattern": "^(\\./)(\\.\\/|\\.\\.\\/|[^]*\\/)*[^]+\\.rain.json$"
        },
        "rainlang.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        }
      }
    },
    "grammars": [
      {
        "language": "rainlang",
        "scopeName": "source.rainlang",
        "path": "./syntaxes/rainlang-syntax.json"
      },
      {
        "path": "./syntaxes/rainlang-injection.json",
        "scopeName": "rainlang-string.injection",
        "injectTo": [
          "source.js",
          "source.js.jsx",
          "source.jsx",
          "source.ts",
          "source.tsx"
        ],
        "embeddedLanguages": {
          "meta.embedded.rainlang": "rainlang"
        }
      }
    ],
    "semanticTokenScopes": [
      {
        "language": "rainlang",
        "scopes": {
          "keyword.declaration": [
            "string.regexp.rainlang"
          ]
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run build-prod",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "build": "rimraf ./dist && npm run build-node-dev && npm run build-browser-dev",
    "build-prod": "rimraf ./dist && npm run build-node-prod && npm run build-browser-prod",
    "build-node-dev": "webpack --config ./webpack.config.js",
    "build-node-prod": "webpack --config ./webpack.config.js --env production",
    "build-browser-dev": "webpack --config ./webpack.config.js --env browser",
    "build-browser-prod": "webpack --config ./webpack.config.js --env production --env browser",
    "lint": "eslint .",
    "lint-fix": "eslint . --fix",
    "compile-test": "rimraf ./test/out && tsc -b ./test && webpack -c ./test/webpack.config.js",
    "test": "npm run build && npm run compile-test && node ./test/out/desktop/runTest.js && node ./test/out/web/runTest.js",
    "test-web": "npm run build && npm run compile-test && node ./test/out/web/runTest.js",
    "test-desktop": "npm run build && npm run compile-test && node ./test/out/desktop/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "^16.11.7",
    "@types/vscode": "^1.75.1",
    "@types/webpack-env": "^1.18.0",
    "@typescript-eslint/eslint-plugin": "^5.54.0",
    "@typescript-eslint/parser": "^5.54.0",
    "@vscode/test-electron": "^2.2.3",
    "@vscode/test-web": "^0.0.41",
    "@vscode/vsce": "^2.18.0",
    "assert": "^2.0.0",
    "buffer": "^6.0.3",
    "crypto-browserify": "^3.12.0",
    "esbuild": "^0.17.11",
    "eslint": "^8.35.0",
    "mocha": "^10.2.0",
    "node-polyfill-webpack-plugin": "^2.0.1",
    "path-browserify": "^1.0.1",
    "process": "^0.11.10",
    "rimraf": "^4.4.1",
    "terser-webpack-plugin": "^5.3.7",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.5",
    "webpack": "^5.77.0",
    "webpack-cli": "^5.0.1",
    "webpack-node-externals": "^3.0.0"
  }
}
