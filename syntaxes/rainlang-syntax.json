{
  "fileTypes": ["rain", "rainlang", "rl"],
  "name": "Rain Language",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#hash"
    },
    {
      "include": "#operator"
    },
    {
      "include": "#opcode"
    },
    {
      "include": "#alias"
    },
    {
      "include": "#number"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "include": "#comment-block"
        }
      ]
    },
    "comment-block": {
      "begin": "/\\*",
      "end": "\\*/",
      "name": "comment.block.rainlang"
    },
    "operator": {
      "patterns": [
        {
          "include": "#operator-assignment"
        }
      ]
    },
    "operator-assignment": {
      "match": "(\\:)",
      "name": "keyword.operator.assignment.rainlang"
    },
    "hash": {
      "match": "(?<=\\s|^)(@)(0x[a-fA-F0-9]+)(?=\\s|$)",
      "captures": {
        "1": {
          "name": "storage.meta-hash.rainlang"
        },
        "2": {
          "name": "variable.other.constant.meta-hash.rainlang"
        }
      }
    },
    "number": {
      "patterns": [
        {
          "include": "#number-normal"
        },
        {
          "include": "#number-e"
        },
        {
          "include": "#number-hex"
        },
        {
          "include": "#number-binary"
        }
      ]
    },
    "number-normal": {
      "match": "\\b([0-9]+)\\b",
      "name": "constant.numeric.normal.rainlang"
    },
    "number-e": {
      "match": "\\b([1-9][0-9]*e[0-9]+)\\b",
      "name": "constant.numeric.e.rainlang"
    },
    "number-hex": {
      "match": "\\b(0x[a-fA-F0-9]+)\\b",
      "name": "constant.numeric.hexadecimal.rainlang"
    },
    "number-binary": {
      "match": "\\b(0b[0-1]+)\\b",
      "name": "constant.numeric.binary.rainlang"
    },
    "opcode": {
      "match": "\\b([a-z][a-z0-9\\-]*(?=[\\(\\<]))",
      "captures": {
        "1": {
          "name": "keyword.control.opcode.rainlang"
        }
      }
    },
    "alias": {
      "patterns": [
        {
          "match": "\\b([a-z][0-9a-z\\-]*)\\b",
          "captures": {
            "1": {
              "name": "variable.alias.rainlang"
            }
          }
        },
        {
          "match": "\\b(_)\\b",
          "name": "keyword.output-placeholder.rainlang"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "match": ";",
          "name": "punctuation.terminator.statement.rainlang"
        },
        {
          "match": ",",
          "name": "punctuation.separator.rainlang"
        },
        {
          "match": "\\<",
          "name": "punctuation.operand.begin.rainlang"
        },
        {
          "match": "\\>",
          "name": "punctuation.operand.end.rainlang"
        },
        {
          "match": "\\{",
          "name": "punctuation.brace.curly.begin"
        },
        {
          "match": "\\}",
          "name": "punctuation.brace.curly.end"
        },
        {
          "match": "\\[",
          "name": "punctuation.brace.square.begin.rainlang"
        },
        {
          "match": "\\]",
          "name": "punctuation.brace.square.end.rainlang"
        },
        {
          "match": "\\(",
          "name": "punctuation.parameters.begin.rainlang"
        },
        {
          "match": "\\)",
          "name": "punctuation.parameters.end.rainlang"
        }
      ]
    }
  },
  "scopeName": "source.rainlang",
  "uuid": "4a2eb52d-02e5-46fd-848a-0648e20ef769"
}